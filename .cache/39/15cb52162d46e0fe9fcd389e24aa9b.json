{"id":"node_modules/ag-grid-community/dist/lib/entities/column.js","dependencies":[{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/package.json","includedInParent":true,"mtime":1567446810165},{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/package.json","includedInParent":true,"mtime":1567183294748},{"name":"../eventService","loc":{"line":18,"column":29},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/column.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/eventService.js"},{"name":"../utils","loc":{"line":19,"column":22},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/column.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/utils/index.js"},{"name":"../context/context","loc":{"line":20,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/column.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/context/context.js"},{"name":"../gridOptionsWrapper","loc":{"line":21,"column":35},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/column.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridOptionsWrapper.js"},{"name":"../columnController/columnUtils","loc":{"line":22,"column":28},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/column.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/columnUtils.js"},{"name":"../columnController/columnApi","loc":{"line":23,"column":26},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/column.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/columnApi.js"},{"name":"../gridApi","loc":{"line":24,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/column.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridApi.js"}],"generated":{"js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventService_1 = require(\"../eventService\");\nvar utils_1 = require(\"../utils\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnUtils_1 = require(\"../columnController/columnUtils\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\n// Wrapper around a user provide column definition. The grid treats the column definition as ready only.\n// This class contains all the runtime information about a column, plus some logic (the definition has no logic).\n// This class implements both interfaces ColumnGroupChild and OriginalColumnGroupChild as the class can\n// appear as a child of either the original tree or the displayed tree. However the relevant group classes\n// for each type only implements one, as each group can only appear in it's associated tree (eg OriginalColumnGroup\n// can only appear in OriginalColumn tree).\nvar Column = /** @class */ (function () {\n    function Column(colDef, userProvidedColDef, colId, primary) {\n        this.moving = false;\n        this.menuVisible = false;\n        this.filterActive = false;\n        this.eventService = new eventService_1.EventService();\n        this.rowGroupActive = false;\n        this.pivotActive = false;\n        this.aggregationActive = false;\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n        this.visible = !colDef.hide;\n        this.sort = colDef.sort;\n        this.sortedAt = colDef.sortedAt;\n        this.colId = colId;\n        this.primary = primary;\n    }\n    // gets called when user provides an alternative colDef, eg\n    Column.prototype.setColDef = function (colDef, userProvidedColDef) {\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n    };\n    Column.prototype.getUserProvidedColDef = function () {\n        return this.userProvidedColDef;\n    };\n    Column.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Column.prototype.getParent = function () {\n        return this.parent;\n    };\n    Column.prototype.setOriginalParent = function (originalParent) {\n        this.originalParent = originalParent;\n    };\n    Column.prototype.getOriginalParent = function () {\n        return this.originalParent;\n    };\n    // this is done after constructor as it uses gridOptionsWrapper\n    Column.prototype.initialise = function () {\n        this.setPinned(this.colDef.pinned);\n        var minColWidth = this.gridOptionsWrapper.getMinColWidth();\n        var maxColWidth = this.gridOptionsWrapper.getMaxColWidth();\n        if (this.colDef.minWidth) {\n            this.minWidth = this.colDef.minWidth;\n        }\n        else {\n            this.minWidth = minColWidth;\n        }\n        if (this.colDef.maxWidth) {\n            this.maxWidth = this.colDef.maxWidth;\n        }\n        else {\n            this.maxWidth = maxColWidth;\n        }\n        this.actualWidth = this.columnUtils.calculateColInitialWidth(this.colDef);\n        var suppressDotNotation = this.gridOptionsWrapper.isSuppressFieldDotNotation();\n        this.fieldContainsDots = utils_1._.exists(this.colDef.field) && this.colDef.field.indexOf('.') >= 0 && !suppressDotNotation;\n        this.tooltipFieldContainsDots = utils_1._.exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf('.') >= 0 && !suppressDotNotation;\n        this.validate();\n    };\n    Column.prototype.isEmptyGroup = function () {\n        return false;\n    };\n    Column.prototype.isRowGroupDisplayed = function (colId) {\n        if (utils_1._.missing(this.colDef) || utils_1._.missing(this.colDef.showRowGroup)) {\n            return false;\n        }\n        var showingAllGroups = this.colDef.showRowGroup === true;\n        var showingThisGroup = this.colDef.showRowGroup === colId;\n        return showingAllGroups || showingThisGroup;\n    };\n    Column.prototype.getUniqueId = function () {\n        return this.getId();\n    };\n    Column.prototype.isPrimary = function () {\n        return this.primary;\n    };\n    Column.prototype.isFilterAllowed = function () {\n        // filter defined means it's a string, class or true.\n        // if its false, null or undefined then it's false.\n        var filterDefined = !!this.colDef.filter || !!this.colDef.filterFramework;\n        return this.primary && filterDefined;\n    };\n    Column.prototype.isFieldContainsDots = function () {\n        return this.fieldContainsDots;\n    };\n    Column.prototype.isTooltipFieldContainsDots = function () {\n        return this.tooltipFieldContainsDots;\n    };\n    Column.prototype.validate = function () {\n        var colDefAny = this.colDef;\n        if (!this.gridOptionsWrapper.isEnterprise()) {\n            var itemsNotAllowedWithoutEnterprise = ['enableRowGroup', 'rowGroup', 'rowGroupIndex', 'enablePivot', 'enableValue', 'pivot', 'pivotIndex', 'aggFunc', 'chartDataType'];\n            itemsNotAllowedWithoutEnterprise.forEach(function (item) {\n                if (utils_1._.exists(colDefAny[item])) {\n                    console.warn(\"ag-Grid: \" + item + \" is only valid in ag-Grid-Enterprise, your column definition should not have \" + item);\n                }\n            });\n        }\n        if (this.gridOptionsWrapper.isTreeData()) {\n            var itemsNotAllowedWithTreeData = ['rowGroup', 'rowGroupIndex', 'pivot', 'pivotIndex'];\n            itemsNotAllowedWithTreeData.forEach(function (item) {\n                if (utils_1._.exists(colDefAny[item])) {\n                    console.warn(\"ag-Grid: \" + item + \" is not possible when doing tree data, your column definition should not have \" + item);\n                }\n            });\n        }\n        if (utils_1._.exists(this.colDef.width) && typeof this.colDef.width !== 'number') {\n            console.warn('ag-Grid: colDef.width should be a number, not ' + typeof this.colDef.width);\n        }\n        if (utils_1._.get(this, 'colDef.cellRendererParams.restrictToOneGroup', null)) {\n            console.warn('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.restrictToOneGroup is deprecated. You should use showRowGroup');\n        }\n        if (utils_1._.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n            console.warn('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator');\n        }\n        if (utils_1._.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n            console.warn('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator');\n        }\n        if (colDefAny.floatingCellRenderer) {\n            console.warn('ag-Grid: since v11, floatingCellRenderer is now pinnedRowCellRenderer');\n            this.colDef.pinnedRowCellRenderer = colDefAny.floatingCellRenderer;\n        }\n        if (colDefAny.floatingRendererFramework) {\n            console.warn('ag-Grid: since v11, floatingRendererFramework is now pinnedRowCellRendererFramework');\n            this.colDef.pinnedRowCellRendererFramework = colDefAny.floatingRendererFramework;\n        }\n        if (colDefAny.floatingRendererParams) {\n            console.warn('ag-Grid: since v11, floatingRendererParams is now pinnedRowCellRendererParams');\n            this.colDef.pinnedRowCellRendererParams = colDefAny.floatingRendererParams;\n        }\n        if (colDefAny.floatingValueFormatter) {\n            console.warn('ag-Grid: since v11, floatingValueFormatter is now pinnedRowValueFormatter');\n            this.colDef.pinnedRowValueFormatter = colDefAny.floatingValueFormatter;\n        }\n        if (colDefAny.cellFormatter) {\n            console.warn('ag-Grid: since v12, cellFormatter is now valueFormatter');\n            if (utils_1._.missing(this.colDef.valueFormatter)) {\n                this.colDef.valueFormatter = colDefAny.cellFormatter;\n            }\n        }\n        if (colDefAny.headerCellTemplate) {\n            console.warn('ag-Grid: since v15, headerCellTemplate is gone, use header component instead.');\n        }\n        if (colDefAny.headerCellRenderer) {\n            console.warn('ag-Grid: since v15, headerCellRenderer is gone, use header component instead.');\n        }\n        if (colDefAny.volatile) {\n            console.warn('ag-Grid: since v16, colDef.volatile is gone, please check refresh docs on how to refresh specific cells.');\n        }\n        if (colDefAny.suppressSorting) {\n            console.warn(\"ag-Grid: since v20, colDef.suppressSorting is gone, instead use colDef.sortable=false.\", this.colDef);\n            this.colDef.sortable = false;\n        }\n        if (colDefAny.suppressFilter) {\n            console.warn(\"ag-Grid: since v20, colDef.suppressFilter is gone, instead use colDef.filter=false.\", this.colDef);\n            this.colDef.filter = false;\n        }\n        if (colDefAny.suppressResize) {\n            console.warn(\"ag-Grid: since v20, colDef.suppressResize is gone, instead use colDef.resizable=false.\", this.colDef);\n            this.colDef.resizable = false;\n        }\n        if (colDefAny.tooltip) {\n            console.warn(\"ag-Grid: since v20.1, colDef.tooltip is gone, instead use colDef.tooltipValueGetter.\", this.colDef);\n            this.colDef.tooltipValueGetter = colDefAny.tooltip;\n        }\n    };\n    Column.prototype.addEventListener = function (eventType, listener) {\n        this.eventService.addEventListener(eventType, listener);\n    };\n    Column.prototype.removeEventListener = function (eventType, listener) {\n        this.eventService.removeEventListener(eventType, listener);\n    };\n    Column.prototype.createIsColumnFuncParams = function (rowNode) {\n        return {\n            node: rowNode,\n            data: rowNode.data,\n            column: this,\n            colDef: this.colDef,\n            context: this.gridOptionsWrapper.getContext(),\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi()\n        };\n    };\n    Column.prototype.isSuppressNavigable = function (rowNode) {\n        // if boolean set, then just use it\n        if (typeof this.colDef.suppressNavigable === 'boolean') {\n            return this.colDef.suppressNavigable;\n        }\n        // if function, then call the function to find out\n        if (typeof this.colDef.suppressNavigable === 'function') {\n            var params = this.createIsColumnFuncParams(rowNode);\n            var userFunc = this.colDef.suppressNavigable;\n            return userFunc(params);\n        }\n        return false;\n    };\n    Column.prototype.isCellEditable = function (rowNode) {\n        // only allow editing of groups if the user has this option enabled\n        if (rowNode.group && !this.gridOptionsWrapper.isEnableGroupEdit()) {\n            return false;\n        }\n        return this.isColumnFunc(rowNode, this.colDef.editable);\n    };\n    Column.prototype.isRowDrag = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n    };\n    Column.prototype.isDndSource = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.dndSource);\n    };\n    Column.prototype.isCellCheckboxSelection = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n    };\n    Column.prototype.isSuppressPaste = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n    };\n    Column.prototype.isResizable = function () {\n        return this.colDef.resizable === true;\n    };\n    Column.prototype.isColumnFunc = function (rowNode, value) {\n        // if boolean set, then just use it\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        // if function, then call the function to find out\n        if (typeof value === 'function') {\n            var params = this.createIsColumnFuncParams(rowNode);\n            var editableFunc = value;\n            return editableFunc(params);\n        }\n        return false;\n    };\n    Column.prototype.setMoving = function (moving, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.moving = moving;\n        this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MOVING_CHANGED, source));\n    };\n    Column.prototype.createColumnEvent = function (type, source) {\n        return {\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            type: type,\n            column: this,\n            columns: [this],\n            source: source\n        };\n    };\n    Column.prototype.isMoving = function () {\n        return this.moving;\n    };\n    Column.prototype.getSort = function () {\n        return this.sort;\n    };\n    Column.prototype.setSort = function (sort, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.sort !== sort) {\n            this.sort = sort;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_SORT_CHANGED, source));\n        }\n    };\n    Column.prototype.setMenuVisible = function (visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.menuVisible !== visible) {\n            this.menuVisible = visible;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MENU_VISIBLE_CHANGED, source));\n        }\n    };\n    Column.prototype.isMenuVisible = function () {\n        return this.menuVisible;\n    };\n    Column.prototype.isSortAscending = function () {\n        return this.sort === Column.SORT_ASC;\n    };\n    Column.prototype.isSortDescending = function () {\n        return this.sort === Column.SORT_DESC;\n    };\n    Column.prototype.isSortNone = function () {\n        return utils_1._.missing(this.sort);\n    };\n    Column.prototype.isSorting = function () {\n        return utils_1._.exists(this.sort);\n    };\n    Column.prototype.getSortedAt = function () {\n        return this.sortedAt;\n    };\n    Column.prototype.setSortedAt = function (sortedAt) {\n        this.sortedAt = sortedAt;\n    };\n    Column.prototype.setAggFunc = function (aggFunc) {\n        this.aggFunc = aggFunc;\n    };\n    Column.prototype.getAggFunc = function () {\n        return this.aggFunc;\n    };\n    Column.prototype.getLeft = function () {\n        return this.left;\n    };\n    Column.prototype.getOldLeft = function () {\n        return this.oldLeft;\n    };\n    Column.prototype.getRight = function () {\n        return this.left + this.actualWidth;\n    };\n    Column.prototype.setLeft = function (left, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.oldLeft = this.left;\n        if (this.left !== left) {\n            this.left = left;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LEFT_CHANGED, source));\n        }\n    };\n    Column.prototype.isFilterActive = function () {\n        return this.filterActive;\n    };\n    // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n    Column.prototype.setFilterActive = function (active, source, additionalEventAttributes) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.filterActive !== active) {\n            this.filterActive = active;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FILTER_ACTIVE_CHANGED, source));\n        }\n        var filterChangedEvent = this.createColumnEvent(Column.EVENT_FILTER_CHANGED, source);\n        if (additionalEventAttributes) {\n            utils_1._.mergeDeep(filterChangedEvent, additionalEventAttributes);\n        }\n        this.eventService.dispatchEvent(filterChangedEvent);\n    };\n    Column.prototype.setPinned = function (pinned) {\n        if (pinned === true || pinned === Column.PINNED_LEFT) {\n            this.pinned = Column.PINNED_LEFT;\n        }\n        else if (pinned === Column.PINNED_RIGHT) {\n            this.pinned = Column.PINNED_RIGHT;\n        }\n        else {\n            this.pinned = null;\n        }\n    };\n    Column.prototype.setFirstRightPinned = function (firstRightPinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.firstRightPinned !== firstRightPinned) {\n            this.firstRightPinned = firstRightPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FIRST_RIGHT_PINNED_CHANGED, source));\n        }\n    };\n    Column.prototype.setLastLeftPinned = function (lastLeftPinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.lastLeftPinned !== lastLeftPinned) {\n            this.lastLeftPinned = lastLeftPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LAST_LEFT_PINNED_CHANGED, source));\n        }\n    };\n    Column.prototype.isFirstRightPinned = function () {\n        return this.firstRightPinned;\n    };\n    Column.prototype.isLastLeftPinned = function () {\n        return this.lastLeftPinned;\n    };\n    Column.prototype.isPinned = function () {\n        return this.pinned === Column.PINNED_LEFT || this.pinned === Column.PINNED_RIGHT;\n    };\n    Column.prototype.isPinnedLeft = function () {\n        return this.pinned === Column.PINNED_LEFT;\n    };\n    Column.prototype.isPinnedRight = function () {\n        return this.pinned === Column.PINNED_RIGHT;\n    };\n    Column.prototype.getPinned = function () {\n        return this.pinned;\n    };\n    Column.prototype.setVisible = function (visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        var newValue = visible === true;\n        if (this.visible !== newValue) {\n            this.visible = newValue;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VISIBLE_CHANGED, source));\n        }\n    };\n    Column.prototype.isVisible = function () {\n        return this.visible;\n    };\n    Column.prototype.getColDef = function () {\n        return this.colDef;\n    };\n    Column.prototype.getColumnGroupShow = function () {\n        return this.colDef.columnGroupShow;\n    };\n    Column.prototype.getColId = function () {\n        return this.colId;\n    };\n    Column.prototype.getId = function () {\n        return this.getColId();\n    };\n    Column.prototype.getDefinition = function () {\n        return this.colDef;\n    };\n    Column.prototype.getActualWidth = function () {\n        return this.actualWidth;\n    };\n    Column.prototype.createBaseColDefParams = function (rowNode) {\n        var params = {\n            node: rowNode,\n            data: rowNode.data,\n            colDef: this.colDef,\n            column: this,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            context: this.gridOptionsWrapper.getContext()\n        };\n        return params;\n    };\n    Column.prototype.getColSpan = function (rowNode) {\n        if (utils_1._.missing(this.colDef.colSpan)) {\n            return 1;\n        }\n        var params = this.createBaseColDefParams(rowNode);\n        var colSpan = this.colDef.colSpan(params);\n        // colSpan must be number equal to or greater than 1\n        return Math.max(colSpan, 1);\n    };\n    Column.prototype.getRowSpan = function (rowNode) {\n        if (utils_1._.missing(this.colDef.rowSpan)) {\n            return 1;\n        }\n        var params = this.createBaseColDefParams(rowNode);\n        var rowSpan = this.colDef.rowSpan(params);\n        // rowSpan must be number equal to or greater than 1\n        return Math.max(rowSpan, 1);\n    };\n    Column.prototype.setActualWidth = function (actualWidth, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.actualWidth !== actualWidth) {\n            this.actualWidth = actualWidth;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_WIDTH_CHANGED, source));\n        }\n    };\n    Column.prototype.isGreaterThanMax = function (width) {\n        if (this.maxWidth) {\n            return width > this.maxWidth;\n        }\n        return false;\n    };\n    Column.prototype.getMinWidth = function () {\n        return this.minWidth;\n    };\n    Column.prototype.getMaxWidth = function () {\n        return this.maxWidth;\n    };\n    Column.prototype.setMinimum = function (source) {\n        if (source === void 0) { source = \"api\"; }\n        this.setActualWidth(this.minWidth, source);\n    };\n    Column.prototype.setRowGroupActive = function (rowGroup, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.rowGroupActive !== rowGroup) {\n            this.rowGroupActive = rowGroup;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_ROW_GROUP_CHANGED, source));\n        }\n    };\n    Column.prototype.isRowGroupActive = function () {\n        return this.rowGroupActive;\n    };\n    Column.prototype.setPivotActive = function (pivot, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.pivotActive !== pivot) {\n            this.pivotActive = pivot;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_PIVOT_CHANGED, source));\n        }\n    };\n    Column.prototype.isPivotActive = function () {\n        return this.pivotActive;\n    };\n    Column.prototype.isAnyFunctionActive = function () {\n        return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n    };\n    Column.prototype.isAnyFunctionAllowed = function () {\n        return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n    };\n    Column.prototype.setValueActive = function (value, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.aggregationActive !== value) {\n            this.aggregationActive = value;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VALUE_CHANGED, source));\n        }\n    };\n    Column.prototype.isValueActive = function () {\n        return this.aggregationActive;\n    };\n    Column.prototype.isAllowPivot = function () {\n        return this.colDef.enablePivot === true;\n    };\n    Column.prototype.isAllowValue = function () {\n        return this.colDef.enableValue === true;\n    };\n    Column.prototype.isAllowRowGroup = function () {\n        return this.colDef.enableRowGroup === true;\n    };\n    Column.prototype.getMenuTabs = function (defaultValues) {\n        var menuTabs = this.getColDef().menuTabs;\n        if (menuTabs == null) {\n            menuTabs = defaultValues;\n        }\n        return menuTabs;\n    };\n    // this used to be needed, as previous version of ag-grid had lockPosition as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockPosition = function () {\n        console.warn('ag-Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead.');\n        return this.colDef ? !!this.colDef.lockPosition : false;\n    };\n    // this used to be needed, as previous version of ag-grid had lockVisible as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockVisible = function () {\n        console.warn('ag-Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead.');\n        return this.colDef ? !!this.colDef.lockVisible : false;\n    };\n    // this used to be needed, as previous version of ag-grid had lockPinned as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockPinned = function () {\n        console.warn('ag-Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead.');\n        return this.colDef ? !!this.colDef.lockPinned : false;\n    };\n    // + renderedHeaderCell - for making header cell transparent when moving\n    Column.EVENT_MOVING_CHANGED = 'movingChanged';\n    // + renderedCell - changing left position\n    Column.EVENT_LEFT_CHANGED = 'leftChanged';\n    // + renderedCell - changing width\n    Column.EVENT_WIDTH_CHANGED = 'widthChanged';\n    // + renderedCell - for changing pinned classes\n    Column.EVENT_LAST_LEFT_PINNED_CHANGED = 'lastLeftPinnedChanged';\n    Column.EVENT_FIRST_RIGHT_PINNED_CHANGED = 'firstRightPinnedChanged';\n    // + renderedColumn - for changing visibility icon\n    Column.EVENT_VISIBLE_CHANGED = 'visibleChanged';\n    // + every time the filter changes, used in the floating filters\n    Column.EVENT_FILTER_CHANGED = 'filterChanged';\n    // + renderedHeaderCell - marks the header with filter icon\n    Column.EVENT_FILTER_ACTIVE_CHANGED = 'filterActiveChanged';\n    // + renderedHeaderCell - marks the header with sort icon\n    Column.EVENT_SORT_CHANGED = 'sortChanged';\n    Column.EVENT_MENU_VISIBLE_CHANGED = 'menuVisibleChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_ROW_GROUP_CHANGED = 'columnRowGroupChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_PIVOT_CHANGED = 'columnPivotChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_VALUE_CHANGED = 'columnValueChanged';\n    Column.PINNED_RIGHT = 'right';\n    Column.PINNED_LEFT = 'left';\n    Column.SORT_ASC = 'asc';\n    Column.SORT_DESC = 'desc';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], Column.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnUtils'),\n        __metadata(\"design:type\", columnUtils_1.ColumnUtils)\n    ], Column.prototype, \"columnUtils\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], Column.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], Column.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Column.prototype, \"initialise\", null);\n    return Column;\n}());\nexports.Column = Column;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/column.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}}],"sources":{"node_modules/ag-grid-community/dist/lib/entities/column.js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventService_1 = require(\"../eventService\");\nvar utils_1 = require(\"../utils\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnUtils_1 = require(\"../columnController/columnUtils\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\n// Wrapper around a user provide column definition. The grid treats the column definition as ready only.\n// This class contains all the runtime information about a column, plus some logic (the definition has no logic).\n// This class implements both interfaces ColumnGroupChild and OriginalColumnGroupChild as the class can\n// appear as a child of either the original tree or the displayed tree. However the relevant group classes\n// for each type only implements one, as each group can only appear in it's associated tree (eg OriginalColumnGroup\n// can only appear in OriginalColumn tree).\nvar Column = /** @class */ (function () {\n    function Column(colDef, userProvidedColDef, colId, primary) {\n        this.moving = false;\n        this.menuVisible = false;\n        this.filterActive = false;\n        this.eventService = new eventService_1.EventService();\n        this.rowGroupActive = false;\n        this.pivotActive = false;\n        this.aggregationActive = false;\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n        this.visible = !colDef.hide;\n        this.sort = colDef.sort;\n        this.sortedAt = colDef.sortedAt;\n        this.colId = colId;\n        this.primary = primary;\n    }\n    // gets called when user provides an alternative colDef, eg\n    Column.prototype.setColDef = function (colDef, userProvidedColDef) {\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n    };\n    Column.prototype.getUserProvidedColDef = function () {\n        return this.userProvidedColDef;\n    };\n    Column.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Column.prototype.getParent = function () {\n        return this.parent;\n    };\n    Column.prototype.setOriginalParent = function (originalParent) {\n        this.originalParent = originalParent;\n    };\n    Column.prototype.getOriginalParent = function () {\n        return this.originalParent;\n    };\n    // this is done after constructor as it uses gridOptionsWrapper\n    Column.prototype.initialise = function () {\n        this.setPinned(this.colDef.pinned);\n        var minColWidth = this.gridOptionsWrapper.getMinColWidth();\n        var maxColWidth = this.gridOptionsWrapper.getMaxColWidth();\n        if (this.colDef.minWidth) {\n            this.minWidth = this.colDef.minWidth;\n        }\n        else {\n            this.minWidth = minColWidth;\n        }\n        if (this.colDef.maxWidth) {\n            this.maxWidth = this.colDef.maxWidth;\n        }\n        else {\n            this.maxWidth = maxColWidth;\n        }\n        this.actualWidth = this.columnUtils.calculateColInitialWidth(this.colDef);\n        var suppressDotNotation = this.gridOptionsWrapper.isSuppressFieldDotNotation();\n        this.fieldContainsDots = utils_1._.exists(this.colDef.field) && this.colDef.field.indexOf('.') >= 0 && !suppressDotNotation;\n        this.tooltipFieldContainsDots = utils_1._.exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf('.') >= 0 && !suppressDotNotation;\n        this.validate();\n    };\n    Column.prototype.isEmptyGroup = function () {\n        return false;\n    };\n    Column.prototype.isRowGroupDisplayed = function (colId) {\n        if (utils_1._.missing(this.colDef) || utils_1._.missing(this.colDef.showRowGroup)) {\n            return false;\n        }\n        var showingAllGroups = this.colDef.showRowGroup === true;\n        var showingThisGroup = this.colDef.showRowGroup === colId;\n        return showingAllGroups || showingThisGroup;\n    };\n    Column.prototype.getUniqueId = function () {\n        return this.getId();\n    };\n    Column.prototype.isPrimary = function () {\n        return this.primary;\n    };\n    Column.prototype.isFilterAllowed = function () {\n        // filter defined means it's a string, class or true.\n        // if its false, null or undefined then it's false.\n        var filterDefined = !!this.colDef.filter || !!this.colDef.filterFramework;\n        return this.primary && filterDefined;\n    };\n    Column.prototype.isFieldContainsDots = function () {\n        return this.fieldContainsDots;\n    };\n    Column.prototype.isTooltipFieldContainsDots = function () {\n        return this.tooltipFieldContainsDots;\n    };\n    Column.prototype.validate = function () {\n        var colDefAny = this.colDef;\n        if (!this.gridOptionsWrapper.isEnterprise()) {\n            var itemsNotAllowedWithoutEnterprise = ['enableRowGroup', 'rowGroup', 'rowGroupIndex', 'enablePivot', 'enableValue', 'pivot', 'pivotIndex', 'aggFunc', 'chartDataType'];\n            itemsNotAllowedWithoutEnterprise.forEach(function (item) {\n                if (utils_1._.exists(colDefAny[item])) {\n                    console.warn(\"ag-Grid: \" + item + \" is only valid in ag-Grid-Enterprise, your column definition should not have \" + item);\n                }\n            });\n        }\n        if (this.gridOptionsWrapper.isTreeData()) {\n            var itemsNotAllowedWithTreeData = ['rowGroup', 'rowGroupIndex', 'pivot', 'pivotIndex'];\n            itemsNotAllowedWithTreeData.forEach(function (item) {\n                if (utils_1._.exists(colDefAny[item])) {\n                    console.warn(\"ag-Grid: \" + item + \" is not possible when doing tree data, your column definition should not have \" + item);\n                }\n            });\n        }\n        if (utils_1._.exists(this.colDef.width) && typeof this.colDef.width !== 'number') {\n            console.warn('ag-Grid: colDef.width should be a number, not ' + typeof this.colDef.width);\n        }\n        if (utils_1._.get(this, 'colDef.cellRendererParams.restrictToOneGroup', null)) {\n            console.warn('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.restrictToOneGroup is deprecated. You should use showRowGroup');\n        }\n        if (utils_1._.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n            console.warn('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator');\n        }\n        if (utils_1._.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n            console.warn('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator');\n        }\n        if (colDefAny.floatingCellRenderer) {\n            console.warn('ag-Grid: since v11, floatingCellRenderer is now pinnedRowCellRenderer');\n            this.colDef.pinnedRowCellRenderer = colDefAny.floatingCellRenderer;\n        }\n        if (colDefAny.floatingRendererFramework) {\n            console.warn('ag-Grid: since v11, floatingRendererFramework is now pinnedRowCellRendererFramework');\n            this.colDef.pinnedRowCellRendererFramework = colDefAny.floatingRendererFramework;\n        }\n        if (colDefAny.floatingRendererParams) {\n            console.warn('ag-Grid: since v11, floatingRendererParams is now pinnedRowCellRendererParams');\n            this.colDef.pinnedRowCellRendererParams = colDefAny.floatingRendererParams;\n        }\n        if (colDefAny.floatingValueFormatter) {\n            console.warn('ag-Grid: since v11, floatingValueFormatter is now pinnedRowValueFormatter');\n            this.colDef.pinnedRowValueFormatter = colDefAny.floatingValueFormatter;\n        }\n        if (colDefAny.cellFormatter) {\n            console.warn('ag-Grid: since v12, cellFormatter is now valueFormatter');\n            if (utils_1._.missing(this.colDef.valueFormatter)) {\n                this.colDef.valueFormatter = colDefAny.cellFormatter;\n            }\n        }\n        if (colDefAny.headerCellTemplate) {\n            console.warn('ag-Grid: since v15, headerCellTemplate is gone, use header component instead.');\n        }\n        if (colDefAny.headerCellRenderer) {\n            console.warn('ag-Grid: since v15, headerCellRenderer is gone, use header component instead.');\n        }\n        if (colDefAny.volatile) {\n            console.warn('ag-Grid: since v16, colDef.volatile is gone, please check refresh docs on how to refresh specific cells.');\n        }\n        if (colDefAny.suppressSorting) {\n            console.warn(\"ag-Grid: since v20, colDef.suppressSorting is gone, instead use colDef.sortable=false.\", this.colDef);\n            this.colDef.sortable = false;\n        }\n        if (colDefAny.suppressFilter) {\n            console.warn(\"ag-Grid: since v20, colDef.suppressFilter is gone, instead use colDef.filter=false.\", this.colDef);\n            this.colDef.filter = false;\n        }\n        if (colDefAny.suppressResize) {\n            console.warn(\"ag-Grid: since v20, colDef.suppressResize is gone, instead use colDef.resizable=false.\", this.colDef);\n            this.colDef.resizable = false;\n        }\n        if (colDefAny.tooltip) {\n            console.warn(\"ag-Grid: since v20.1, colDef.tooltip is gone, instead use colDef.tooltipValueGetter.\", this.colDef);\n            this.colDef.tooltipValueGetter = colDefAny.tooltip;\n        }\n    };\n    Column.prototype.addEventListener = function (eventType, listener) {\n        this.eventService.addEventListener(eventType, listener);\n    };\n    Column.prototype.removeEventListener = function (eventType, listener) {\n        this.eventService.removeEventListener(eventType, listener);\n    };\n    Column.prototype.createIsColumnFuncParams = function (rowNode) {\n        return {\n            node: rowNode,\n            data: rowNode.data,\n            column: this,\n            colDef: this.colDef,\n            context: this.gridOptionsWrapper.getContext(),\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi()\n        };\n    };\n    Column.prototype.isSuppressNavigable = function (rowNode) {\n        // if boolean set, then just use it\n        if (typeof this.colDef.suppressNavigable === 'boolean') {\n            return this.colDef.suppressNavigable;\n        }\n        // if function, then call the function to find out\n        if (typeof this.colDef.suppressNavigable === 'function') {\n            var params = this.createIsColumnFuncParams(rowNode);\n            var userFunc = this.colDef.suppressNavigable;\n            return userFunc(params);\n        }\n        return false;\n    };\n    Column.prototype.isCellEditable = function (rowNode) {\n        // only allow editing of groups if the user has this option enabled\n        if (rowNode.group && !this.gridOptionsWrapper.isEnableGroupEdit()) {\n            return false;\n        }\n        return this.isColumnFunc(rowNode, this.colDef.editable);\n    };\n    Column.prototype.isRowDrag = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n    };\n    Column.prototype.isDndSource = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.dndSource);\n    };\n    Column.prototype.isCellCheckboxSelection = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n    };\n    Column.prototype.isSuppressPaste = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n    };\n    Column.prototype.isResizable = function () {\n        return this.colDef.resizable === true;\n    };\n    Column.prototype.isColumnFunc = function (rowNode, value) {\n        // if boolean set, then just use it\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        // if function, then call the function to find out\n        if (typeof value === 'function') {\n            var params = this.createIsColumnFuncParams(rowNode);\n            var editableFunc = value;\n            return editableFunc(params);\n        }\n        return false;\n    };\n    Column.prototype.setMoving = function (moving, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.moving = moving;\n        this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MOVING_CHANGED, source));\n    };\n    Column.prototype.createColumnEvent = function (type, source) {\n        return {\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            type: type,\n            column: this,\n            columns: [this],\n            source: source\n        };\n    };\n    Column.prototype.isMoving = function () {\n        return this.moving;\n    };\n    Column.prototype.getSort = function () {\n        return this.sort;\n    };\n    Column.prototype.setSort = function (sort, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.sort !== sort) {\n            this.sort = sort;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_SORT_CHANGED, source));\n        }\n    };\n    Column.prototype.setMenuVisible = function (visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.menuVisible !== visible) {\n            this.menuVisible = visible;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MENU_VISIBLE_CHANGED, source));\n        }\n    };\n    Column.prototype.isMenuVisible = function () {\n        return this.menuVisible;\n    };\n    Column.prototype.isSortAscending = function () {\n        return this.sort === Column.SORT_ASC;\n    };\n    Column.prototype.isSortDescending = function () {\n        return this.sort === Column.SORT_DESC;\n    };\n    Column.prototype.isSortNone = function () {\n        return utils_1._.missing(this.sort);\n    };\n    Column.prototype.isSorting = function () {\n        return utils_1._.exists(this.sort);\n    };\n    Column.prototype.getSortedAt = function () {\n        return this.sortedAt;\n    };\n    Column.prototype.setSortedAt = function (sortedAt) {\n        this.sortedAt = sortedAt;\n    };\n    Column.prototype.setAggFunc = function (aggFunc) {\n        this.aggFunc = aggFunc;\n    };\n    Column.prototype.getAggFunc = function () {\n        return this.aggFunc;\n    };\n    Column.prototype.getLeft = function () {\n        return this.left;\n    };\n    Column.prototype.getOldLeft = function () {\n        return this.oldLeft;\n    };\n    Column.prototype.getRight = function () {\n        return this.left + this.actualWidth;\n    };\n    Column.prototype.setLeft = function (left, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.oldLeft = this.left;\n        if (this.left !== left) {\n            this.left = left;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LEFT_CHANGED, source));\n        }\n    };\n    Column.prototype.isFilterActive = function () {\n        return this.filterActive;\n    };\n    // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n    Column.prototype.setFilterActive = function (active, source, additionalEventAttributes) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.filterActive !== active) {\n            this.filterActive = active;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FILTER_ACTIVE_CHANGED, source));\n        }\n        var filterChangedEvent = this.createColumnEvent(Column.EVENT_FILTER_CHANGED, source);\n        if (additionalEventAttributes) {\n            utils_1._.mergeDeep(filterChangedEvent, additionalEventAttributes);\n        }\n        this.eventService.dispatchEvent(filterChangedEvent);\n    };\n    Column.prototype.setPinned = function (pinned) {\n        if (pinned === true || pinned === Column.PINNED_LEFT) {\n            this.pinned = Column.PINNED_LEFT;\n        }\n        else if (pinned === Column.PINNED_RIGHT) {\n            this.pinned = Column.PINNED_RIGHT;\n        }\n        else {\n            this.pinned = null;\n        }\n    };\n    Column.prototype.setFirstRightPinned = function (firstRightPinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.firstRightPinned !== firstRightPinned) {\n            this.firstRightPinned = firstRightPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FIRST_RIGHT_PINNED_CHANGED, source));\n        }\n    };\n    Column.prototype.setLastLeftPinned = function (lastLeftPinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.lastLeftPinned !== lastLeftPinned) {\n            this.lastLeftPinned = lastLeftPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LAST_LEFT_PINNED_CHANGED, source));\n        }\n    };\n    Column.prototype.isFirstRightPinned = function () {\n        return this.firstRightPinned;\n    };\n    Column.prototype.isLastLeftPinned = function () {\n        return this.lastLeftPinned;\n    };\n    Column.prototype.isPinned = function () {\n        return this.pinned === Column.PINNED_LEFT || this.pinned === Column.PINNED_RIGHT;\n    };\n    Column.prototype.isPinnedLeft = function () {\n        return this.pinned === Column.PINNED_LEFT;\n    };\n    Column.prototype.isPinnedRight = function () {\n        return this.pinned === Column.PINNED_RIGHT;\n    };\n    Column.prototype.getPinned = function () {\n        return this.pinned;\n    };\n    Column.prototype.setVisible = function (visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        var newValue = visible === true;\n        if (this.visible !== newValue) {\n            this.visible = newValue;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VISIBLE_CHANGED, source));\n        }\n    };\n    Column.prototype.isVisible = function () {\n        return this.visible;\n    };\n    Column.prototype.getColDef = function () {\n        return this.colDef;\n    };\n    Column.prototype.getColumnGroupShow = function () {\n        return this.colDef.columnGroupShow;\n    };\n    Column.prototype.getColId = function () {\n        return this.colId;\n    };\n    Column.prototype.getId = function () {\n        return this.getColId();\n    };\n    Column.prototype.getDefinition = function () {\n        return this.colDef;\n    };\n    Column.prototype.getActualWidth = function () {\n        return this.actualWidth;\n    };\n    Column.prototype.createBaseColDefParams = function (rowNode) {\n        var params = {\n            node: rowNode,\n            data: rowNode.data,\n            colDef: this.colDef,\n            column: this,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            context: this.gridOptionsWrapper.getContext()\n        };\n        return params;\n    };\n    Column.prototype.getColSpan = function (rowNode) {\n        if (utils_1._.missing(this.colDef.colSpan)) {\n            return 1;\n        }\n        var params = this.createBaseColDefParams(rowNode);\n        var colSpan = this.colDef.colSpan(params);\n        // colSpan must be number equal to or greater than 1\n        return Math.max(colSpan, 1);\n    };\n    Column.prototype.getRowSpan = function (rowNode) {\n        if (utils_1._.missing(this.colDef.rowSpan)) {\n            return 1;\n        }\n        var params = this.createBaseColDefParams(rowNode);\n        var rowSpan = this.colDef.rowSpan(params);\n        // rowSpan must be number equal to or greater than 1\n        return Math.max(rowSpan, 1);\n    };\n    Column.prototype.setActualWidth = function (actualWidth, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.actualWidth !== actualWidth) {\n            this.actualWidth = actualWidth;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_WIDTH_CHANGED, source));\n        }\n    };\n    Column.prototype.isGreaterThanMax = function (width) {\n        if (this.maxWidth) {\n            return width > this.maxWidth;\n        }\n        return false;\n    };\n    Column.prototype.getMinWidth = function () {\n        return this.minWidth;\n    };\n    Column.prototype.getMaxWidth = function () {\n        return this.maxWidth;\n    };\n    Column.prototype.setMinimum = function (source) {\n        if (source === void 0) { source = \"api\"; }\n        this.setActualWidth(this.minWidth, source);\n    };\n    Column.prototype.setRowGroupActive = function (rowGroup, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.rowGroupActive !== rowGroup) {\n            this.rowGroupActive = rowGroup;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_ROW_GROUP_CHANGED, source));\n        }\n    };\n    Column.prototype.isRowGroupActive = function () {\n        return this.rowGroupActive;\n    };\n    Column.prototype.setPivotActive = function (pivot, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.pivotActive !== pivot) {\n            this.pivotActive = pivot;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_PIVOT_CHANGED, source));\n        }\n    };\n    Column.prototype.isPivotActive = function () {\n        return this.pivotActive;\n    };\n    Column.prototype.isAnyFunctionActive = function () {\n        return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n    };\n    Column.prototype.isAnyFunctionAllowed = function () {\n        return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n    };\n    Column.prototype.setValueActive = function (value, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.aggregationActive !== value) {\n            this.aggregationActive = value;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VALUE_CHANGED, source));\n        }\n    };\n    Column.prototype.isValueActive = function () {\n        return this.aggregationActive;\n    };\n    Column.prototype.isAllowPivot = function () {\n        return this.colDef.enablePivot === true;\n    };\n    Column.prototype.isAllowValue = function () {\n        return this.colDef.enableValue === true;\n    };\n    Column.prototype.isAllowRowGroup = function () {\n        return this.colDef.enableRowGroup === true;\n    };\n    Column.prototype.getMenuTabs = function (defaultValues) {\n        var menuTabs = this.getColDef().menuTabs;\n        if (menuTabs == null) {\n            menuTabs = defaultValues;\n        }\n        return menuTabs;\n    };\n    // this used to be needed, as previous version of ag-grid had lockPosition as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockPosition = function () {\n        console.warn('ag-Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead.');\n        return this.colDef ? !!this.colDef.lockPosition : false;\n    };\n    // this used to be needed, as previous version of ag-grid had lockVisible as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockVisible = function () {\n        console.warn('ag-Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead.');\n        return this.colDef ? !!this.colDef.lockVisible : false;\n    };\n    // this used to be needed, as previous version of ag-grid had lockPinned as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockPinned = function () {\n        console.warn('ag-Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead.');\n        return this.colDef ? !!this.colDef.lockPinned : false;\n    };\n    // + renderedHeaderCell - for making header cell transparent when moving\n    Column.EVENT_MOVING_CHANGED = 'movingChanged';\n    // + renderedCell - changing left position\n    Column.EVENT_LEFT_CHANGED = 'leftChanged';\n    // + renderedCell - changing width\n    Column.EVENT_WIDTH_CHANGED = 'widthChanged';\n    // + renderedCell - for changing pinned classes\n    Column.EVENT_LAST_LEFT_PINNED_CHANGED = 'lastLeftPinnedChanged';\n    Column.EVENT_FIRST_RIGHT_PINNED_CHANGED = 'firstRightPinnedChanged';\n    // + renderedColumn - for changing visibility icon\n    Column.EVENT_VISIBLE_CHANGED = 'visibleChanged';\n    // + every time the filter changes, used in the floating filters\n    Column.EVENT_FILTER_CHANGED = 'filterChanged';\n    // + renderedHeaderCell - marks the header with filter icon\n    Column.EVENT_FILTER_ACTIVE_CHANGED = 'filterActiveChanged';\n    // + renderedHeaderCell - marks the header with sort icon\n    Column.EVENT_SORT_CHANGED = 'sortChanged';\n    Column.EVENT_MENU_VISIBLE_CHANGED = 'menuVisibleChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_ROW_GROUP_CHANGED = 'columnRowGroupChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_PIVOT_CHANGED = 'columnPivotChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_VALUE_CHANGED = 'columnValueChanged';\n    Column.PINNED_RIGHT = 'right';\n    Column.PINNED_LEFT = 'left';\n    Column.SORT_ASC = 'asc';\n    Column.SORT_DESC = 'desc';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], Column.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnUtils'),\n        __metadata(\"design:type\", columnUtils_1.ColumnUtils)\n    ], Column.prototype, \"columnUtils\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], Column.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], Column.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Column.prototype, \"initialise\", null);\n    return Column;\n}());\nexports.Column = Column;\n"},"lineCount":606}},"error":null,"hash":"982bca60177d7eb771fb1c4e834e04b0","cacheData":{"env":{}}}