{"id":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","dependencies":[{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/package.json","includedInParent":true,"mtime":1567446810165},{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/package.json","includedInParent":true,"mtime":1567183294748},{"name":"../../context/context","loc":{"line":34,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/context/context.js"},{"name":"../../eventService","loc":{"line":35,"column":29},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/eventService.js"},{"name":"../../events","loc":{"line":36,"column":23},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/events.js"},{"name":"../../logger","loc":{"line":37,"column":23},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/logger.js"},{"name":"./infiniteBlock","loc":{"line":38,"column":30},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteBlock.js"},{"name":"../cache/rowNodeCache","loc":{"line":39,"column":29},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeCache.js"},{"name":"../../gridApi","loc":{"line":40,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridApi.js"},{"name":"../../columnController/columnApi","loc":{"line":41,"column":26},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/columnApi.js"}],"generated":{"js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar eventService_1 = require(\"../../eventService\");\nvar events_1 = require(\"../../events\");\nvar logger_1 = require(\"../../logger\");\nvar infiniteBlock_1 = require(\"./infiniteBlock\");\nvar rowNodeCache_1 = require(\"../cache/rowNodeCache\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar InfiniteCache = /** @class */ (function (_super) {\n    __extends(InfiniteCache, _super);\n    function InfiniteCache(params) {\n        return _super.call(this, params) || this;\n    }\n    InfiniteCache.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('InfiniteCache');\n    };\n    InfiniteCache.prototype.init = function () {\n        _super.prototype.init.call(this);\n        // start load of data, as the virtualRowCount will remain at 0 otherwise,\n        // so we need this to kick things off, otherwise grid would never call getRow()\n        this.getRow(0);\n    };\n    InfiniteCache.prototype.moveItemsDown = function (block, moveFromIndex, moveCount) {\n        var startRow = block.getStartRow();\n        var endRow = block.getEndRow();\n        var indexOfLastRowToMove = moveFromIndex + moveCount;\n        // all rows need to be moved down below the insertion index\n        for (var currentRowIndex = endRow - 1; currentRowIndex >= startRow; currentRowIndex--) {\n            // don't move rows at or before the insertion index\n            if (currentRowIndex < indexOfLastRowToMove) {\n                continue;\n            }\n            var indexOfNodeWeWant = currentRowIndex - moveCount;\n            var nodeForThisIndex = this.getRow(indexOfNodeWeWant, true);\n            if (nodeForThisIndex) {\n                block.setRowNode(currentRowIndex, nodeForThisIndex);\n            }\n            else {\n                block.setBlankRowNode(currentRowIndex);\n                block.setDirty();\n            }\n        }\n    };\n    InfiniteCache.prototype.insertItems = function (block, indexToInsert, items) {\n        var pageStartRow = block.getStartRow();\n        var pageEndRow = block.getEndRow();\n        var newRowNodes = [];\n        // next stage is insert the rows into this page, if applicable\n        for (var index = 0; index < items.length; index++) {\n            var rowIndex = indexToInsert + index;\n            var currentRowInThisPage = rowIndex >= pageStartRow && rowIndex < pageEndRow;\n            if (currentRowInThisPage) {\n                var dataItem = items[index];\n                var newRowNode = block.setNewData(rowIndex, dataItem);\n                newRowNodes.push(newRowNode);\n            }\n        }\n        return newRowNodes;\n    };\n    InfiniteCache.prototype.insertItemsAtIndex = function (indexToInsert, items) {\n        // get all page id's as NUMBERS (not strings, as we need to sort as numbers) and in descending order\n        var _this = this;\n        var newNodes = [];\n        this.forEachBlockInReverseOrder(function (block) {\n            var pageEndRow = block.getEndRow();\n            // if the insertion is after this page, then this page is not impacted\n            if (pageEndRow <= indexToInsert) {\n                return;\n            }\n            _this.moveItemsDown(block, indexToInsert, items.length);\n            var newNodesThisPage = _this.insertItems(block, indexToInsert, items);\n            newNodesThisPage.forEach(function (rowNode) { return newNodes.push(rowNode); });\n        });\n        if (this.isMaxRowFound()) {\n            this.hack_setVirtualRowCount(this.getVirtualRowCount() + items.length);\n        }\n        this.onCacheUpdated();\n        var event = {\n            type: events_1.Events.EVENT_ROW_DATA_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    // the rowRenderer will not pass dontCreatePage, meaning when rendering the grid,\n    // it will want new pages in the cache as it asks for rows. only when we are inserting /\n    // removing rows via the api is dontCreatePage set, where we move rows between the pages.\n    InfiniteCache.prototype.getRow = function (rowIndex, dontCreatePage) {\n        if (dontCreatePage === void 0) { dontCreatePage = false; }\n        var blockId = Math.floor(rowIndex / this.cacheParams.blockSize);\n        var block = this.getBlock(blockId);\n        if (!block) {\n            if (dontCreatePage) {\n                return null;\n            }\n            else {\n                block = this.createBlock(blockId);\n            }\n        }\n        return block.getRow(rowIndex);\n    };\n    InfiniteCache.prototype.createBlock = function (blockNumber) {\n        var newBlock = new infiniteBlock_1.InfiniteBlock(blockNumber, this.cacheParams);\n        this.getContext().wireBean(newBlock);\n        this.postCreateBlock(newBlock);\n        return newBlock;\n    };\n    // we have this on infinite row model only, not server side row model,\n    // because for server side, it would leave the children in inconsistent\n    // state - eg if a node had children, but after the refresh it had data\n    // for a different row, then the children would be with the wrong row node.\n    InfiniteCache.prototype.refreshCache = function () {\n        this.forEachBlockInOrder(function (block) { return block.setDirty(); });\n        this.checkBlockToLoad();\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], InfiniteCache.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], InfiniteCache.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], InfiniteCache.prototype, \"gridApi\", void 0);\n    __decorate([\n        __param(0, context_1.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], InfiniteCache.prototype, \"setBeans\", null);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InfiniteCache.prototype, \"init\", null);\n    return InfiniteCache;\n}(rowNodeCache_1.RowNodeCache));\nexports.InfiniteCache = InfiniteCache;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}}],"sources":{"node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar eventService_1 = require(\"../../eventService\");\nvar events_1 = require(\"../../events\");\nvar logger_1 = require(\"../../logger\");\nvar infiniteBlock_1 = require(\"./infiniteBlock\");\nvar rowNodeCache_1 = require(\"../cache/rowNodeCache\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar InfiniteCache = /** @class */ (function (_super) {\n    __extends(InfiniteCache, _super);\n    function InfiniteCache(params) {\n        return _super.call(this, params) || this;\n    }\n    InfiniteCache.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('InfiniteCache');\n    };\n    InfiniteCache.prototype.init = function () {\n        _super.prototype.init.call(this);\n        // start load of data, as the virtualRowCount will remain at 0 otherwise,\n        // so we need this to kick things off, otherwise grid would never call getRow()\n        this.getRow(0);\n    };\n    InfiniteCache.prototype.moveItemsDown = function (block, moveFromIndex, moveCount) {\n        var startRow = block.getStartRow();\n        var endRow = block.getEndRow();\n        var indexOfLastRowToMove = moveFromIndex + moveCount;\n        // all rows need to be moved down below the insertion index\n        for (var currentRowIndex = endRow - 1; currentRowIndex >= startRow; currentRowIndex--) {\n            // don't move rows at or before the insertion index\n            if (currentRowIndex < indexOfLastRowToMove) {\n                continue;\n            }\n            var indexOfNodeWeWant = currentRowIndex - moveCount;\n            var nodeForThisIndex = this.getRow(indexOfNodeWeWant, true);\n            if (nodeForThisIndex) {\n                block.setRowNode(currentRowIndex, nodeForThisIndex);\n            }\n            else {\n                block.setBlankRowNode(currentRowIndex);\n                block.setDirty();\n            }\n        }\n    };\n    InfiniteCache.prototype.insertItems = function (block, indexToInsert, items) {\n        var pageStartRow = block.getStartRow();\n        var pageEndRow = block.getEndRow();\n        var newRowNodes = [];\n        // next stage is insert the rows into this page, if applicable\n        for (var index = 0; index < items.length; index++) {\n            var rowIndex = indexToInsert + index;\n            var currentRowInThisPage = rowIndex >= pageStartRow && rowIndex < pageEndRow;\n            if (currentRowInThisPage) {\n                var dataItem = items[index];\n                var newRowNode = block.setNewData(rowIndex, dataItem);\n                newRowNodes.push(newRowNode);\n            }\n        }\n        return newRowNodes;\n    };\n    InfiniteCache.prototype.insertItemsAtIndex = function (indexToInsert, items) {\n        // get all page id's as NUMBERS (not strings, as we need to sort as numbers) and in descending order\n        var _this = this;\n        var newNodes = [];\n        this.forEachBlockInReverseOrder(function (block) {\n            var pageEndRow = block.getEndRow();\n            // if the insertion is after this page, then this page is not impacted\n            if (pageEndRow <= indexToInsert) {\n                return;\n            }\n            _this.moveItemsDown(block, indexToInsert, items.length);\n            var newNodesThisPage = _this.insertItems(block, indexToInsert, items);\n            newNodesThisPage.forEach(function (rowNode) { return newNodes.push(rowNode); });\n        });\n        if (this.isMaxRowFound()) {\n            this.hack_setVirtualRowCount(this.getVirtualRowCount() + items.length);\n        }\n        this.onCacheUpdated();\n        var event = {\n            type: events_1.Events.EVENT_ROW_DATA_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    // the rowRenderer will not pass dontCreatePage, meaning when rendering the grid,\n    // it will want new pages in the cache as it asks for rows. only when we are inserting /\n    // removing rows via the api is dontCreatePage set, where we move rows between the pages.\n    InfiniteCache.prototype.getRow = function (rowIndex, dontCreatePage) {\n        if (dontCreatePage === void 0) { dontCreatePage = false; }\n        var blockId = Math.floor(rowIndex / this.cacheParams.blockSize);\n        var block = this.getBlock(blockId);\n        if (!block) {\n            if (dontCreatePage) {\n                return null;\n            }\n            else {\n                block = this.createBlock(blockId);\n            }\n        }\n        return block.getRow(rowIndex);\n    };\n    InfiniteCache.prototype.createBlock = function (blockNumber) {\n        var newBlock = new infiniteBlock_1.InfiniteBlock(blockNumber, this.cacheParams);\n        this.getContext().wireBean(newBlock);\n        this.postCreateBlock(newBlock);\n        return newBlock;\n    };\n    // we have this on infinite row model only, not server side row model,\n    // because for server side, it would leave the children in inconsistent\n    // state - eg if a node had children, but after the refresh it had data\n    // for a different row, then the children would be with the wrong row node.\n    InfiniteCache.prototype.refreshCache = function () {\n        this.forEachBlockInOrder(function (block) { return block.setDirty(); });\n        this.checkBlockToLoad();\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], InfiniteCache.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], InfiniteCache.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], InfiniteCache.prototype, \"gridApi\", void 0);\n    __decorate([\n        __param(0, context_1.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], InfiniteCache.prototype, \"setBeans\", null);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InfiniteCache.prototype, \"init\", null);\n    return InfiniteCache;\n}(rowNodeCache_1.RowNodeCache));\nexports.InfiniteCache = InfiniteCache;\n"},"lineCount":176}},"error":null,"hash":"6521d9ee553716ef33e8bcc9009a01e1","cacheData":{"env":{}}}