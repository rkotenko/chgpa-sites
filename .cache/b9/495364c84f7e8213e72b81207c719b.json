{"id":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","dependencies":[{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/package.json","includedInParent":true,"mtime":1567280299315},{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/package.json","includedInParent":true,"mtime":1567183294748},{"name":"./column","loc":{"line":18,"column":23},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/column.js"},{"name":"../eventService","loc":{"line":19,"column":29},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/eventService.js"},{"name":"../context/context","loc":{"line":20,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/context/context.js"},{"name":"../gridOptionsWrapper","loc":{"line":21,"column":35},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridOptionsWrapper.js"},{"name":"../utils","loc":{"line":22,"column":22},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/utils/index.js"}],"generated":{"js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar column_1 = require(\"./column\");\nvar eventService_1 = require(\"../eventService\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar ColumnGroup = /** @class */ (function () {\n    function ColumnGroup(originalColumnGroup, groupId, instanceId, pinned) {\n        // depends on the open/closed state of the group, only displaying columns are stored here\n        this.displayedChildren = [];\n        this.localEventService = new eventService_1.EventService();\n        this.groupId = groupId;\n        this.instanceId = instanceId;\n        this.originalColumnGroup = originalColumnGroup;\n        this.pinned = pinned;\n    }\n    // this is static, a it is used outside of this class\n    ColumnGroup.createUniqueId = function (groupId, instanceId) {\n        return groupId + '_' + instanceId;\n    };\n    // as the user is adding and removing columns, the groups are recalculated.\n    // this reset clears out all children, ready for children to be added again\n    ColumnGroup.prototype.reset = function () {\n        this.parent = null;\n        this.children = null;\n        this.displayedChildren = null;\n    };\n    ColumnGroup.prototype.getParent = function () {\n        return this.parent;\n    };\n    ColumnGroup.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    ColumnGroup.prototype.getUniqueId = function () {\n        return ColumnGroup.createUniqueId(this.groupId, this.instanceId);\n    };\n    ColumnGroup.prototype.isEmptyGroup = function () {\n        return this.displayedChildren.length === 0;\n    };\n    ColumnGroup.prototype.isMoving = function () {\n        var allLeafColumns = this.getOriginalColumnGroup().getLeafColumns();\n        if (!allLeafColumns || allLeafColumns.length === 0) {\n            return false;\n        }\n        var allMoving = true;\n        allLeafColumns.forEach(function (col) {\n            if (!col.isMoving()) {\n                allMoving = false;\n            }\n        });\n        return allMoving;\n    };\n    ColumnGroup.prototype.checkLeft = function () {\n        // first get all children to setLeft, as it impacts our decision below\n        this.displayedChildren.forEach(function (child) {\n            if (child instanceof ColumnGroup) {\n                child.checkLeft();\n            }\n        });\n        // set our left based on first displayed column\n        if (this.displayedChildren.length > 0) {\n            if (this.gridOptionsWrapper.isEnableRtl()) {\n                var lastChild = utils_1._.last(this.displayedChildren);\n                var lastChildLeft = lastChild.getLeft();\n                this.setLeft(lastChildLeft);\n            }\n            else {\n                var firstChildLeft = this.displayedChildren[0].getLeft();\n                this.setLeft(firstChildLeft);\n            }\n        }\n        else {\n            // this should never happen, as if we have no displayed columns, then\n            // this groups should not even exist.\n            this.setLeft(null);\n        }\n    };\n    ColumnGroup.prototype.getLeft = function () {\n        return this.left;\n    };\n    ColumnGroup.prototype.getOldLeft = function () {\n        return this.oldLeft;\n    };\n    ColumnGroup.prototype.setLeft = function (left) {\n        this.oldLeft = left;\n        if (this.left !== left) {\n            this.left = left;\n            this.localEventService.dispatchEvent(this.createAgEvent(ColumnGroup.EVENT_LEFT_CHANGED));\n        }\n    };\n    ColumnGroup.prototype.getPinned = function () {\n        return this.pinned;\n    };\n    ColumnGroup.prototype.createAgEvent = function (type) {\n        return {\n            type: type,\n        };\n    };\n    ColumnGroup.prototype.addEventListener = function (eventType, listener) {\n        this.localEventService.addEventListener(eventType, listener);\n    };\n    ColumnGroup.prototype.removeEventListener = function (eventType, listener) {\n        this.localEventService.removeEventListener(eventType, listener);\n    };\n    ColumnGroup.prototype.getGroupId = function () {\n        return this.groupId;\n    };\n    ColumnGroup.prototype.getInstanceId = function () {\n        return this.instanceId;\n    };\n    ColumnGroup.prototype.isChildInThisGroupDeepSearch = function (wantedChild) {\n        var result = false;\n        this.children.forEach(function (foundChild) {\n            if (wantedChild === foundChild) {\n                result = true;\n            }\n            if (foundChild instanceof ColumnGroup) {\n                if (foundChild.isChildInThisGroupDeepSearch(wantedChild)) {\n                    result = true;\n                }\n            }\n        });\n        return result;\n    };\n    ColumnGroup.prototype.getActualWidth = function () {\n        var groupActualWidth = 0;\n        if (this.displayedChildren) {\n            this.displayedChildren.forEach(function (child) {\n                groupActualWidth += child.getActualWidth();\n            });\n        }\n        return groupActualWidth;\n    };\n    ColumnGroup.prototype.isResizable = function () {\n        if (!this.displayedChildren) {\n            return false;\n        }\n        // if at least one child is resizable, then the group is resizable\n        var result = false;\n        this.displayedChildren.forEach(function (child) {\n            if (child.isResizable()) {\n                result = true;\n            }\n        });\n        return result;\n    };\n    ColumnGroup.prototype.getMinWidth = function () {\n        var result = 0;\n        this.displayedChildren.forEach(function (groupChild) {\n            result += groupChild.getMinWidth();\n        });\n        return result;\n    };\n    ColumnGroup.prototype.addChild = function (child) {\n        if (!this.children) {\n            this.children = [];\n        }\n        this.children.push(child);\n    };\n    ColumnGroup.prototype.getDisplayedChildren = function () {\n        return this.displayedChildren;\n    };\n    ColumnGroup.prototype.getLeafColumns = function () {\n        var result = [];\n        this.addLeafColumns(result);\n        return result;\n    };\n    ColumnGroup.prototype.getDisplayedLeafColumns = function () {\n        var result = [];\n        this.addDisplayedLeafColumns(result);\n        return result;\n    };\n    // why two methods here doing the same thing?\n    ColumnGroup.prototype.getDefinition = function () {\n        return this.originalColumnGroup.getColGroupDef();\n    };\n    ColumnGroup.prototype.getColGroupDef = function () {\n        return this.originalColumnGroup.getColGroupDef();\n    };\n    ColumnGroup.prototype.isPadding = function () {\n        return this.originalColumnGroup.isPadding();\n    };\n    ColumnGroup.prototype.isExpandable = function () {\n        return this.originalColumnGroup.isExpandable();\n    };\n    ColumnGroup.prototype.isExpanded = function () {\n        return this.originalColumnGroup.isExpanded();\n    };\n    ColumnGroup.prototype.setExpanded = function (expanded) {\n        this.originalColumnGroup.setExpanded(expanded);\n    };\n    ColumnGroup.prototype.addDisplayedLeafColumns = function (leafColumns) {\n        this.displayedChildren.forEach(function (child) {\n            if (child instanceof column_1.Column) {\n                leafColumns.push(child);\n            }\n            else if (child instanceof ColumnGroup) {\n                child.addDisplayedLeafColumns(leafColumns);\n            }\n        });\n    };\n    ColumnGroup.prototype.addLeafColumns = function (leafColumns) {\n        this.children.forEach(function (child) {\n            if (child instanceof column_1.Column) {\n                leafColumns.push(child);\n            }\n            else if (child instanceof ColumnGroup) {\n                child.addLeafColumns(leafColumns);\n            }\n        });\n    };\n    ColumnGroup.prototype.getChildren = function () {\n        return this.children;\n    };\n    ColumnGroup.prototype.getColumnGroupShow = function () {\n        return this.originalColumnGroup.getColumnGroupShow();\n    };\n    ColumnGroup.prototype.getOriginalColumnGroup = function () {\n        return this.originalColumnGroup;\n    };\n    ColumnGroup.prototype.calculateDisplayedColumns = function () {\n        var _this = this;\n        // clear out last time we calculated\n        this.displayedChildren = [];\n        var topLevelGroup = this;\n        // find the column group that is controlling expandable. this is relevant when we have padding (empty)\n        // groups, where the expandable is actually the first parent that is not a padding group.\n        if (this.isPadding()) {\n            while (topLevelGroup.getParent() && topLevelGroup.isPadding()) {\n                topLevelGroup = topLevelGroup.getParent();\n            }\n        }\n        var isExpandable = topLevelGroup.originalColumnGroup.isExpandable();\n        // it not expandable, everything is visible\n        if (!isExpandable) {\n            this.displayedChildren = this.children;\n        }\n        else {\n            // Add cols based on columnGroupShow\n            // Note - the below also adds padding groups, these are always added because they never have\n            // colDef.columnGroupShow set.\n            this.children.forEach(function (abstractColumn) {\n                var headerGroupShow = abstractColumn.getColumnGroupShow();\n                switch (headerGroupShow) {\n                    case ColumnGroup.HEADER_GROUP_SHOW_OPEN:\n                        // when set to open, only show col if group is open\n                        if (topLevelGroup.originalColumnGroup.isExpanded()) {\n                            _this.displayedChildren.push(abstractColumn);\n                        }\n                        break;\n                    case ColumnGroup.HEADER_GROUP_SHOW_CLOSED:\n                        // when set to open, only show col if group is open\n                        if (!topLevelGroup.originalColumnGroup.isExpanded()) {\n                            _this.displayedChildren.push(abstractColumn);\n                        }\n                        break;\n                    default:\n                        // default is always show the column\n                        _this.displayedChildren.push(abstractColumn);\n                        break;\n                }\n            });\n        }\n        this.localEventService.dispatchEvent(this.createAgEvent(ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED));\n    };\n    ColumnGroup.HEADER_GROUP_SHOW_OPEN = 'open';\n    ColumnGroup.HEADER_GROUP_SHOW_CLOSED = 'closed';\n    ColumnGroup.HEADER_GROUP_PADDING = 'padding';\n    ColumnGroup.EVENT_LEFT_CHANGED = 'leftChanged';\n    ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED = 'displayedChildrenChanged';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ColumnGroup.prototype, \"gridOptionsWrapper\", void 0);\n    return ColumnGroup;\n}());\nexports.ColumnGroup = ColumnGroup;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}}],"sources":{"node_modules/ag-grid-community/dist/lib/entities/columnGroup.js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar column_1 = require(\"./column\");\nvar eventService_1 = require(\"../eventService\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar ColumnGroup = /** @class */ (function () {\n    function ColumnGroup(originalColumnGroup, groupId, instanceId, pinned) {\n        // depends on the open/closed state of the group, only displaying columns are stored here\n        this.displayedChildren = [];\n        this.localEventService = new eventService_1.EventService();\n        this.groupId = groupId;\n        this.instanceId = instanceId;\n        this.originalColumnGroup = originalColumnGroup;\n        this.pinned = pinned;\n    }\n    // this is static, a it is used outside of this class\n    ColumnGroup.createUniqueId = function (groupId, instanceId) {\n        return groupId + '_' + instanceId;\n    };\n    // as the user is adding and removing columns, the groups are recalculated.\n    // this reset clears out all children, ready for children to be added again\n    ColumnGroup.prototype.reset = function () {\n        this.parent = null;\n        this.children = null;\n        this.displayedChildren = null;\n    };\n    ColumnGroup.prototype.getParent = function () {\n        return this.parent;\n    };\n    ColumnGroup.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    ColumnGroup.prototype.getUniqueId = function () {\n        return ColumnGroup.createUniqueId(this.groupId, this.instanceId);\n    };\n    ColumnGroup.prototype.isEmptyGroup = function () {\n        return this.displayedChildren.length === 0;\n    };\n    ColumnGroup.prototype.isMoving = function () {\n        var allLeafColumns = this.getOriginalColumnGroup().getLeafColumns();\n        if (!allLeafColumns || allLeafColumns.length === 0) {\n            return false;\n        }\n        var allMoving = true;\n        allLeafColumns.forEach(function (col) {\n            if (!col.isMoving()) {\n                allMoving = false;\n            }\n        });\n        return allMoving;\n    };\n    ColumnGroup.prototype.checkLeft = function () {\n        // first get all children to setLeft, as it impacts our decision below\n        this.displayedChildren.forEach(function (child) {\n            if (child instanceof ColumnGroup) {\n                child.checkLeft();\n            }\n        });\n        // set our left based on first displayed column\n        if (this.displayedChildren.length > 0) {\n            if (this.gridOptionsWrapper.isEnableRtl()) {\n                var lastChild = utils_1._.last(this.displayedChildren);\n                var lastChildLeft = lastChild.getLeft();\n                this.setLeft(lastChildLeft);\n            }\n            else {\n                var firstChildLeft = this.displayedChildren[0].getLeft();\n                this.setLeft(firstChildLeft);\n            }\n        }\n        else {\n            // this should never happen, as if we have no displayed columns, then\n            // this groups should not even exist.\n            this.setLeft(null);\n        }\n    };\n    ColumnGroup.prototype.getLeft = function () {\n        return this.left;\n    };\n    ColumnGroup.prototype.getOldLeft = function () {\n        return this.oldLeft;\n    };\n    ColumnGroup.prototype.setLeft = function (left) {\n        this.oldLeft = left;\n        if (this.left !== left) {\n            this.left = left;\n            this.localEventService.dispatchEvent(this.createAgEvent(ColumnGroup.EVENT_LEFT_CHANGED));\n        }\n    };\n    ColumnGroup.prototype.getPinned = function () {\n        return this.pinned;\n    };\n    ColumnGroup.prototype.createAgEvent = function (type) {\n        return {\n            type: type,\n        };\n    };\n    ColumnGroup.prototype.addEventListener = function (eventType, listener) {\n        this.localEventService.addEventListener(eventType, listener);\n    };\n    ColumnGroup.prototype.removeEventListener = function (eventType, listener) {\n        this.localEventService.removeEventListener(eventType, listener);\n    };\n    ColumnGroup.prototype.getGroupId = function () {\n        return this.groupId;\n    };\n    ColumnGroup.prototype.getInstanceId = function () {\n        return this.instanceId;\n    };\n    ColumnGroup.prototype.isChildInThisGroupDeepSearch = function (wantedChild) {\n        var result = false;\n        this.children.forEach(function (foundChild) {\n            if (wantedChild === foundChild) {\n                result = true;\n            }\n            if (foundChild instanceof ColumnGroup) {\n                if (foundChild.isChildInThisGroupDeepSearch(wantedChild)) {\n                    result = true;\n                }\n            }\n        });\n        return result;\n    };\n    ColumnGroup.prototype.getActualWidth = function () {\n        var groupActualWidth = 0;\n        if (this.displayedChildren) {\n            this.displayedChildren.forEach(function (child) {\n                groupActualWidth += child.getActualWidth();\n            });\n        }\n        return groupActualWidth;\n    };\n    ColumnGroup.prototype.isResizable = function () {\n        if (!this.displayedChildren) {\n            return false;\n        }\n        // if at least one child is resizable, then the group is resizable\n        var result = false;\n        this.displayedChildren.forEach(function (child) {\n            if (child.isResizable()) {\n                result = true;\n            }\n        });\n        return result;\n    };\n    ColumnGroup.prototype.getMinWidth = function () {\n        var result = 0;\n        this.displayedChildren.forEach(function (groupChild) {\n            result += groupChild.getMinWidth();\n        });\n        return result;\n    };\n    ColumnGroup.prototype.addChild = function (child) {\n        if (!this.children) {\n            this.children = [];\n        }\n        this.children.push(child);\n    };\n    ColumnGroup.prototype.getDisplayedChildren = function () {\n        return this.displayedChildren;\n    };\n    ColumnGroup.prototype.getLeafColumns = function () {\n        var result = [];\n        this.addLeafColumns(result);\n        return result;\n    };\n    ColumnGroup.prototype.getDisplayedLeafColumns = function () {\n        var result = [];\n        this.addDisplayedLeafColumns(result);\n        return result;\n    };\n    // why two methods here doing the same thing?\n    ColumnGroup.prototype.getDefinition = function () {\n        return this.originalColumnGroup.getColGroupDef();\n    };\n    ColumnGroup.prototype.getColGroupDef = function () {\n        return this.originalColumnGroup.getColGroupDef();\n    };\n    ColumnGroup.prototype.isPadding = function () {\n        return this.originalColumnGroup.isPadding();\n    };\n    ColumnGroup.prototype.isExpandable = function () {\n        return this.originalColumnGroup.isExpandable();\n    };\n    ColumnGroup.prototype.isExpanded = function () {\n        return this.originalColumnGroup.isExpanded();\n    };\n    ColumnGroup.prototype.setExpanded = function (expanded) {\n        this.originalColumnGroup.setExpanded(expanded);\n    };\n    ColumnGroup.prototype.addDisplayedLeafColumns = function (leafColumns) {\n        this.displayedChildren.forEach(function (child) {\n            if (child instanceof column_1.Column) {\n                leafColumns.push(child);\n            }\n            else if (child instanceof ColumnGroup) {\n                child.addDisplayedLeafColumns(leafColumns);\n            }\n        });\n    };\n    ColumnGroup.prototype.addLeafColumns = function (leafColumns) {\n        this.children.forEach(function (child) {\n            if (child instanceof column_1.Column) {\n                leafColumns.push(child);\n            }\n            else if (child instanceof ColumnGroup) {\n                child.addLeafColumns(leafColumns);\n            }\n        });\n    };\n    ColumnGroup.prototype.getChildren = function () {\n        return this.children;\n    };\n    ColumnGroup.prototype.getColumnGroupShow = function () {\n        return this.originalColumnGroup.getColumnGroupShow();\n    };\n    ColumnGroup.prototype.getOriginalColumnGroup = function () {\n        return this.originalColumnGroup;\n    };\n    ColumnGroup.prototype.calculateDisplayedColumns = function () {\n        var _this = this;\n        // clear out last time we calculated\n        this.displayedChildren = [];\n        var topLevelGroup = this;\n        // find the column group that is controlling expandable. this is relevant when we have padding (empty)\n        // groups, where the expandable is actually the first parent that is not a padding group.\n        if (this.isPadding()) {\n            while (topLevelGroup.getParent() && topLevelGroup.isPadding()) {\n                topLevelGroup = topLevelGroup.getParent();\n            }\n        }\n        var isExpandable = topLevelGroup.originalColumnGroup.isExpandable();\n        // it not expandable, everything is visible\n        if (!isExpandable) {\n            this.displayedChildren = this.children;\n        }\n        else {\n            // Add cols based on columnGroupShow\n            // Note - the below also adds padding groups, these are always added because they never have\n            // colDef.columnGroupShow set.\n            this.children.forEach(function (abstractColumn) {\n                var headerGroupShow = abstractColumn.getColumnGroupShow();\n                switch (headerGroupShow) {\n                    case ColumnGroup.HEADER_GROUP_SHOW_OPEN:\n                        // when set to open, only show col if group is open\n                        if (topLevelGroup.originalColumnGroup.isExpanded()) {\n                            _this.displayedChildren.push(abstractColumn);\n                        }\n                        break;\n                    case ColumnGroup.HEADER_GROUP_SHOW_CLOSED:\n                        // when set to open, only show col if group is open\n                        if (!topLevelGroup.originalColumnGroup.isExpanded()) {\n                            _this.displayedChildren.push(abstractColumn);\n                        }\n                        break;\n                    default:\n                        // default is always show the column\n                        _this.displayedChildren.push(abstractColumn);\n                        break;\n                }\n            });\n        }\n        this.localEventService.dispatchEvent(this.createAgEvent(ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED));\n    };\n    ColumnGroup.HEADER_GROUP_SHOW_OPEN = 'open';\n    ColumnGroup.HEADER_GROUP_SHOW_CLOSED = 'closed';\n    ColumnGroup.HEADER_GROUP_PADDING = 'padding';\n    ColumnGroup.EVENT_LEFT_CHANGED = 'leftChanged';\n    ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED = 'displayedChildrenChanged';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ColumnGroup.prototype, \"gridOptionsWrapper\", void 0);\n    return ColumnGroup;\n}());\nexports.ColumnGroup = ColumnGroup;\n"},"lineCount":294}},"error":null,"hash":"5560bf693eb44052cd404bda7045dc1d","cacheData":{"env":{}}}