{"id":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","dependencies":[{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/package.json","includedInParent":true,"mtime":1567446810165},{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/package.json","includedInParent":true,"mtime":1567183294748},{"name":"../context/context","loc":{"line":18,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/context/context.js"},{"name":"../columnController/columnController","loc":{"line":19,"column":33},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/columnController.js"},{"name":"../constants","loc":{"line":20,"column":26},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/constants.js"},{"name":"../selectionController","loc":{"line":21,"column":36},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js"},{"name":"../gridOptionsWrapper","loc":{"line":22,"column":35},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridOptionsWrapper.js"},{"name":"../columnController/displayedGroupCreator","loc":{"line":23,"column":38},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/displayedGroupCreator.js"},{"name":"../columnController/columnFactory","loc":{"line":24,"column":30},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/columnFactory.js"},{"name":"../columnController/groupInstanceIdCreator","loc":{"line":25,"column":39},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/groupInstanceIdCreator.js"},{"name":"../entities/columnGroup","loc":{"line":26,"column":28},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/columnGroup.js"},{"name":"../rowModels/pinnedRowModel","loc":{"line":27,"column":31},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/pinnedRowModel.js"},{"name":"../utils","loc":{"line":28,"column":22},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/utils/index.js"}],"generated":{"js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar constants_1 = require(\"../constants\");\nvar selectionController_1 = require(\"../selectionController\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar displayedGroupCreator_1 = require(\"../columnController/displayedGroupCreator\");\nvar columnFactory_1 = require(\"../columnController/columnFactory\");\nvar groupInstanceIdCreator_1 = require(\"../columnController/groupInstanceIdCreator\");\nvar columnGroup_1 = require(\"../entities/columnGroup\");\nvar pinnedRowModel_1 = require(\"../rowModels/pinnedRowModel\");\nvar utils_1 = require(\"../utils\");\nvar BaseGridSerializingSession = /** @class */ (function () {\n    function BaseGridSerializingSession(config) {\n        var columnController = config.columnController, valueService = config.valueService, gridOptionsWrapper = config.gridOptionsWrapper, processCellCallback = config.processCellCallback, processHeaderCallback = config.processHeaderCallback, cellAndHeaderEscaper = config.cellAndHeaderEscaper;\n        this.columnController = columnController;\n        this.valueService = valueService;\n        this.gridOptionsWrapper = gridOptionsWrapper;\n        this.processCellCallback = processCellCallback;\n        this.processHeaderCallback = processHeaderCallback;\n        this.cellAndHeaderEscaper = cellAndHeaderEscaper;\n    }\n    BaseGridSerializingSession.prototype.extractHeaderValue = function (column) {\n        var nameForCol = this.getHeaderName(this.processHeaderCallback, column);\n        if (nameForCol === null || nameForCol === undefined) {\n            nameForCol = '';\n        }\n        return this.cellAndHeaderEscaper ? this.cellAndHeaderEscaper(nameForCol) : nameForCol;\n    };\n    BaseGridSerializingSession.prototype.extractRowCellValue = function (column, index, type, node) {\n        var isRowGrouping = this.columnController.getRowGroupColumns().length > 0;\n        var valueForCell;\n        if (node && node.group && isRowGrouping && index === 0) {\n            valueForCell = this.createValueForGroupNode(node);\n        }\n        else {\n            valueForCell = this.valueService.getValue(column, node);\n        }\n        valueForCell = this.processCell(node, column, valueForCell, this.processCellCallback, type);\n        if (valueForCell === null || valueForCell === undefined) {\n            valueForCell = '';\n        }\n        return this.cellAndHeaderEscaper ? this.cellAndHeaderEscaper(valueForCell) : valueForCell;\n    };\n    BaseGridSerializingSession.prototype.getHeaderName = function (callback, column) {\n        if (callback) {\n            return callback({\n                column: column,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext()\n            });\n        }\n        else {\n            return this.columnController.getDisplayNameForColumn(column, 'csv', true);\n        }\n    };\n    BaseGridSerializingSession.prototype.createValueForGroupNode = function (node) {\n        var keys = [node.key];\n        while (node.parent) {\n            node = node.parent;\n            keys.push(node.key);\n        }\n        return keys.reverse().join(' -> ');\n    };\n    BaseGridSerializingSession.prototype.processCell = function (rowNode, column, value, processCellCallback, type) {\n        if (processCellCallback) {\n            return processCellCallback({\n                column: column,\n                node: rowNode,\n                value: value,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext(),\n                type: type\n            });\n        }\n        else {\n            return value;\n        }\n    };\n    return BaseGridSerializingSession;\n}());\nexports.BaseGridSerializingSession = BaseGridSerializingSession;\nvar GridSerializer = /** @class */ (function () {\n    function GridSerializer() {\n    }\n    GridSerializer.prototype.serialize = function (gridSerializingSession, params) {\n        var dontSkipRows = function () { return false; };\n        var skipGroups = params && params.skipGroups;\n        var skipHeader = params && params.skipHeader;\n        var columnGroups = params && params.columnGroups;\n        var skipFooters = params && params.skipFooters;\n        var skipPinnedTop = params && params.skipPinnedTop;\n        var skipPinnedBottom = params && params.skipPinnedBottom;\n        var includeCustomHeader = params && params.customHeader;\n        var includeCustomFooter = params && params.customFooter;\n        var allColumns = params && params.allColumns;\n        var onlySelected = params && params.onlySelected;\n        var columnKeys = params && params.columnKeys;\n        var onlySelectedAllPages = params && params.onlySelectedAllPages;\n        var rowSkipper = (params && params.shouldRowBeSkipped) || dontSkipRows;\n        var api = this.gridOptionsWrapper.getApi();\n        var skipSingleChildrenGroup = this.gridOptionsWrapper.isGroupRemoveSingleChildren();\n        var skipLowestSingleChildrenGroup = this.gridOptionsWrapper.isGroupRemoveLowestSingleChildren();\n        var context = this.gridOptionsWrapper.getContext();\n        // when in pivot mode, we always render cols on screen, never 'all columns'\n        var isPivotMode = this.columnController.isPivotMode();\n        var rowModelNormal = this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        var onlySelectedNonStandardModel = !rowModelNormal && onlySelected;\n        var columnsToExport = [];\n        if (utils_1._.existsAndNotEmpty(columnKeys)) {\n            columnsToExport = this.columnController.getGridColumns(columnKeys);\n        }\n        else if (allColumns && !isPivotMode) {\n            // add auto group column for tree data\n            columnsToExport = this.gridOptionsWrapper.isTreeData() ?\n                this.columnController.getGridColumns([constants_1.Constants.GROUP_AUTO_COLUMN_ID]) : [];\n            columnsToExport = columnsToExport.concat(this.columnController.getAllPrimaryColumns() || []);\n        }\n        else {\n            columnsToExport = this.columnController.getAllDisplayedColumns();\n        }\n        if (includeCustomHeader) {\n            gridSerializingSession.addCustomHeader(includeCustomHeader);\n        }\n        gridSerializingSession.prepare(columnsToExport);\n        // first pass, put in the header names of the cols\n        if (columnGroups) {\n            var groupInstanceIdCreator = new groupInstanceIdCreator_1.GroupInstanceIdCreator();\n            var displayedGroups = this.displayedGroupCreator.createDisplayedGroups(columnsToExport, this.columnController.getGridBalancedTree(), groupInstanceIdCreator, null);\n            this.recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession);\n        }\n        if (!skipHeader) {\n            var gridRowIterator_1 = gridSerializingSession.onNewHeaderRow();\n            columnsToExport.forEach(function (column, index) {\n                gridRowIterator_1.onColumn(column, index, undefined);\n            });\n        }\n        this.pinnedRowModel.forEachPinnedTopRow(processRow);\n        if (isPivotMode) {\n            if (this.rowModel.forEachPivotNode) {\n                this.rowModel.forEachPivotNode(processRow);\n            }\n            else {\n                //Must be enterprise, so we can just loop through all the nodes\n                this.rowModel.forEachNode(processRow);\n            }\n        }\n        else {\n            // onlySelectedAllPages: user doing pagination and wants selected items from\n            // other pages, so cannot use the standard row model as it won't have rows from\n            // other pages.\n            // onlySelectedNonStandardModel: if user wants selected in non standard row model\n            // (eg viewport) then again rowmodel cannot be used, so need to use selected instead.\n            if (onlySelectedAllPages || onlySelectedNonStandardModel) {\n                var selectedNodes = this.selectionController.getSelectedNodes();\n                selectedNodes.forEach(function (node) {\n                    processRow(node);\n                });\n            }\n            else {\n                // here is everything else - including standard row model and selected. we don't use\n                // the selection model even when just using selected, so that the result is the order\n                // of the rows appearing on the screen.\n                if (rowModelNormal) {\n                    this.rowModel.forEachNodeAfterFilterAndSort(processRow);\n                }\n                else {\n                    this.rowModel.forEachNode(processRow);\n                }\n            }\n        }\n        this.pinnedRowModel.forEachPinnedBottomRow(processRow);\n        if (includeCustomFooter) {\n            gridSerializingSession.addCustomFooter(includeCustomFooter);\n        }\n        function processRow(node) {\n            var shouldSkipLowestGroup = skipLowestSingleChildrenGroup && node.leafGroup;\n            var shouldSkipCurrentGroup = node.allChildrenCount === 1 && (skipSingleChildrenGroup || shouldSkipLowestGroup);\n            if (node.group && (skipGroups || shouldSkipCurrentGroup)) {\n                return;\n            }\n            if (skipFooters && node.footer) {\n                return;\n            }\n            if (onlySelected && !node.isSelected()) {\n                return;\n            }\n            if (skipPinnedTop && node.rowPinned === 'top') {\n                return;\n            }\n            if (skipPinnedBottom && node.rowPinned === 'bottom') {\n                return;\n            }\n            // if we are in pivotMode, then the grid will show the root node only\n            // if it's not a leaf group\n            var nodeIsRootNode = node.level === -1;\n            if (nodeIsRootNode && !node.leafGroup) {\n                return;\n            }\n            var shouldRowBeSkipped = rowSkipper({\n                node: node,\n                api: api,\n                context: context\n            });\n            if (shouldRowBeSkipped) {\n                return;\n            }\n            var rowAccumulator = gridSerializingSession.onNewBodyRow();\n            columnsToExport.forEach(function (column, index) {\n                rowAccumulator.onColumn(column, index, node);\n            });\n        }\n        return gridSerializingSession.parse();\n    };\n    GridSerializer.prototype.recursivelyAddHeaderGroups = function (displayedGroups, gridSerializingSession) {\n        var directChildrenHeaderGroups = [];\n        displayedGroups.forEach(function (columnGroupChild) {\n            var columnGroup = columnGroupChild;\n            if (!columnGroup.getChildren) {\n                return;\n            }\n            columnGroup.getChildren().forEach(function (it) { return directChildrenHeaderGroups.push(it); });\n        });\n        if (displayedGroups.length > 0 && displayedGroups[0] instanceof columnGroup_1.ColumnGroup) {\n            this.doAddHeaderHeader(gridSerializingSession, displayedGroups);\n        }\n        if (directChildrenHeaderGroups && directChildrenHeaderGroups.length > 0) {\n            this.recursivelyAddHeaderGroups(directChildrenHeaderGroups, gridSerializingSession);\n        }\n    };\n    GridSerializer.prototype.doAddHeaderHeader = function (gridSerializingSession, displayedGroups) {\n        var _this = this;\n        var gridRowIterator = gridSerializingSession.onNewHeaderGroupingRow();\n        var columnIndex = 0;\n        displayedGroups.forEach(function (columnGroupChild) {\n            var columnGroup = columnGroupChild;\n            var columnName = _this.columnController.getDisplayNameForColumnGroup(columnGroup, 'header');\n            gridRowIterator.onColumn(columnName || '', columnIndex++, columnGroup.getLeafColumns().length - 1);\n        });\n    };\n    __decorate([\n        context_1.Autowired('displayedGroupCreator'),\n        __metadata(\"design:type\", displayedGroupCreator_1.DisplayedGroupCreator)\n    ], GridSerializer.prototype, \"displayedGroupCreator\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GridSerializer.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], GridSerializer.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('pinnedRowModel'),\n        __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)\n    ], GridSerializer.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], GridSerializer.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('columnFactory'),\n        __metadata(\"design:type\", columnFactory_1.ColumnFactory)\n    ], GridSerializer.prototype, \"columnFactory\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GridSerializer.prototype, \"gridOptionsWrapper\", void 0);\n    GridSerializer = __decorate([\n        context_1.Bean(\"gridSerializer\")\n    ], GridSerializer);\n    return GridSerializer;\n}());\nexports.GridSerializer = GridSerializer;\nvar RowType;\n(function (RowType) {\n    RowType[RowType[\"HEADER_GROUPING\"] = 0] = \"HEADER_GROUPING\";\n    RowType[RowType[\"HEADER\"] = 1] = \"HEADER\";\n    RowType[RowType[\"BODY\"] = 2] = \"BODY\";\n})(RowType = exports.RowType || (exports.RowType = {}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}}],"sources":{"node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar constants_1 = require(\"../constants\");\nvar selectionController_1 = require(\"../selectionController\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar displayedGroupCreator_1 = require(\"../columnController/displayedGroupCreator\");\nvar columnFactory_1 = require(\"../columnController/columnFactory\");\nvar groupInstanceIdCreator_1 = require(\"../columnController/groupInstanceIdCreator\");\nvar columnGroup_1 = require(\"../entities/columnGroup\");\nvar pinnedRowModel_1 = require(\"../rowModels/pinnedRowModel\");\nvar utils_1 = require(\"../utils\");\nvar BaseGridSerializingSession = /** @class */ (function () {\n    function BaseGridSerializingSession(config) {\n        var columnController = config.columnController, valueService = config.valueService, gridOptionsWrapper = config.gridOptionsWrapper, processCellCallback = config.processCellCallback, processHeaderCallback = config.processHeaderCallback, cellAndHeaderEscaper = config.cellAndHeaderEscaper;\n        this.columnController = columnController;\n        this.valueService = valueService;\n        this.gridOptionsWrapper = gridOptionsWrapper;\n        this.processCellCallback = processCellCallback;\n        this.processHeaderCallback = processHeaderCallback;\n        this.cellAndHeaderEscaper = cellAndHeaderEscaper;\n    }\n    BaseGridSerializingSession.prototype.extractHeaderValue = function (column) {\n        var nameForCol = this.getHeaderName(this.processHeaderCallback, column);\n        if (nameForCol === null || nameForCol === undefined) {\n            nameForCol = '';\n        }\n        return this.cellAndHeaderEscaper ? this.cellAndHeaderEscaper(nameForCol) : nameForCol;\n    };\n    BaseGridSerializingSession.prototype.extractRowCellValue = function (column, index, type, node) {\n        var isRowGrouping = this.columnController.getRowGroupColumns().length > 0;\n        var valueForCell;\n        if (node && node.group && isRowGrouping && index === 0) {\n            valueForCell = this.createValueForGroupNode(node);\n        }\n        else {\n            valueForCell = this.valueService.getValue(column, node);\n        }\n        valueForCell = this.processCell(node, column, valueForCell, this.processCellCallback, type);\n        if (valueForCell === null || valueForCell === undefined) {\n            valueForCell = '';\n        }\n        return this.cellAndHeaderEscaper ? this.cellAndHeaderEscaper(valueForCell) : valueForCell;\n    };\n    BaseGridSerializingSession.prototype.getHeaderName = function (callback, column) {\n        if (callback) {\n            return callback({\n                column: column,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext()\n            });\n        }\n        else {\n            return this.columnController.getDisplayNameForColumn(column, 'csv', true);\n        }\n    };\n    BaseGridSerializingSession.prototype.createValueForGroupNode = function (node) {\n        var keys = [node.key];\n        while (node.parent) {\n            node = node.parent;\n            keys.push(node.key);\n        }\n        return keys.reverse().join(' -> ');\n    };\n    BaseGridSerializingSession.prototype.processCell = function (rowNode, column, value, processCellCallback, type) {\n        if (processCellCallback) {\n            return processCellCallback({\n                column: column,\n                node: rowNode,\n                value: value,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext(),\n                type: type\n            });\n        }\n        else {\n            return value;\n        }\n    };\n    return BaseGridSerializingSession;\n}());\nexports.BaseGridSerializingSession = BaseGridSerializingSession;\nvar GridSerializer = /** @class */ (function () {\n    function GridSerializer() {\n    }\n    GridSerializer.prototype.serialize = function (gridSerializingSession, params) {\n        var dontSkipRows = function () { return false; };\n        var skipGroups = params && params.skipGroups;\n        var skipHeader = params && params.skipHeader;\n        var columnGroups = params && params.columnGroups;\n        var skipFooters = params && params.skipFooters;\n        var skipPinnedTop = params && params.skipPinnedTop;\n        var skipPinnedBottom = params && params.skipPinnedBottom;\n        var includeCustomHeader = params && params.customHeader;\n        var includeCustomFooter = params && params.customFooter;\n        var allColumns = params && params.allColumns;\n        var onlySelected = params && params.onlySelected;\n        var columnKeys = params && params.columnKeys;\n        var onlySelectedAllPages = params && params.onlySelectedAllPages;\n        var rowSkipper = (params && params.shouldRowBeSkipped) || dontSkipRows;\n        var api = this.gridOptionsWrapper.getApi();\n        var skipSingleChildrenGroup = this.gridOptionsWrapper.isGroupRemoveSingleChildren();\n        var skipLowestSingleChildrenGroup = this.gridOptionsWrapper.isGroupRemoveLowestSingleChildren();\n        var context = this.gridOptionsWrapper.getContext();\n        // when in pivot mode, we always render cols on screen, never 'all columns'\n        var isPivotMode = this.columnController.isPivotMode();\n        var rowModelNormal = this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        var onlySelectedNonStandardModel = !rowModelNormal && onlySelected;\n        var columnsToExport = [];\n        if (utils_1._.existsAndNotEmpty(columnKeys)) {\n            columnsToExport = this.columnController.getGridColumns(columnKeys);\n        }\n        else if (allColumns && !isPivotMode) {\n            // add auto group column for tree data\n            columnsToExport = this.gridOptionsWrapper.isTreeData() ?\n                this.columnController.getGridColumns([constants_1.Constants.GROUP_AUTO_COLUMN_ID]) : [];\n            columnsToExport = columnsToExport.concat(this.columnController.getAllPrimaryColumns() || []);\n        }\n        else {\n            columnsToExport = this.columnController.getAllDisplayedColumns();\n        }\n        if (includeCustomHeader) {\n            gridSerializingSession.addCustomHeader(includeCustomHeader);\n        }\n        gridSerializingSession.prepare(columnsToExport);\n        // first pass, put in the header names of the cols\n        if (columnGroups) {\n            var groupInstanceIdCreator = new groupInstanceIdCreator_1.GroupInstanceIdCreator();\n            var displayedGroups = this.displayedGroupCreator.createDisplayedGroups(columnsToExport, this.columnController.getGridBalancedTree(), groupInstanceIdCreator, null);\n            this.recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession);\n        }\n        if (!skipHeader) {\n            var gridRowIterator_1 = gridSerializingSession.onNewHeaderRow();\n            columnsToExport.forEach(function (column, index) {\n                gridRowIterator_1.onColumn(column, index, undefined);\n            });\n        }\n        this.pinnedRowModel.forEachPinnedTopRow(processRow);\n        if (isPivotMode) {\n            if (this.rowModel.forEachPivotNode) {\n                this.rowModel.forEachPivotNode(processRow);\n            }\n            else {\n                //Must be enterprise, so we can just loop through all the nodes\n                this.rowModel.forEachNode(processRow);\n            }\n        }\n        else {\n            // onlySelectedAllPages: user doing pagination and wants selected items from\n            // other pages, so cannot use the standard row model as it won't have rows from\n            // other pages.\n            // onlySelectedNonStandardModel: if user wants selected in non standard row model\n            // (eg viewport) then again rowmodel cannot be used, so need to use selected instead.\n            if (onlySelectedAllPages || onlySelectedNonStandardModel) {\n                var selectedNodes = this.selectionController.getSelectedNodes();\n                selectedNodes.forEach(function (node) {\n                    processRow(node);\n                });\n            }\n            else {\n                // here is everything else - including standard row model and selected. we don't use\n                // the selection model even when just using selected, so that the result is the order\n                // of the rows appearing on the screen.\n                if (rowModelNormal) {\n                    this.rowModel.forEachNodeAfterFilterAndSort(processRow);\n                }\n                else {\n                    this.rowModel.forEachNode(processRow);\n                }\n            }\n        }\n        this.pinnedRowModel.forEachPinnedBottomRow(processRow);\n        if (includeCustomFooter) {\n            gridSerializingSession.addCustomFooter(includeCustomFooter);\n        }\n        function processRow(node) {\n            var shouldSkipLowestGroup = skipLowestSingleChildrenGroup && node.leafGroup;\n            var shouldSkipCurrentGroup = node.allChildrenCount === 1 && (skipSingleChildrenGroup || shouldSkipLowestGroup);\n            if (node.group && (skipGroups || shouldSkipCurrentGroup)) {\n                return;\n            }\n            if (skipFooters && node.footer) {\n                return;\n            }\n            if (onlySelected && !node.isSelected()) {\n                return;\n            }\n            if (skipPinnedTop && node.rowPinned === 'top') {\n                return;\n            }\n            if (skipPinnedBottom && node.rowPinned === 'bottom') {\n                return;\n            }\n            // if we are in pivotMode, then the grid will show the root node only\n            // if it's not a leaf group\n            var nodeIsRootNode = node.level === -1;\n            if (nodeIsRootNode && !node.leafGroup) {\n                return;\n            }\n            var shouldRowBeSkipped = rowSkipper({\n                node: node,\n                api: api,\n                context: context\n            });\n            if (shouldRowBeSkipped) {\n                return;\n            }\n            var rowAccumulator = gridSerializingSession.onNewBodyRow();\n            columnsToExport.forEach(function (column, index) {\n                rowAccumulator.onColumn(column, index, node);\n            });\n        }\n        return gridSerializingSession.parse();\n    };\n    GridSerializer.prototype.recursivelyAddHeaderGroups = function (displayedGroups, gridSerializingSession) {\n        var directChildrenHeaderGroups = [];\n        displayedGroups.forEach(function (columnGroupChild) {\n            var columnGroup = columnGroupChild;\n            if (!columnGroup.getChildren) {\n                return;\n            }\n            columnGroup.getChildren().forEach(function (it) { return directChildrenHeaderGroups.push(it); });\n        });\n        if (displayedGroups.length > 0 && displayedGroups[0] instanceof columnGroup_1.ColumnGroup) {\n            this.doAddHeaderHeader(gridSerializingSession, displayedGroups);\n        }\n        if (directChildrenHeaderGroups && directChildrenHeaderGroups.length > 0) {\n            this.recursivelyAddHeaderGroups(directChildrenHeaderGroups, gridSerializingSession);\n        }\n    };\n    GridSerializer.prototype.doAddHeaderHeader = function (gridSerializingSession, displayedGroups) {\n        var _this = this;\n        var gridRowIterator = gridSerializingSession.onNewHeaderGroupingRow();\n        var columnIndex = 0;\n        displayedGroups.forEach(function (columnGroupChild) {\n            var columnGroup = columnGroupChild;\n            var columnName = _this.columnController.getDisplayNameForColumnGroup(columnGroup, 'header');\n            gridRowIterator.onColumn(columnName || '', columnIndex++, columnGroup.getLeafColumns().length - 1);\n        });\n    };\n    __decorate([\n        context_1.Autowired('displayedGroupCreator'),\n        __metadata(\"design:type\", displayedGroupCreator_1.DisplayedGroupCreator)\n    ], GridSerializer.prototype, \"displayedGroupCreator\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GridSerializer.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], GridSerializer.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('pinnedRowModel'),\n        __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)\n    ], GridSerializer.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], GridSerializer.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('columnFactory'),\n        __metadata(\"design:type\", columnFactory_1.ColumnFactory)\n    ], GridSerializer.prototype, \"columnFactory\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GridSerializer.prototype, \"gridOptionsWrapper\", void 0);\n    GridSerializer = __decorate([\n        context_1.Bean(\"gridSerializer\")\n    ], GridSerializer);\n    return GridSerializer;\n}());\nexports.GridSerializer = GridSerializer;\nvar RowType;\n(function (RowType) {\n    RowType[RowType[\"HEADER_GROUPING\"] = 0] = \"HEADER_GROUPING\";\n    RowType[RowType[\"HEADER\"] = 1] = \"HEADER\";\n    RowType[RowType[\"BODY\"] = 2] = \"BODY\";\n})(RowType = exports.RowType || (exports.RowType = {}));\n"},"lineCount":299}},"error":null,"hash":"01fe55c402fc2caa376a724747a19314","cacheData":{"env":{}}}