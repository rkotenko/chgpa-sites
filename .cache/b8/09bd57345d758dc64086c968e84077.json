{"id":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","dependencies":[{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/package.json","includedInParent":true,"mtime":1567280299315},{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/package.json","includedInParent":true,"mtime":1567183294748},{"name":"../../utils","loc":{"line":22,"column":22},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/utils/index.js"},{"name":"../../entities/rowNode","loc":{"line":23,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/rowNode.js"},{"name":"../../context/beanStub","loc":{"line":24,"column":25},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/context/beanStub.js"}],"generated":{"js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar beanStub_1 = require(\"../../context/beanStub\");\nvar RowNodeBlock = /** @class */ (function (_super) {\n    __extends(RowNodeBlock, _super);\n    function RowNodeBlock(blockNumber, rowNodeCacheParams) {\n        var _this = _super.call(this) || this;\n        _this.version = 0;\n        _this.state = RowNodeBlock.STATE_DIRTY;\n        _this.rowNodeCacheParams = rowNodeCacheParams;\n        _this.blockNumber = blockNumber;\n        // we don't need to calculate these now, as the inputs don't change,\n        // however it makes the code easier to read if we work them out up front\n        _this.startRow = blockNumber * rowNodeCacheParams.blockSize;\n        _this.endRow = _this.startRow + rowNodeCacheParams.blockSize;\n        return _this;\n    }\n    RowNodeBlock.prototype.isAnyNodeOpen = function (rowCount) {\n        var result = false;\n        this.forEachNodeCallback(function (rowNode) {\n            if (rowNode.expanded) {\n                result = true;\n            }\n        }, rowCount);\n        return result;\n    };\n    RowNodeBlock.prototype.forEachNodeCallback = function (callback, rowCount) {\n        for (var rowIndex = this.startRow; rowIndex < this.endRow; rowIndex++) {\n            // we check against rowCount as this page may be the last one, and if it is, then\n            // the last rows are not part of the set\n            if (rowIndex < rowCount) {\n                var rowNode = this.getRowUsingLocalIndex(rowIndex);\n                callback(rowNode, rowIndex);\n            }\n        }\n    };\n    RowNodeBlock.prototype.forEachNode = function (callback, sequence, rowCount, deep) {\n        this.forEachNodeCallback(function (rowNode) {\n            callback(rowNode, sequence.next());\n            // this will only every happen for server side row model, as infinite\n            // row model doesn't have groups\n            if (deep && rowNode.childrenCache) {\n                rowNode.childrenCache.forEachNodeDeep(callback, sequence);\n            }\n        }, rowCount);\n    };\n    RowNodeBlock.prototype.forEachNodeDeep = function (callback, sequence, rowCount) {\n        this.forEachNode(callback, sequence, rowCount, true);\n    };\n    RowNodeBlock.prototype.forEachNodeShallow = function (callback, sequence, rowCount) {\n        this.forEachNode(callback, sequence, rowCount, false);\n    };\n    RowNodeBlock.prototype.getVersion = function () {\n        return this.version;\n    };\n    RowNodeBlock.prototype.getLastAccessed = function () {\n        return this.lastAccessed;\n    };\n    RowNodeBlock.prototype.getRowUsingLocalIndex = function (rowIndex, dontTouchLastAccessed) {\n        if (dontTouchLastAccessed === void 0) { dontTouchLastAccessed = false; }\n        if (!dontTouchLastAccessed) {\n            this.lastAccessed = this.rowNodeCacheParams.lastAccessedSequence.next();\n        }\n        var localIndex = rowIndex - this.startRow;\n        return this.rowNodes[localIndex];\n    };\n    RowNodeBlock.prototype.init = function (beans) {\n        this.beans = beans;\n        this.createRowNodes();\n    };\n    RowNodeBlock.prototype.getStartRow = function () {\n        return this.startRow;\n    };\n    RowNodeBlock.prototype.getEndRow = function () {\n        return this.endRow;\n    };\n    RowNodeBlock.prototype.getBlockNumber = function () {\n        return this.blockNumber;\n    };\n    RowNodeBlock.prototype.setDirty = function () {\n        // in case any current loads in progress, this will have their results ignored\n        this.version++;\n        this.state = RowNodeBlock.STATE_DIRTY;\n    };\n    RowNodeBlock.prototype.setDirtyAndPurge = function () {\n        this.setDirty();\n        this.rowNodes.forEach(function (rowNode) {\n            rowNode.setData(null);\n        });\n    };\n    RowNodeBlock.prototype.getState = function () {\n        return this.state;\n    };\n    RowNodeBlock.prototype.setRowNode = function (rowIndex, rowNode) {\n        var localIndex = rowIndex - this.startRow;\n        this.rowNodes[localIndex] = rowNode;\n    };\n    RowNodeBlock.prototype.setBlankRowNode = function (rowIndex) {\n        var localIndex = rowIndex - this.startRow;\n        var newRowNode = this.createBlankRowNode(rowIndex);\n        this.rowNodes[localIndex] = newRowNode;\n        return newRowNode;\n    };\n    RowNodeBlock.prototype.setNewData = function (rowIndex, dataItem) {\n        var newRowNode = this.setBlankRowNode(rowIndex);\n        this.setDataAndId(newRowNode, dataItem, this.startRow + rowIndex);\n        return newRowNode;\n    };\n    RowNodeBlock.prototype.createBlankRowNode = function (rowIndex) {\n        var rowNode = new rowNode_1.RowNode();\n        this.beans.context.wireBean(rowNode);\n        rowNode.setRowHeight(this.rowNodeCacheParams.rowHeight);\n        return rowNode;\n    };\n    // creates empty row nodes, data is missing as not loaded yet\n    RowNodeBlock.prototype.createRowNodes = function () {\n        this.rowNodes = [];\n        for (var i = 0; i < this.rowNodeCacheParams.blockSize; i++) {\n            var rowIndex = this.startRow + i;\n            var rowNode = this.createBlankRowNode(rowIndex);\n            this.rowNodes.push(rowNode);\n        }\n    };\n    RowNodeBlock.prototype.load = function () {\n        this.state = RowNodeBlock.STATE_LOADING;\n        this.loadFromDatasource();\n    };\n    RowNodeBlock.prototype.pageLoadFailed = function () {\n        this.state = RowNodeBlock.STATE_FAILED;\n        var event = {\n            type: RowNodeBlock.EVENT_LOAD_COMPLETE,\n            success: false,\n            page: this,\n            lastRow: null\n        };\n        this.dispatchEvent(event);\n    };\n    RowNodeBlock.prototype.populateWithRowData = function (rows) {\n        var _this = this;\n        var rowNodesToRefresh = [];\n        this.rowNodes.forEach(function (rowNode, index) {\n            var data = rows[index];\n            if (rowNode.stub) {\n                rowNodesToRefresh.push(rowNode);\n            }\n            _this.setDataAndId(rowNode, data, _this.startRow + index);\n        });\n        if (rowNodesToRefresh.length > 0) {\n            this.beans.rowRenderer.redrawRows(rowNodesToRefresh);\n        }\n    };\n    RowNodeBlock.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.rowNodes.forEach(function (rowNode) {\n            if (rowNode.childrenCache) {\n                rowNode.childrenCache.destroy();\n                rowNode.childrenCache = null;\n            }\n            // this is needed, so row render knows to fade out the row, otherwise it\n            // sees row top is present, and thinks the row should be shown. maybe\n            // rowNode should have a flag on whether it is visible???\n            rowNode.clearRowTop();\n        });\n    };\n    RowNodeBlock.prototype.pageLoaded = function (version, rows, lastRow) {\n        // we need to check the version, in case there was an old request\n        // from the server that was sent before we refreshed the cache,\n        // if the load was done as a result of a cache refresh\n        if (version === this.version) {\n            this.state = RowNodeBlock.STATE_LOADED;\n            this.populateWithRowData(rows);\n        }\n        lastRow = utils_1._.cleanNumber(lastRow);\n        // check here if lastRow should be set\n        var event = {\n            type: RowNodeBlock.EVENT_LOAD_COMPLETE,\n            success: true,\n            page: this,\n            lastRow: lastRow\n        };\n        this.dispatchEvent(event);\n    };\n    RowNodeBlock.EVENT_LOAD_COMPLETE = 'loadComplete';\n    RowNodeBlock.STATE_DIRTY = 'dirty';\n    RowNodeBlock.STATE_LOADING = 'loading';\n    RowNodeBlock.STATE_LOADED = 'loaded';\n    RowNodeBlock.STATE_FAILED = 'failed';\n    return RowNodeBlock;\n}(beanStub_1.BeanStub));\nexports.RowNodeBlock = RowNodeBlock;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}}],"sources":{"node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar beanStub_1 = require(\"../../context/beanStub\");\nvar RowNodeBlock = /** @class */ (function (_super) {\n    __extends(RowNodeBlock, _super);\n    function RowNodeBlock(blockNumber, rowNodeCacheParams) {\n        var _this = _super.call(this) || this;\n        _this.version = 0;\n        _this.state = RowNodeBlock.STATE_DIRTY;\n        _this.rowNodeCacheParams = rowNodeCacheParams;\n        _this.blockNumber = blockNumber;\n        // we don't need to calculate these now, as the inputs don't change,\n        // however it makes the code easier to read if we work them out up front\n        _this.startRow = blockNumber * rowNodeCacheParams.blockSize;\n        _this.endRow = _this.startRow + rowNodeCacheParams.blockSize;\n        return _this;\n    }\n    RowNodeBlock.prototype.isAnyNodeOpen = function (rowCount) {\n        var result = false;\n        this.forEachNodeCallback(function (rowNode) {\n            if (rowNode.expanded) {\n                result = true;\n            }\n        }, rowCount);\n        return result;\n    };\n    RowNodeBlock.prototype.forEachNodeCallback = function (callback, rowCount) {\n        for (var rowIndex = this.startRow; rowIndex < this.endRow; rowIndex++) {\n            // we check against rowCount as this page may be the last one, and if it is, then\n            // the last rows are not part of the set\n            if (rowIndex < rowCount) {\n                var rowNode = this.getRowUsingLocalIndex(rowIndex);\n                callback(rowNode, rowIndex);\n            }\n        }\n    };\n    RowNodeBlock.prototype.forEachNode = function (callback, sequence, rowCount, deep) {\n        this.forEachNodeCallback(function (rowNode) {\n            callback(rowNode, sequence.next());\n            // this will only every happen for server side row model, as infinite\n            // row model doesn't have groups\n            if (deep && rowNode.childrenCache) {\n                rowNode.childrenCache.forEachNodeDeep(callback, sequence);\n            }\n        }, rowCount);\n    };\n    RowNodeBlock.prototype.forEachNodeDeep = function (callback, sequence, rowCount) {\n        this.forEachNode(callback, sequence, rowCount, true);\n    };\n    RowNodeBlock.prototype.forEachNodeShallow = function (callback, sequence, rowCount) {\n        this.forEachNode(callback, sequence, rowCount, false);\n    };\n    RowNodeBlock.prototype.getVersion = function () {\n        return this.version;\n    };\n    RowNodeBlock.prototype.getLastAccessed = function () {\n        return this.lastAccessed;\n    };\n    RowNodeBlock.prototype.getRowUsingLocalIndex = function (rowIndex, dontTouchLastAccessed) {\n        if (dontTouchLastAccessed === void 0) { dontTouchLastAccessed = false; }\n        if (!dontTouchLastAccessed) {\n            this.lastAccessed = this.rowNodeCacheParams.lastAccessedSequence.next();\n        }\n        var localIndex = rowIndex - this.startRow;\n        return this.rowNodes[localIndex];\n    };\n    RowNodeBlock.prototype.init = function (beans) {\n        this.beans = beans;\n        this.createRowNodes();\n    };\n    RowNodeBlock.prototype.getStartRow = function () {\n        return this.startRow;\n    };\n    RowNodeBlock.prototype.getEndRow = function () {\n        return this.endRow;\n    };\n    RowNodeBlock.prototype.getBlockNumber = function () {\n        return this.blockNumber;\n    };\n    RowNodeBlock.prototype.setDirty = function () {\n        // in case any current loads in progress, this will have their results ignored\n        this.version++;\n        this.state = RowNodeBlock.STATE_DIRTY;\n    };\n    RowNodeBlock.prototype.setDirtyAndPurge = function () {\n        this.setDirty();\n        this.rowNodes.forEach(function (rowNode) {\n            rowNode.setData(null);\n        });\n    };\n    RowNodeBlock.prototype.getState = function () {\n        return this.state;\n    };\n    RowNodeBlock.prototype.setRowNode = function (rowIndex, rowNode) {\n        var localIndex = rowIndex - this.startRow;\n        this.rowNodes[localIndex] = rowNode;\n    };\n    RowNodeBlock.prototype.setBlankRowNode = function (rowIndex) {\n        var localIndex = rowIndex - this.startRow;\n        var newRowNode = this.createBlankRowNode(rowIndex);\n        this.rowNodes[localIndex] = newRowNode;\n        return newRowNode;\n    };\n    RowNodeBlock.prototype.setNewData = function (rowIndex, dataItem) {\n        var newRowNode = this.setBlankRowNode(rowIndex);\n        this.setDataAndId(newRowNode, dataItem, this.startRow + rowIndex);\n        return newRowNode;\n    };\n    RowNodeBlock.prototype.createBlankRowNode = function (rowIndex) {\n        var rowNode = new rowNode_1.RowNode();\n        this.beans.context.wireBean(rowNode);\n        rowNode.setRowHeight(this.rowNodeCacheParams.rowHeight);\n        return rowNode;\n    };\n    // creates empty row nodes, data is missing as not loaded yet\n    RowNodeBlock.prototype.createRowNodes = function () {\n        this.rowNodes = [];\n        for (var i = 0; i < this.rowNodeCacheParams.blockSize; i++) {\n            var rowIndex = this.startRow + i;\n            var rowNode = this.createBlankRowNode(rowIndex);\n            this.rowNodes.push(rowNode);\n        }\n    };\n    RowNodeBlock.prototype.load = function () {\n        this.state = RowNodeBlock.STATE_LOADING;\n        this.loadFromDatasource();\n    };\n    RowNodeBlock.prototype.pageLoadFailed = function () {\n        this.state = RowNodeBlock.STATE_FAILED;\n        var event = {\n            type: RowNodeBlock.EVENT_LOAD_COMPLETE,\n            success: false,\n            page: this,\n            lastRow: null\n        };\n        this.dispatchEvent(event);\n    };\n    RowNodeBlock.prototype.populateWithRowData = function (rows) {\n        var _this = this;\n        var rowNodesToRefresh = [];\n        this.rowNodes.forEach(function (rowNode, index) {\n            var data = rows[index];\n            if (rowNode.stub) {\n                rowNodesToRefresh.push(rowNode);\n            }\n            _this.setDataAndId(rowNode, data, _this.startRow + index);\n        });\n        if (rowNodesToRefresh.length > 0) {\n            this.beans.rowRenderer.redrawRows(rowNodesToRefresh);\n        }\n    };\n    RowNodeBlock.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.rowNodes.forEach(function (rowNode) {\n            if (rowNode.childrenCache) {\n                rowNode.childrenCache.destroy();\n                rowNode.childrenCache = null;\n            }\n            // this is needed, so row render knows to fade out the row, otherwise it\n            // sees row top is present, and thinks the row should be shown. maybe\n            // rowNode should have a flag on whether it is visible???\n            rowNode.clearRowTop();\n        });\n    };\n    RowNodeBlock.prototype.pageLoaded = function (version, rows, lastRow) {\n        // we need to check the version, in case there was an old request\n        // from the server that was sent before we refreshed the cache,\n        // if the load was done as a result of a cache refresh\n        if (version === this.version) {\n            this.state = RowNodeBlock.STATE_LOADED;\n            this.populateWithRowData(rows);\n        }\n        lastRow = utils_1._.cleanNumber(lastRow);\n        // check here if lastRow should be set\n        var event = {\n            type: RowNodeBlock.EVENT_LOAD_COMPLETE,\n            success: true,\n            page: this,\n            lastRow: lastRow\n        };\n        this.dispatchEvent(event);\n    };\n    RowNodeBlock.EVENT_LOAD_COMPLETE = 'loadComplete';\n    RowNodeBlock.STATE_DIRTY = 'dirty';\n    RowNodeBlock.STATE_LOADING = 'loading';\n    RowNodeBlock.STATE_LOADED = 'loaded';\n    RowNodeBlock.STATE_FAILED = 'failed';\n    return RowNodeBlock;\n}(beanStub_1.BeanStub));\nexports.RowNodeBlock = RowNodeBlock;\n"},"lineCount":212}},"error":null,"hash":"1dfaf3b245a370ca49fcd9604ebe5554","cacheData":{"env":{}}}