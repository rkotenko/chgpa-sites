{"id":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","dependencies":[{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/package.json","includedInParent":true,"mtime":1567280299315},{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/package.json","includedInParent":true,"mtime":1567183294748},{"name":"../../gridOptionsWrapper","loc":{"line":31,"column":35},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridOptionsWrapper.js"},{"name":"../../valueService/expressionService","loc":{"line":32,"column":34},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/valueService/expressionService.js"},{"name":"../../eventService","loc":{"line":33,"column":29},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/eventService.js"},{"name":"../../constants","loc":{"line":34,"column":26},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/constants.js"},{"name":"../../context/context","loc":{"line":35,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/context/context.js"},{"name":"../../widgets/component","loc":{"line":36,"column":26},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/widgets/component.js"},{"name":"../../entities/rowNode","loc":{"line":37,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/rowNode.js"},{"name":"../valueFormatterService","loc":{"line":38,"column":38},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/valueFormatterService.js"},{"name":"../checkboxSelectionComponent","loc":{"line":39,"column":43},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/checkboxSelectionComponent.js"},{"name":"../../columnController/columnController","loc":{"line":40,"column":33},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/columnController.js"},{"name":"../../entities/column","loc":{"line":41,"column":23},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/column.js"},{"name":"../../widgets/componentAnnotations","loc":{"line":42,"column":37},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/widgets/componentAnnotations.js"},{"name":"../../gridPanel/mouseEventService","loc":{"line":43,"column":34},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridPanel/mouseEventService.js"},{"name":"../../components/framework/userComponentFactory","loc":{"line":44,"column":37},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/components/framework/userComponentFactory.js"},{"name":"../../utils","loc":{"line":45,"column":22},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/utils/index.js"}],"generated":{"js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar expressionService_1 = require(\"../../valueService/expressionService\");\nvar eventService_1 = require(\"../../eventService\");\nvar constants_1 = require(\"../../constants\");\nvar context_1 = require(\"../../context/context\");\nvar component_1 = require(\"../../widgets/component\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar valueFormatterService_1 = require(\"../valueFormatterService\");\nvar checkboxSelectionComponent_1 = require(\"../checkboxSelectionComponent\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar column_1 = require(\"../../entities/column\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar mouseEventService_1 = require(\"../../gridPanel/mouseEventService\");\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\nvar utils_1 = require(\"../../utils\");\nvar GroupCellRenderer = /** @class */ (function (_super) {\n    __extends(GroupCellRenderer, _super);\n    function GroupCellRenderer() {\n        return _super.call(this, GroupCellRenderer.TEMPLATE) || this;\n    }\n    GroupCellRenderer.prototype.init = function (params) {\n        this.params = params;\n        if (this.gridOptionsWrapper.isGroupIncludeTotalFooter()) {\n            this.assignBlankValueToGroupFooterCell(params);\n        }\n        var embeddedRowMismatch = this.isEmbeddedRowMismatch();\n        // This allows for empty strings to appear as groups since\n        // it will only return for null or undefined.\n        var cellIsEmpty = params.value == null;\n        this.cellIsBlank = embeddedRowMismatch || cellIsEmpty;\n        if (this.cellIsBlank) {\n            return;\n        }\n        this.setupDragOpenParents();\n        this.addExpandAndContract();\n        this.addCheckboxIfNeeded();\n        this.addValueElement();\n        this.setupIndent();\n    };\n    GroupCellRenderer.prototype.assignBlankValueToGroupFooterCell = function (params) {\n        // this is not ideal, but it was the only way we could get footer working for the root node\n        if (!params.value && params.node.level == -1) {\n            params.value = '';\n        }\n    };\n    // if we are doing embedded full width rows, we only show the renderer when\n    // in the body, or if pinning in the pinned section, or if pinning and RTL,\n    // in the right section. otherwise we would have the cell repeated in each section.\n    GroupCellRenderer.prototype.isEmbeddedRowMismatch = function () {\n        if (this.params.fullWidth && this.gridOptionsWrapper.isEmbedFullWidthRows()) {\n            var pinnedLeftCell = this.params.pinned === column_1.Column.PINNED_LEFT;\n            var pinnedRightCell = this.params.pinned === column_1.Column.PINNED_RIGHT;\n            var bodyCell = !pinnedLeftCell && !pinnedRightCell;\n            if (this.gridOptionsWrapper.isEnableRtl()) {\n                if (this.columnController.isPinningLeft()) {\n                    return !pinnedRightCell;\n                }\n                else {\n                    return !bodyCell;\n                }\n            }\n            else {\n                if (this.columnController.isPinningLeft()) {\n                    return !pinnedLeftCell;\n                }\n                else {\n                    return !bodyCell;\n                }\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    GroupCellRenderer.prototype.setIndent = function () {\n        if (this.gridOptionsWrapper.isGroupHideOpenParents()) {\n            return;\n        }\n        var params = this.params;\n        var rowNode = params.node;\n        var paddingCount = rowNode.uiLevel;\n        var userProvidedPaddingPixelsTheDeprecatedWay = params.padding >= 0;\n        if (userProvidedPaddingPixelsTheDeprecatedWay) {\n            this.setPaddingDeprecatedWay(paddingCount, params.padding);\n            return;\n        }\n        if (this.indentClass) {\n            this.removeCssClass(this.indentClass);\n        }\n        this.indentClass = 'ag-row-group-indent-' + paddingCount;\n        this.addCssClass(this.indentClass);\n    };\n    GroupCellRenderer.prototype.setPaddingDeprecatedWay = function (paddingCount, padding) {\n        utils_1._.doOnce(function () { return console.warn('ag-Grid: since v14.2, configuring padding for groupCellRenderer should be done with Sass variables and themes. Please see the ag-Grid documentation page for Themes, in particular the property $row-group-indent-size.'); }, 'groupCellRenderer->doDeprecatedWay');\n        var paddingPx = paddingCount * padding;\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // if doing rtl, padding is on the right\n            this.getGui().style.paddingRight = paddingPx + 'px';\n        }\n        else {\n            // otherwise it is on the left\n            this.getGui().style.paddingLeft = paddingPx + 'px';\n        }\n    };\n    GroupCellRenderer.prototype.setupIndent = function () {\n        // only do this if an indent - as this overwrites the padding that\n        // the theme set, which will make things look 'not aligned' for the\n        // first group level.\n        var node = this.params.node;\n        var suppressPadding = this.params.suppressPadding;\n        if (!suppressPadding) {\n            this.addDestroyableEventListener(node, rowNode_1.RowNode.EVENT_UI_LEVEL_CHANGED, this.setIndent.bind(this));\n            this.setIndent();\n        }\n    };\n    GroupCellRenderer.prototype.addValueElement = function () {\n        var params = this.params;\n        var rowNode = this.displayedGroup;\n        if (rowNode.footer) {\n            this.createFooterCell();\n        }\n        else if (rowNode.hasChildren() ||\n            utils_1._.get(params.colDef, 'cellRendererParams.innerRenderer', null) ||\n            utils_1._.get(params.colDef, 'cellRendererParams.innerRendererFramework', null)) {\n            this.createGroupCell();\n            if (rowNode.hasChildren()) {\n                this.addChildCount();\n            }\n        }\n        else {\n            this.createLeafCell();\n        }\n    };\n    GroupCellRenderer.prototype.createFooterCell = function () {\n        var footerValue;\n        var footerValueGetter = this.params.footerValueGetter;\n        if (footerValueGetter) {\n            // params is same as we were given, except we set the value as the item to display\n            var paramsClone = utils_1._.cloneObject(this.params);\n            paramsClone.value = this.params.value;\n            if (typeof footerValueGetter === 'function') {\n                footerValue = footerValueGetter(paramsClone);\n            }\n            else if (typeof footerValueGetter === 'string') {\n                footerValue = this.expressionService.evaluate(footerValueGetter, paramsClone);\n            }\n            else {\n                console.warn('ag-Grid: footerValueGetter should be either a function or a string (expression)');\n            }\n        }\n        else {\n            footerValue = 'Total ' + this.params.value;\n        }\n        this.eValue.innerHTML = footerValue;\n    };\n    GroupCellRenderer.prototype.createGroupCell = function () {\n        var _this = this;\n        var params = this.params;\n        var rowGroupColumn = this.displayedGroup.rowGroupColumn;\n        // we try and use the cellRenderer of the column used for the grouping if we can\n        var columnToUse = rowGroupColumn ? rowGroupColumn : params.column;\n        var groupName = this.params.value;\n        var valueFormatted = columnToUse ?\n            this.valueFormatterService.formatValue(columnToUse, params.node, params.scope, groupName) : null;\n        params.valueFormatted = valueFormatted;\n        var rendererPromise;\n        if (params.fullWidth == true) {\n            rendererPromise = this.useFullWidth(params);\n        }\n        else {\n            rendererPromise = this.useInnerRenderer(this.params.colDef.cellRendererParams, columnToUse.getColDef(), params);\n        }\n        // retain a reference to the created renderer - we'll use this later for cleanup (in destroy)\n        if (rendererPromise) {\n            rendererPromise.then(function (value) {\n                _this.innerCellRenderer = value;\n            });\n        }\n    };\n    GroupCellRenderer.prototype.useInnerRenderer = function (groupCellRendererParams, groupedColumnDef, // the column this group row is for, eg 'Country'\n    params) {\n        // when grouping, the normal case is we use the cell renderer of the grouped column. eg if grouping by country\n        // and then rating, we will use the country cell renderer for each country group row and likewise the rating\n        // cell renderer for each rating group row.\n        //\n        // however if the user has innerCellRenderer defined, this gets preference and we don't use cell renderers\n        // of the grouped columns.\n        //\n        // so we check and use in the following order:\n        //\n        // 1) thisColDef.cellRendererParams.innerRenderer of the column showing the groups (eg auto group column)\n        // 2) groupedColDef.cellRenderer of the grouped column\n        // 3) groupedColDef.cellRendererParams.innerRenderer\n        var _this = this;\n        var cellRendererPromise = null;\n        // we check if cell renderer provided for the group cell renderer, eg colDef.cellRendererParams.innerRenderer\n        var groupInnerRendererClass = this.userComponentFactory\n            .lookupComponentClassDef(groupCellRendererParams, \"innerRenderer\");\n        if (groupInnerRendererClass && groupInnerRendererClass.component != null\n            && groupInnerRendererClass.source != userComponentFactory_1.ComponentSource.DEFAULT) {\n            // use the renderer defined in cellRendererParams.innerRenderer\n            cellRendererPromise = this.userComponentFactory.newInnerCellRenderer(groupCellRendererParams, params);\n        }\n        else {\n            // otherwise see if we can use the cellRenderer of the column we are grouping by\n            var groupColumnRendererClass = this.userComponentFactory\n                .lookupComponentClassDef(groupedColumnDef, \"cellRenderer\");\n            if (groupColumnRendererClass && groupColumnRendererClass.source != userComponentFactory_1.ComponentSource.DEFAULT) {\n                // Only if the original column is using a specific renderer, it it is a using a DEFAULT one ignore it\n                cellRendererPromise = this.userComponentFactory.newCellRenderer(groupedColumnDef, params);\n            }\n            else if (groupColumnRendererClass && groupColumnRendererClass.source == userComponentFactory_1.ComponentSource.DEFAULT\n                && (utils_1._.get(groupedColumnDef, 'cellRendererParams.innerRenderer', null))) {\n                // EDGE CASE - THIS COMES FROM A COLUMN WHICH HAS BEEN GROUPED DYNAMICALLY, THAT HAS AS RENDERER 'group'\n                // AND HAS A INNER CELL RENDERER\n                cellRendererPromise = this.userComponentFactory.newInnerCellRenderer(groupedColumnDef.cellRendererParams, params);\n            }\n            else {\n                // This forces the retrieval of the default plain cellRenderer that just renders the values.\n                cellRendererPromise = this.userComponentFactory.newCellRenderer({}, params);\n            }\n        }\n        if (cellRendererPromise != null) {\n            cellRendererPromise.then(function (rendererToUse) {\n                if (rendererToUse == null) {\n                    _this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n                    return;\n                }\n                utils_1._.bindCellRendererToHtmlElement(cellRendererPromise, _this.eValue);\n            });\n        }\n        else {\n            this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n        }\n        return cellRendererPromise;\n    };\n    GroupCellRenderer.prototype.useFullWidth = function (params) {\n        var cellRendererPromise = this.userComponentFactory.newFullWidthGroupRowInnerCellRenderer(params);\n        if (cellRendererPromise != null) {\n            utils_1._.bindCellRendererToHtmlElement(cellRendererPromise, this.eValue);\n        }\n        else {\n            this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n        }\n        return cellRendererPromise;\n    };\n    GroupCellRenderer.prototype.addChildCount = function () {\n        // only include the child count if it's included, eg if user doing custom aggregation,\n        // then this could be left out, or set to -1, ie no child count\n        if (this.params.suppressCount) {\n            return;\n        }\n        this.addDestroyableEventListener(this.displayedGroup, rowNode_1.RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.updateChildCount.bind(this));\n        // filtering changes the child count, so need to cater for it\n        this.updateChildCount();\n    };\n    GroupCellRenderer.prototype.updateChildCount = function () {\n        var allChildrenCount = this.displayedGroup.allChildrenCount;\n        this.eChildCount.innerHTML = allChildrenCount >= 0 ? \"(\" + allChildrenCount + \")\" : \"\";\n    };\n    GroupCellRenderer.prototype.createLeafCell = function () {\n        if (utils_1._.exists(this.params.value)) {\n            this.eValue.innerText = this.params.valueFormatted ? this.params.valueFormatted : this.params.value;\n        }\n    };\n    GroupCellRenderer.prototype.isUserWantsSelected = function () {\n        var paramsCheckbox = this.params.checkbox;\n        if (typeof paramsCheckbox === 'function') {\n            return paramsCheckbox(this.params);\n        }\n        else {\n            return paramsCheckbox === true;\n        }\n    };\n    GroupCellRenderer.prototype.addCheckboxIfNeeded = function () {\n        var rowNode = this.displayedGroup;\n        var checkboxNeeded = this.isUserWantsSelected()\n            // footers cannot be selected\n            && !rowNode.footer\n            // pinned rows cannot be selected\n            && !rowNode.rowPinned\n            // details cannot be selected\n            && !rowNode.detail;\n        if (checkboxNeeded) {\n            var cbSelectionComponent_1 = new checkboxSelectionComponent_1.CheckboxSelectionComponent();\n            this.getContext().wireBean(cbSelectionComponent_1);\n            cbSelectionComponent_1.init({ rowNode: rowNode, column: this.params.column });\n            this.eCheckbox.appendChild(cbSelectionComponent_1.getGui());\n            this.addDestroyFunc(function () { return cbSelectionComponent_1.destroy(); });\n        }\n        utils_1._.addOrRemoveCssClass(this.eCheckbox, 'ag-invisible', !checkboxNeeded);\n    };\n    GroupCellRenderer.prototype.addExpandAndContract = function () {\n        var params = this.params;\n        var eGroupCell = params.eGridCell;\n        var eExpandedIcon = utils_1._.createIconNoSpan('groupExpanded', this.gridOptionsWrapper, null);\n        var eContractedIcon = utils_1._.createIconNoSpan('groupContracted', this.gridOptionsWrapper, null);\n        this.eExpanded.appendChild(eExpandedIcon);\n        this.eContracted.appendChild(eContractedIcon);\n        this.addDestroyableEventListener(this.eExpanded, 'click', this.onExpandClicked.bind(this));\n        this.addDestroyableEventListener(this.eContracted, 'click', this.onExpandClicked.bind(this));\n        // expand / contract as the user hits enter\n        this.addDestroyableEventListener(eGroupCell, 'keydown', this.onKeyDown.bind(this));\n        this.addDestroyableEventListener(params.node, rowNode_1.RowNode.EVENT_EXPANDED_CHANGED, this.showExpandAndContractIcons.bind(this));\n        this.showExpandAndContractIcons();\n        // because we don't show the expand / contract when there are no children, we need to check every time\n        // the number of children change.\n        this.addDestroyableEventListener(this.displayedGroup, rowNode_1.RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.onAllChildrenCountChanged.bind(this));\n        // if editing groups, then double click is to start editing\n        if (!this.gridOptionsWrapper.isEnableGroupEdit() && this.isExpandable() && !params.suppressDoubleClickExpand) {\n            this.addDestroyableEventListener(eGroupCell, 'dblclick', this.onCellDblClicked.bind(this));\n        }\n    };\n    GroupCellRenderer.prototype.onAllChildrenCountChanged = function () {\n        // maybe if no children now, we should hide the expand / contract icons\n        this.showExpandAndContractIcons();\n        // if we have no children, this impacts the indent\n        this.setIndent();\n    };\n    GroupCellRenderer.prototype.onKeyDown = function (event) {\n        var enterKeyPressed = utils_1._.isKeyPressed(event, constants_1.Constants.KEY_ENTER);\n        if (enterKeyPressed) {\n            if (this.params.suppressEnterExpand) {\n                return;\n            }\n            var cellEditable = this.params.column && this.params.column.isCellEditable(this.params.node);\n            if (cellEditable) {\n                return;\n            }\n            event.preventDefault();\n            this.onExpandOrContract();\n        }\n    };\n    GroupCellRenderer.prototype.setupDragOpenParents = function () {\n        var column = this.params.column;\n        var rowNode = this.params.node;\n        if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {\n            this.draggedFromHideOpenParents = false;\n        }\n        else if (!rowNode.hasChildren()) {\n            // if we are here, and we are not a group, then we must of been dragged down,\n            // as otherwise the cell would be blank, and if cell is blank, this method is never called.\n            this.draggedFromHideOpenParents = true;\n        }\n        else {\n            var rowGroupColumn = rowNode.rowGroupColumn;\n            if (rowGroupColumn) {\n                // if the displayGroup column for this col matches the rowGroupColumn we grouped by for this node,\n                // then nothing was dragged down\n                this.draggedFromHideOpenParents = !column.isRowGroupDisplayed(rowGroupColumn.getId());\n            }\n            else {\n                // the only way we can end up here (no column, but a group) is if we are at the root node,\n                // which only happens when 'groupIncludeTotalFooter' is true. here, we are never dragging\n                this.draggedFromHideOpenParents = false;\n            }\n        }\n        if (this.draggedFromHideOpenParents) {\n            var pointer = rowNode.parent;\n            while (true) {\n                if (utils_1._.missing(pointer)) {\n                    break;\n                }\n                if (pointer.rowGroupColumn && column.isRowGroupDisplayed(pointer.rowGroupColumn.getId())) {\n                    this.displayedGroup = pointer;\n                    break;\n                }\n                pointer = pointer.parent;\n            }\n        }\n        // if we didn't find a displayed group, set it to the row node\n        if (utils_1._.missing(this.displayedGroup)) {\n            this.displayedGroup = rowNode;\n        }\n    };\n    GroupCellRenderer.prototype.onExpandClicked = function (mouseEvent) {\n        if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        // so if we expand a node, it does not also get selected.\n        utils_1._.stopPropagationForAgGrid(mouseEvent);\n        this.onExpandOrContract();\n    };\n    GroupCellRenderer.prototype.onCellDblClicked = function (mouseEvent) {\n        if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        // we want to avoid acting on double click events on the expand / contract icon,\n        // as that icons already has expand / collapse functionality on it. otherwise if\n        // the icon was double clicked, we would get 'click', 'click', 'dblclick' which\n        // is open->close->open, however double click should be open->close only.\n        var targetIsExpandIcon = utils_1._.isElementInEventPath(this.eExpanded, mouseEvent)\n            || utils_1._.isElementInEventPath(this.eContracted, mouseEvent);\n        if (!targetIsExpandIcon) {\n            this.onExpandOrContract();\n        }\n    };\n    GroupCellRenderer.prototype.onExpandOrContract = function () {\n        // must use the displayedGroup, so if data was dragged down, we expand the parent, not this row\n        var rowNode = this.displayedGroup;\n        rowNode.setExpanded(!rowNode.expanded);\n    };\n    GroupCellRenderer.prototype.isExpandable = function () {\n        var rowNode = this.params.node;\n        var reducedLeafNode = this.columnController.isPivotMode() && rowNode.leafGroup;\n        return this.draggedFromHideOpenParents ||\n            (rowNode.isExpandable() && !rowNode.footer && !reducedLeafNode);\n    };\n    GroupCellRenderer.prototype.showExpandAndContractIcons = function () {\n        var rowNode = this.params.node;\n        if (this.isExpandable()) {\n            // if expandable, show one based on expand state.\n            // if we were dragged down, means our parent is always expanded\n            var expanded = this.draggedFromHideOpenParents ? true : rowNode.expanded;\n            utils_1._.setDisplayed(this.eContracted, !expanded);\n            utils_1._.setDisplayed(this.eExpanded, expanded);\n        }\n        else {\n            // it not expandable, show neither\n            utils_1._.setDisplayed(this.eExpanded, false);\n            utils_1._.setDisplayed(this.eContracted, false);\n        }\n        var displayedGroup = this.displayedGroup;\n        // compensation padding for leaf nodes, so there is blank space instead of the expand icon\n        var pivotModeAndLeafGroup = this.columnController.isPivotMode() && displayedGroup.leafGroup;\n        var notExpandable = !displayedGroup.isExpandable();\n        var addLeafIndentClass = displayedGroup.footer || notExpandable || pivotModeAndLeafGroup;\n        this.addOrRemoveCssClass('ag-row-group', !addLeafIndentClass);\n        this.addOrRemoveCssClass('ag-row-group-leaf-indent', addLeafIndentClass);\n    };\n    GroupCellRenderer.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.innerCellRenderer && this.innerCellRenderer.destroy) {\n            this.innerCellRenderer.destroy();\n        }\n    };\n    GroupCellRenderer.prototype.refresh = function () {\n        return false;\n    };\n    GroupCellRenderer.TEMPLATE = '<span class=\"ag-cell-wrapper\">' +\n        '<span class=\"ag-group-expanded\" ref=\"eExpanded\"></span>' +\n        '<span class=\"ag-group-contracted\" ref=\"eContracted\"></span>' +\n        '<span class=\"ag-group-checkbox ag-invisible\" ref=\"eCheckbox\"></span>' +\n        '<span class=\"ag-group-value\" ref=\"eValue\"></span>' +\n        '<span class=\"ag-group-child-count\" ref=\"eChildCount\"></span>' +\n        '</span>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GroupCellRenderer.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('expressionService'),\n        __metadata(\"design:type\", expressionService_1.ExpressionService)\n    ], GroupCellRenderer.prototype, \"expressionService\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], GroupCellRenderer.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('valueFormatterService'),\n        __metadata(\"design:type\", valueFormatterService_1.ValueFormatterService)\n    ], GroupCellRenderer.prototype, \"valueFormatterService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GroupCellRenderer.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('mouseEventService'),\n        __metadata(\"design:type\", mouseEventService_1.MouseEventService)\n    ], GroupCellRenderer.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], GroupCellRenderer.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eExpanded'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eExpanded\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eContracted'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eContracted\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCheckbox'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eCheckbox\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eValue'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eValue\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eChildCount'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eChildCount\", void 0);\n    return GroupCellRenderer;\n}(component_1.Component));\nexports.GroupCellRenderer = GroupCellRenderer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}}],"sources":{"node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar expressionService_1 = require(\"../../valueService/expressionService\");\nvar eventService_1 = require(\"../../eventService\");\nvar constants_1 = require(\"../../constants\");\nvar context_1 = require(\"../../context/context\");\nvar component_1 = require(\"../../widgets/component\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar valueFormatterService_1 = require(\"../valueFormatterService\");\nvar checkboxSelectionComponent_1 = require(\"../checkboxSelectionComponent\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar column_1 = require(\"../../entities/column\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar mouseEventService_1 = require(\"../../gridPanel/mouseEventService\");\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\nvar utils_1 = require(\"../../utils\");\nvar GroupCellRenderer = /** @class */ (function (_super) {\n    __extends(GroupCellRenderer, _super);\n    function GroupCellRenderer() {\n        return _super.call(this, GroupCellRenderer.TEMPLATE) || this;\n    }\n    GroupCellRenderer.prototype.init = function (params) {\n        this.params = params;\n        if (this.gridOptionsWrapper.isGroupIncludeTotalFooter()) {\n            this.assignBlankValueToGroupFooterCell(params);\n        }\n        var embeddedRowMismatch = this.isEmbeddedRowMismatch();\n        // This allows for empty strings to appear as groups since\n        // it will only return for null or undefined.\n        var cellIsEmpty = params.value == null;\n        this.cellIsBlank = embeddedRowMismatch || cellIsEmpty;\n        if (this.cellIsBlank) {\n            return;\n        }\n        this.setupDragOpenParents();\n        this.addExpandAndContract();\n        this.addCheckboxIfNeeded();\n        this.addValueElement();\n        this.setupIndent();\n    };\n    GroupCellRenderer.prototype.assignBlankValueToGroupFooterCell = function (params) {\n        // this is not ideal, but it was the only way we could get footer working for the root node\n        if (!params.value && params.node.level == -1) {\n            params.value = '';\n        }\n    };\n    // if we are doing embedded full width rows, we only show the renderer when\n    // in the body, or if pinning in the pinned section, or if pinning and RTL,\n    // in the right section. otherwise we would have the cell repeated in each section.\n    GroupCellRenderer.prototype.isEmbeddedRowMismatch = function () {\n        if (this.params.fullWidth && this.gridOptionsWrapper.isEmbedFullWidthRows()) {\n            var pinnedLeftCell = this.params.pinned === column_1.Column.PINNED_LEFT;\n            var pinnedRightCell = this.params.pinned === column_1.Column.PINNED_RIGHT;\n            var bodyCell = !pinnedLeftCell && !pinnedRightCell;\n            if (this.gridOptionsWrapper.isEnableRtl()) {\n                if (this.columnController.isPinningLeft()) {\n                    return !pinnedRightCell;\n                }\n                else {\n                    return !bodyCell;\n                }\n            }\n            else {\n                if (this.columnController.isPinningLeft()) {\n                    return !pinnedLeftCell;\n                }\n                else {\n                    return !bodyCell;\n                }\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    GroupCellRenderer.prototype.setIndent = function () {\n        if (this.gridOptionsWrapper.isGroupHideOpenParents()) {\n            return;\n        }\n        var params = this.params;\n        var rowNode = params.node;\n        var paddingCount = rowNode.uiLevel;\n        var userProvidedPaddingPixelsTheDeprecatedWay = params.padding >= 0;\n        if (userProvidedPaddingPixelsTheDeprecatedWay) {\n            this.setPaddingDeprecatedWay(paddingCount, params.padding);\n            return;\n        }\n        if (this.indentClass) {\n            this.removeCssClass(this.indentClass);\n        }\n        this.indentClass = 'ag-row-group-indent-' + paddingCount;\n        this.addCssClass(this.indentClass);\n    };\n    GroupCellRenderer.prototype.setPaddingDeprecatedWay = function (paddingCount, padding) {\n        utils_1._.doOnce(function () { return console.warn('ag-Grid: since v14.2, configuring padding for groupCellRenderer should be done with Sass variables and themes. Please see the ag-Grid documentation page for Themes, in particular the property $row-group-indent-size.'); }, 'groupCellRenderer->doDeprecatedWay');\n        var paddingPx = paddingCount * padding;\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // if doing rtl, padding is on the right\n            this.getGui().style.paddingRight = paddingPx + 'px';\n        }\n        else {\n            // otherwise it is on the left\n            this.getGui().style.paddingLeft = paddingPx + 'px';\n        }\n    };\n    GroupCellRenderer.prototype.setupIndent = function () {\n        // only do this if an indent - as this overwrites the padding that\n        // the theme set, which will make things look 'not aligned' for the\n        // first group level.\n        var node = this.params.node;\n        var suppressPadding = this.params.suppressPadding;\n        if (!suppressPadding) {\n            this.addDestroyableEventListener(node, rowNode_1.RowNode.EVENT_UI_LEVEL_CHANGED, this.setIndent.bind(this));\n            this.setIndent();\n        }\n    };\n    GroupCellRenderer.prototype.addValueElement = function () {\n        var params = this.params;\n        var rowNode = this.displayedGroup;\n        if (rowNode.footer) {\n            this.createFooterCell();\n        }\n        else if (rowNode.hasChildren() ||\n            utils_1._.get(params.colDef, 'cellRendererParams.innerRenderer', null) ||\n            utils_1._.get(params.colDef, 'cellRendererParams.innerRendererFramework', null)) {\n            this.createGroupCell();\n            if (rowNode.hasChildren()) {\n                this.addChildCount();\n            }\n        }\n        else {\n            this.createLeafCell();\n        }\n    };\n    GroupCellRenderer.prototype.createFooterCell = function () {\n        var footerValue;\n        var footerValueGetter = this.params.footerValueGetter;\n        if (footerValueGetter) {\n            // params is same as we were given, except we set the value as the item to display\n            var paramsClone = utils_1._.cloneObject(this.params);\n            paramsClone.value = this.params.value;\n            if (typeof footerValueGetter === 'function') {\n                footerValue = footerValueGetter(paramsClone);\n            }\n            else if (typeof footerValueGetter === 'string') {\n                footerValue = this.expressionService.evaluate(footerValueGetter, paramsClone);\n            }\n            else {\n                console.warn('ag-Grid: footerValueGetter should be either a function or a string (expression)');\n            }\n        }\n        else {\n            footerValue = 'Total ' + this.params.value;\n        }\n        this.eValue.innerHTML = footerValue;\n    };\n    GroupCellRenderer.prototype.createGroupCell = function () {\n        var _this = this;\n        var params = this.params;\n        var rowGroupColumn = this.displayedGroup.rowGroupColumn;\n        // we try and use the cellRenderer of the column used for the grouping if we can\n        var columnToUse = rowGroupColumn ? rowGroupColumn : params.column;\n        var groupName = this.params.value;\n        var valueFormatted = columnToUse ?\n            this.valueFormatterService.formatValue(columnToUse, params.node, params.scope, groupName) : null;\n        params.valueFormatted = valueFormatted;\n        var rendererPromise;\n        if (params.fullWidth == true) {\n            rendererPromise = this.useFullWidth(params);\n        }\n        else {\n            rendererPromise = this.useInnerRenderer(this.params.colDef.cellRendererParams, columnToUse.getColDef(), params);\n        }\n        // retain a reference to the created renderer - we'll use this later for cleanup (in destroy)\n        if (rendererPromise) {\n            rendererPromise.then(function (value) {\n                _this.innerCellRenderer = value;\n            });\n        }\n    };\n    GroupCellRenderer.prototype.useInnerRenderer = function (groupCellRendererParams, groupedColumnDef, // the column this group row is for, eg 'Country'\n    params) {\n        // when grouping, the normal case is we use the cell renderer of the grouped column. eg if grouping by country\n        // and then rating, we will use the country cell renderer for each country group row and likewise the rating\n        // cell renderer for each rating group row.\n        //\n        // however if the user has innerCellRenderer defined, this gets preference and we don't use cell renderers\n        // of the grouped columns.\n        //\n        // so we check and use in the following order:\n        //\n        // 1) thisColDef.cellRendererParams.innerRenderer of the column showing the groups (eg auto group column)\n        // 2) groupedColDef.cellRenderer of the grouped column\n        // 3) groupedColDef.cellRendererParams.innerRenderer\n        var _this = this;\n        var cellRendererPromise = null;\n        // we check if cell renderer provided for the group cell renderer, eg colDef.cellRendererParams.innerRenderer\n        var groupInnerRendererClass = this.userComponentFactory\n            .lookupComponentClassDef(groupCellRendererParams, \"innerRenderer\");\n        if (groupInnerRendererClass && groupInnerRendererClass.component != null\n            && groupInnerRendererClass.source != userComponentFactory_1.ComponentSource.DEFAULT) {\n            // use the renderer defined in cellRendererParams.innerRenderer\n            cellRendererPromise = this.userComponentFactory.newInnerCellRenderer(groupCellRendererParams, params);\n        }\n        else {\n            // otherwise see if we can use the cellRenderer of the column we are grouping by\n            var groupColumnRendererClass = this.userComponentFactory\n                .lookupComponentClassDef(groupedColumnDef, \"cellRenderer\");\n            if (groupColumnRendererClass && groupColumnRendererClass.source != userComponentFactory_1.ComponentSource.DEFAULT) {\n                // Only if the original column is using a specific renderer, it it is a using a DEFAULT one ignore it\n                cellRendererPromise = this.userComponentFactory.newCellRenderer(groupedColumnDef, params);\n            }\n            else if (groupColumnRendererClass && groupColumnRendererClass.source == userComponentFactory_1.ComponentSource.DEFAULT\n                && (utils_1._.get(groupedColumnDef, 'cellRendererParams.innerRenderer', null))) {\n                // EDGE CASE - THIS COMES FROM A COLUMN WHICH HAS BEEN GROUPED DYNAMICALLY, THAT HAS AS RENDERER 'group'\n                // AND HAS A INNER CELL RENDERER\n                cellRendererPromise = this.userComponentFactory.newInnerCellRenderer(groupedColumnDef.cellRendererParams, params);\n            }\n            else {\n                // This forces the retrieval of the default plain cellRenderer that just renders the values.\n                cellRendererPromise = this.userComponentFactory.newCellRenderer({}, params);\n            }\n        }\n        if (cellRendererPromise != null) {\n            cellRendererPromise.then(function (rendererToUse) {\n                if (rendererToUse == null) {\n                    _this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n                    return;\n                }\n                utils_1._.bindCellRendererToHtmlElement(cellRendererPromise, _this.eValue);\n            });\n        }\n        else {\n            this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n        }\n        return cellRendererPromise;\n    };\n    GroupCellRenderer.prototype.useFullWidth = function (params) {\n        var cellRendererPromise = this.userComponentFactory.newFullWidthGroupRowInnerCellRenderer(params);\n        if (cellRendererPromise != null) {\n            utils_1._.bindCellRendererToHtmlElement(cellRendererPromise, this.eValue);\n        }\n        else {\n            this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n        }\n        return cellRendererPromise;\n    };\n    GroupCellRenderer.prototype.addChildCount = function () {\n        // only include the child count if it's included, eg if user doing custom aggregation,\n        // then this could be left out, or set to -1, ie no child count\n        if (this.params.suppressCount) {\n            return;\n        }\n        this.addDestroyableEventListener(this.displayedGroup, rowNode_1.RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.updateChildCount.bind(this));\n        // filtering changes the child count, so need to cater for it\n        this.updateChildCount();\n    };\n    GroupCellRenderer.prototype.updateChildCount = function () {\n        var allChildrenCount = this.displayedGroup.allChildrenCount;\n        this.eChildCount.innerHTML = allChildrenCount >= 0 ? \"(\" + allChildrenCount + \")\" : \"\";\n    };\n    GroupCellRenderer.prototype.createLeafCell = function () {\n        if (utils_1._.exists(this.params.value)) {\n            this.eValue.innerText = this.params.valueFormatted ? this.params.valueFormatted : this.params.value;\n        }\n    };\n    GroupCellRenderer.prototype.isUserWantsSelected = function () {\n        var paramsCheckbox = this.params.checkbox;\n        if (typeof paramsCheckbox === 'function') {\n            return paramsCheckbox(this.params);\n        }\n        else {\n            return paramsCheckbox === true;\n        }\n    };\n    GroupCellRenderer.prototype.addCheckboxIfNeeded = function () {\n        var rowNode = this.displayedGroup;\n        var checkboxNeeded = this.isUserWantsSelected()\n            // footers cannot be selected\n            && !rowNode.footer\n            // pinned rows cannot be selected\n            && !rowNode.rowPinned\n            // details cannot be selected\n            && !rowNode.detail;\n        if (checkboxNeeded) {\n            var cbSelectionComponent_1 = new checkboxSelectionComponent_1.CheckboxSelectionComponent();\n            this.getContext().wireBean(cbSelectionComponent_1);\n            cbSelectionComponent_1.init({ rowNode: rowNode, column: this.params.column });\n            this.eCheckbox.appendChild(cbSelectionComponent_1.getGui());\n            this.addDestroyFunc(function () { return cbSelectionComponent_1.destroy(); });\n        }\n        utils_1._.addOrRemoveCssClass(this.eCheckbox, 'ag-invisible', !checkboxNeeded);\n    };\n    GroupCellRenderer.prototype.addExpandAndContract = function () {\n        var params = this.params;\n        var eGroupCell = params.eGridCell;\n        var eExpandedIcon = utils_1._.createIconNoSpan('groupExpanded', this.gridOptionsWrapper, null);\n        var eContractedIcon = utils_1._.createIconNoSpan('groupContracted', this.gridOptionsWrapper, null);\n        this.eExpanded.appendChild(eExpandedIcon);\n        this.eContracted.appendChild(eContractedIcon);\n        this.addDestroyableEventListener(this.eExpanded, 'click', this.onExpandClicked.bind(this));\n        this.addDestroyableEventListener(this.eContracted, 'click', this.onExpandClicked.bind(this));\n        // expand / contract as the user hits enter\n        this.addDestroyableEventListener(eGroupCell, 'keydown', this.onKeyDown.bind(this));\n        this.addDestroyableEventListener(params.node, rowNode_1.RowNode.EVENT_EXPANDED_CHANGED, this.showExpandAndContractIcons.bind(this));\n        this.showExpandAndContractIcons();\n        // because we don't show the expand / contract when there are no children, we need to check every time\n        // the number of children change.\n        this.addDestroyableEventListener(this.displayedGroup, rowNode_1.RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.onAllChildrenCountChanged.bind(this));\n        // if editing groups, then double click is to start editing\n        if (!this.gridOptionsWrapper.isEnableGroupEdit() && this.isExpandable() && !params.suppressDoubleClickExpand) {\n            this.addDestroyableEventListener(eGroupCell, 'dblclick', this.onCellDblClicked.bind(this));\n        }\n    };\n    GroupCellRenderer.prototype.onAllChildrenCountChanged = function () {\n        // maybe if no children now, we should hide the expand / contract icons\n        this.showExpandAndContractIcons();\n        // if we have no children, this impacts the indent\n        this.setIndent();\n    };\n    GroupCellRenderer.prototype.onKeyDown = function (event) {\n        var enterKeyPressed = utils_1._.isKeyPressed(event, constants_1.Constants.KEY_ENTER);\n        if (enterKeyPressed) {\n            if (this.params.suppressEnterExpand) {\n                return;\n            }\n            var cellEditable = this.params.column && this.params.column.isCellEditable(this.params.node);\n            if (cellEditable) {\n                return;\n            }\n            event.preventDefault();\n            this.onExpandOrContract();\n        }\n    };\n    GroupCellRenderer.prototype.setupDragOpenParents = function () {\n        var column = this.params.column;\n        var rowNode = this.params.node;\n        if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {\n            this.draggedFromHideOpenParents = false;\n        }\n        else if (!rowNode.hasChildren()) {\n            // if we are here, and we are not a group, then we must of been dragged down,\n            // as otherwise the cell would be blank, and if cell is blank, this method is never called.\n            this.draggedFromHideOpenParents = true;\n        }\n        else {\n            var rowGroupColumn = rowNode.rowGroupColumn;\n            if (rowGroupColumn) {\n                // if the displayGroup column for this col matches the rowGroupColumn we grouped by for this node,\n                // then nothing was dragged down\n                this.draggedFromHideOpenParents = !column.isRowGroupDisplayed(rowGroupColumn.getId());\n            }\n            else {\n                // the only way we can end up here (no column, but a group) is if we are at the root node,\n                // which only happens when 'groupIncludeTotalFooter' is true. here, we are never dragging\n                this.draggedFromHideOpenParents = false;\n            }\n        }\n        if (this.draggedFromHideOpenParents) {\n            var pointer = rowNode.parent;\n            while (true) {\n                if (utils_1._.missing(pointer)) {\n                    break;\n                }\n                if (pointer.rowGroupColumn && column.isRowGroupDisplayed(pointer.rowGroupColumn.getId())) {\n                    this.displayedGroup = pointer;\n                    break;\n                }\n                pointer = pointer.parent;\n            }\n        }\n        // if we didn't find a displayed group, set it to the row node\n        if (utils_1._.missing(this.displayedGroup)) {\n            this.displayedGroup = rowNode;\n        }\n    };\n    GroupCellRenderer.prototype.onExpandClicked = function (mouseEvent) {\n        if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        // so if we expand a node, it does not also get selected.\n        utils_1._.stopPropagationForAgGrid(mouseEvent);\n        this.onExpandOrContract();\n    };\n    GroupCellRenderer.prototype.onCellDblClicked = function (mouseEvent) {\n        if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        // we want to avoid acting on double click events on the expand / contract icon,\n        // as that icons already has expand / collapse functionality on it. otherwise if\n        // the icon was double clicked, we would get 'click', 'click', 'dblclick' which\n        // is open->close->open, however double click should be open->close only.\n        var targetIsExpandIcon = utils_1._.isElementInEventPath(this.eExpanded, mouseEvent)\n            || utils_1._.isElementInEventPath(this.eContracted, mouseEvent);\n        if (!targetIsExpandIcon) {\n            this.onExpandOrContract();\n        }\n    };\n    GroupCellRenderer.prototype.onExpandOrContract = function () {\n        // must use the displayedGroup, so if data was dragged down, we expand the parent, not this row\n        var rowNode = this.displayedGroup;\n        rowNode.setExpanded(!rowNode.expanded);\n    };\n    GroupCellRenderer.prototype.isExpandable = function () {\n        var rowNode = this.params.node;\n        var reducedLeafNode = this.columnController.isPivotMode() && rowNode.leafGroup;\n        return this.draggedFromHideOpenParents ||\n            (rowNode.isExpandable() && !rowNode.footer && !reducedLeafNode);\n    };\n    GroupCellRenderer.prototype.showExpandAndContractIcons = function () {\n        var rowNode = this.params.node;\n        if (this.isExpandable()) {\n            // if expandable, show one based on expand state.\n            // if we were dragged down, means our parent is always expanded\n            var expanded = this.draggedFromHideOpenParents ? true : rowNode.expanded;\n            utils_1._.setDisplayed(this.eContracted, !expanded);\n            utils_1._.setDisplayed(this.eExpanded, expanded);\n        }\n        else {\n            // it not expandable, show neither\n            utils_1._.setDisplayed(this.eExpanded, false);\n            utils_1._.setDisplayed(this.eContracted, false);\n        }\n        var displayedGroup = this.displayedGroup;\n        // compensation padding for leaf nodes, so there is blank space instead of the expand icon\n        var pivotModeAndLeafGroup = this.columnController.isPivotMode() && displayedGroup.leafGroup;\n        var notExpandable = !displayedGroup.isExpandable();\n        var addLeafIndentClass = displayedGroup.footer || notExpandable || pivotModeAndLeafGroup;\n        this.addOrRemoveCssClass('ag-row-group', !addLeafIndentClass);\n        this.addOrRemoveCssClass('ag-row-group-leaf-indent', addLeafIndentClass);\n    };\n    GroupCellRenderer.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.innerCellRenderer && this.innerCellRenderer.destroy) {\n            this.innerCellRenderer.destroy();\n        }\n    };\n    GroupCellRenderer.prototype.refresh = function () {\n        return false;\n    };\n    GroupCellRenderer.TEMPLATE = '<span class=\"ag-cell-wrapper\">' +\n        '<span class=\"ag-group-expanded\" ref=\"eExpanded\"></span>' +\n        '<span class=\"ag-group-contracted\" ref=\"eContracted\"></span>' +\n        '<span class=\"ag-group-checkbox ag-invisible\" ref=\"eCheckbox\"></span>' +\n        '<span class=\"ag-group-value\" ref=\"eValue\"></span>' +\n        '<span class=\"ag-group-child-count\" ref=\"eChildCount\"></span>' +\n        '</span>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GroupCellRenderer.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('expressionService'),\n        __metadata(\"design:type\", expressionService_1.ExpressionService)\n    ], GroupCellRenderer.prototype, \"expressionService\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], GroupCellRenderer.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('valueFormatterService'),\n        __metadata(\"design:type\", valueFormatterService_1.ValueFormatterService)\n    ], GroupCellRenderer.prototype, \"valueFormatterService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GroupCellRenderer.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('mouseEventService'),\n        __metadata(\"design:type\", mouseEventService_1.MouseEventService)\n    ], GroupCellRenderer.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], GroupCellRenderer.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eExpanded'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eExpanded\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eContracted'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eContracted\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCheckbox'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eCheckbox\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eValue'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eValue\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eChildCount'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eChildCount\", void 0);\n    return GroupCellRenderer;\n}(component_1.Component));\nexports.GroupCellRenderer = GroupCellRenderer;\n"},"lineCount":528}},"error":null,"hash":"ecc3977757d87f5d50a78e0f8be52a06","cacheData":{"env":{}}}