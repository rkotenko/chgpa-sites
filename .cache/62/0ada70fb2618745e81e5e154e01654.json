{"id":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","dependencies":[{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/package.json","includedInParent":true,"mtime":1567446810165},{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/package.json","includedInParent":true,"mtime":1567183294748},{"name":"../../constants","loc":{"line":18,"column":26},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/constants.js"},{"name":"../../gridOptionsWrapper","loc":{"line":19,"column":35},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridOptionsWrapper.js"},{"name":"../../columnController/columnApi","loc":{"line":20,"column":26},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/columnApi.js"},{"name":"../../columnController/columnController","loc":{"line":21,"column":33},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/columnController.js"},{"name":"../../filter/filterManager","loc":{"line":22,"column":30},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/filter/filterManager.js"},{"name":"../../entities/rowNode","loc":{"line":23,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/entities/rowNode.js"},{"name":"../../eventService","loc":{"line":24,"column":29},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/eventService.js"},{"name":"../../events","loc":{"line":25,"column":23},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/events.js"},{"name":"../../context/context","loc":{"line":26,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/context/context.js"},{"name":"../../selectionController","loc":{"line":27,"column":36},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js"},{"name":"./clientSideNodeManager","loc":{"line":28,"column":38},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideNodeManager.js"},{"name":"./changedPath","loc":{"line":29,"column":28},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/changedPath.js"},{"name":"../../valueService/valueService","loc":{"line":30,"column":29},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/valueService/valueService.js"},{"name":"../../valueService/valueCache","loc":{"line":31,"column":27},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/valueService/valueCache.js"},{"name":"../../gridApi","loc":{"line":32,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridApi.js"},{"name":"../../utils","loc":{"line":33,"column":22},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/utils/index.js"}],"generated":{"js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../../constants\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar filterManager_1 = require(\"../../filter/filterManager\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar eventService_1 = require(\"../../eventService\");\nvar events_1 = require(\"../../events\");\nvar context_1 = require(\"../../context/context\");\nvar selectionController_1 = require(\"../../selectionController\");\nvar clientSideNodeManager_1 = require(\"./clientSideNodeManager\");\nvar changedPath_1 = require(\"./changedPath\");\nvar valueService_1 = require(\"../../valueService/valueService\");\nvar valueCache_1 = require(\"../../valueService/valueCache\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar utils_1 = require(\"../../utils\");\nvar RecursionType;\n(function (RecursionType) {\n    RecursionType[RecursionType[\"Normal\"] = 0] = \"Normal\";\n    RecursionType[RecursionType[\"AfterFilter\"] = 1] = \"AfterFilter\";\n    RecursionType[RecursionType[\"AfterFilterAndSort\"] = 2] = \"AfterFilterAndSort\";\n    RecursionType[RecursionType[\"PivotNodes\"] = 3] = \"PivotNodes\";\n})(RecursionType || (RecursionType = {}));\nvar ClientSideRowModel = /** @class */ (function () {\n    function ClientSideRowModel() {\n    }\n    ClientSideRowModel.prototype.init = function () {\n        var refreshEverythingFunc = this.refreshModel.bind(this, { step: constants_1.Constants.STEP_EVERYTHING });\n        var refreshEverythingAfterColsChangedFunc = this.refreshModel.bind(this, { step: constants_1.Constants.STEP_EVERYTHING, afterColumnsChanged: true });\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, refreshEverythingAfterColsChangedFunc);\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, refreshEverythingFunc);\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.onValueChanged.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_PIVOT_CHANGED, this.refreshModel.bind(this, { step: constants_1.Constants.STEP_PIVOT }));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_ROW_GROUP_OPENED, this.onRowGroupOpened.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, refreshEverythingFunc);\n        var refreshMapFunc = this.refreshModel.bind(this, {\n            step: constants_1.Constants.STEP_MAP,\n            keepRenderedRows: true,\n            animate: true\n        });\n        this.gridOptionsWrapper.addEventListener(gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_REMOVE_SINGLE_CHILDREN, refreshMapFunc);\n        this.gridOptionsWrapper.addEventListener(gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN, refreshMapFunc);\n        this.rootNode = new rowNode_1.RowNode();\n        this.nodeManager = new clientSideNodeManager_1.ClientSideNodeManager(this.rootNode, this.gridOptionsWrapper, this.context, this.eventService, this.columnController, this.gridApi, this.columnApi, this.selectionController);\n        this.context.wireBean(this.rootNode);\n    };\n    ClientSideRowModel.prototype.ensureRowHeightsValid = function (startPixel, endPixel, startLimitIndex, endLimitIndex) {\n        var atLeastOneChange;\n        var res = false;\n        // we do this multiple times as changing the row heights can also change the first and last rows,\n        // so the first pass can make lots of rows smaller, which means the second pass we end up changing\n        // more rows.\n        do {\n            atLeastOneChange = false;\n            var rowAtStartPixel = this.getRowIndexAtPixel(startPixel);\n            var rowAtEndPixel = this.getRowIndexAtPixel(endPixel);\n            // keep check to current page if doing pagination\n            var firstRow = Math.max(rowAtStartPixel, startLimitIndex);\n            var lastRow = Math.min(rowAtEndPixel, endLimitIndex);\n            for (var rowIndex = firstRow; rowIndex <= lastRow; rowIndex++) {\n                var rowNode = this.getRow(rowIndex);\n                if (rowNode.rowHeightEstimated) {\n                    var rowHeight = this.gridOptionsWrapper.getRowHeightForNode(rowNode);\n                    rowNode.setRowHeight(rowHeight.height);\n                    atLeastOneChange = true;\n                    res = true;\n                }\n            }\n            if (atLeastOneChange) {\n                this.setRowTops();\n            }\n        } while (atLeastOneChange);\n        return res;\n    };\n    ClientSideRowModel.prototype.setRowTops = function () {\n        var nextRowTop = 0;\n        for (var i = 0; i < this.rowsToDisplay.length; i++) {\n            // we don't estimate if doing fullHeight or autoHeight, as all rows get rendered all the time\n            // with these two layouts.\n            var allowEstimate = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_NORMAL;\n            var rowNode = this.rowsToDisplay[i];\n            if (utils_1._.missing(rowNode.rowHeight)) {\n                var rowHeight = this.gridOptionsWrapper.getRowHeightForNode(rowNode, allowEstimate);\n                rowNode.setRowHeight(rowHeight.height, rowHeight.estimated);\n            }\n            rowNode.setRowTop(nextRowTop);\n            rowNode.setRowIndex(i);\n            nextRowTop += rowNode.rowHeight;\n        }\n    };\n    ClientSideRowModel.prototype.resetRowTops = function (rowNode, changedPath) {\n        rowNode.clearRowTop();\n        if (rowNode.hasChildren()) {\n            if (rowNode.childrenAfterGroup) {\n                // if a changedPath is active, it means we are here because of a transaction update or\n                // a change detection. neither of these impacts the open/closed state of groups. so if\n                // a group is not open this time, it was not open last time. so we know all closed groups\n                // already have their top positions cleared. so there is no need to traverse all the way\n                // when changedPath is active and the rowNode is not expanded.\n                var skipChildren = changedPath.isActive() && !rowNode.expanded;\n                if (!skipChildren) {\n                    for (var i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n                        this.resetRowTops(rowNode.childrenAfterGroup[i], changedPath);\n                    }\n                }\n            }\n            if (rowNode.sibling) {\n                rowNode.sibling.clearRowTop();\n            }\n        }\n        if (rowNode.detailNode) {\n            rowNode.detailNode.clearRowTop();\n        }\n    };\n    // returns false if row was moved, otherwise true\n    ClientSideRowModel.prototype.ensureRowAtPixel = function (rowNode, pixel) {\n        var indexAtPixelNow = this.getRowIndexAtPixel(pixel);\n        var rowNodeAtPixelNow = this.getRow(indexAtPixelNow);\n        if (rowNodeAtPixelNow === rowNode) {\n            return false;\n        }\n        utils_1._.removeFromArray(this.rootNode.allLeafChildren, rowNode);\n        utils_1._.insertIntoArray(this.rootNode.allLeafChildren, rowNode, indexAtPixelNow);\n        this.refreshModel({\n            step: constants_1.Constants.STEP_EVERYTHING,\n            keepRenderedRows: true,\n            animate: true,\n            keepEditingRows: true\n        });\n        return true;\n    };\n    ClientSideRowModel.prototype.isLastRowFound = function () {\n        return true;\n    };\n    ClientSideRowModel.prototype.getRowCount = function () {\n        if (this.rowsToDisplay) {\n            return this.rowsToDisplay.length;\n        }\n        else {\n            return 0;\n        }\n    };\n    ClientSideRowModel.prototype.getTopLevelRowCount = function () {\n        var showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;\n        if (showingRootNode) {\n            return 1;\n        }\n        else {\n            return this.rootNode.childrenAfterFilter ? this.rootNode.childrenAfterFilter.length : 0;\n        }\n    };\n    ClientSideRowModel.prototype.getTopLevelRowDisplayedIndex = function (topLevelIndex) {\n        var showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;\n        if (showingRootNode) {\n            return topLevelIndex;\n        }\n        else {\n            var rowNode = this.rootNode.childrenAfterSort[topLevelIndex];\n            if (this.gridOptionsWrapper.isGroupHideOpenParents()) {\n                // if hideOpenParents, and this row open, then this row is now displayed at this index, first child is\n                while (rowNode.expanded && rowNode.childrenAfterSort && rowNode.childrenAfterSort.length > 0) {\n                    rowNode = rowNode.childrenAfterSort[0];\n                }\n            }\n            return rowNode.rowIndex;\n        }\n    };\n    ClientSideRowModel.prototype.getRowBounds = function (index) {\n        if (utils_1._.missing(this.rowsToDisplay)) {\n            return null;\n        }\n        var rowNode = this.rowsToDisplay[index];\n        if (rowNode) {\n            return {\n                rowTop: rowNode.rowTop,\n                rowHeight: rowNode.rowHeight\n            };\n        }\n        else {\n            return null;\n        }\n    };\n    ClientSideRowModel.prototype.onRowGroupOpened = function () {\n        var animate = this.gridOptionsWrapper.isAnimateRows();\n        this.refreshModel({ step: constants_1.Constants.STEP_MAP, keepRenderedRows: true, animate: animate });\n    };\n    ClientSideRowModel.prototype.onFilterChanged = function () {\n        var animate = this.gridOptionsWrapper.isAnimateRows();\n        this.refreshModel({ step: constants_1.Constants.STEP_FILTER, keepRenderedRows: true, animate: animate });\n    };\n    ClientSideRowModel.prototype.onSortChanged = function () {\n        var animate = this.gridOptionsWrapper.isAnimateRows();\n        this.refreshModel({ step: constants_1.Constants.STEP_SORT, keepRenderedRows: true, animate: animate, keepEditingRows: true });\n    };\n    ClientSideRowModel.prototype.getType = function () {\n        return constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n    };\n    ClientSideRowModel.prototype.onValueChanged = function () {\n        if (this.columnController.isPivotActive()) {\n            this.refreshModel({ step: constants_1.Constants.STEP_PIVOT });\n        }\n        else {\n            this.refreshModel({ step: constants_1.Constants.STEP_AGGREGATE });\n        }\n    };\n    ClientSideRowModel.prototype.createChangePath = function (rowNodeTransactions) {\n        // for updates, if the row is updated at all, then we re-calc all the values\n        // in that row. we could compare each value to each old value, however if we\n        // did this, we would be calling the valueService twice, once on the old value\n        // and once on the new value. so it's less valueGetter calls if we just assume\n        // each column is different. that way the changedPath is used so that only\n        // the impacted parent rows are recalculated, parents who's children have\n        // not changed are not impacted.\n        var noTransactions = utils_1._.missingOrEmpty(rowNodeTransactions);\n        var changedPath = new changedPath_1.ChangedPath(false, this.rootNode);\n        if (noTransactions || this.gridOptionsWrapper.isTreeData()) {\n            changedPath.setInactive();\n        }\n        return changedPath;\n    };\n    ClientSideRowModel.prototype.refreshModel = function (params) {\n        // this goes through the pipeline of stages. what's in my head is similar\n        // to the diagram on this page:\n        // http://commons.apache.org/sandbox/commons-pipeline/pipeline_basics.html\n        // however we want to keep the results of each stage, hence we manually call\n        // each step rather than have them chain each other.\n        var _this = this;\n        // fallthrough in below switch is on purpose,\n        // eg if STEP_FILTER, then all steps below this\n        // step get done\n        // let start: number;\n        // console.log('======= start =======');\n        var changedPath = this.createChangePath(params.rowNodeTransactions);\n        switch (params.step) {\n            case constants_1.Constants.STEP_EVERYTHING:\n                // start = new Date().getTime();\n                this.doRowGrouping(params.groupState, params.rowNodeTransactions, params.rowNodeOrder, changedPath, params.afterColumnsChanged);\n            // console.log('rowGrouping = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_FILTER:\n                // start = new Date().getTime();\n                this.doFilter(changedPath);\n            // console.log('filter = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_PIVOT:\n                this.doPivot(changedPath);\n            case constants_1.Constants.STEP_AGGREGATE: // depends on agg fields\n                // start = new Date().getTime();\n                this.doAggregate(changedPath);\n            // console.log('aggregation = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_SORT:\n                // start = new Date().getTime();\n                this.doSort(params.rowNodeTransactions, changedPath);\n            // console.log('sort = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_MAP:\n                // start = new Date().getTime();\n                this.doRowsToDisplay();\n            // console.log('rowsToDisplay = ' + (new Date().getTime() - start));\n        }\n        // set all row tops to null, then set row tops on all visible rows. if we don't\n        // do this, then the algorithm below only sets row tops, old row tops from old rows\n        // will still lie around\n        this.resetRowTops(this.rootNode, changedPath);\n        this.setRowTops();\n        var event = {\n            type: events_1.Events.EVENT_MODEL_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            animate: params.animate,\n            keepRenderedRows: params.keepRenderedRows,\n            newData: params.newData,\n            newPage: false\n        };\n        this.eventService.dispatchEvent(event);\n        if (this.$scope) {\n            window.setTimeout(function () {\n                _this.$scope.$apply();\n            }, 0);\n        }\n    };\n    ClientSideRowModel.prototype.isEmpty = function () {\n        var rowsMissing;\n        var doingLegacyTreeData = utils_1._.exists(this.gridOptionsWrapper.getNodeChildDetailsFunc());\n        if (doingLegacyTreeData) {\n            rowsMissing = utils_1._.missing(this.rootNode.childrenAfterGroup) || this.rootNode.childrenAfterGroup.length === 0;\n        }\n        else {\n            rowsMissing = utils_1._.missing(this.rootNode.allLeafChildren) || this.rootNode.allLeafChildren.length === 0;\n        }\n        var empty = utils_1._.missing(this.rootNode) || rowsMissing || !this.columnController.isReady();\n        return empty;\n    };\n    ClientSideRowModel.prototype.isRowsToRender = function () {\n        return utils_1._.exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0;\n    };\n    ClientSideRowModel.prototype.getNodesInRangeForSelection = function (firstInRange, lastInRange) {\n        // if lastSelectedNode is missing, we start at the first row\n        var firstRowHit = !lastInRange;\n        var lastRowHit = false;\n        var lastRow;\n        var result = [];\n        var groupsSelectChildren = this.gridOptionsWrapper.isGroupSelectsChildren();\n        this.forEachNodeAfterFilterAndSort(function (rowNode) {\n            var lookingForLastRow = firstRowHit && !lastRowHit;\n            // check if we need to flip the select switch\n            if (!firstRowHit) {\n                if (rowNode === lastInRange || rowNode === firstInRange) {\n                    firstRowHit = true;\n                }\n            }\n            var skipThisGroupNode = rowNode.group && groupsSelectChildren;\n            if (!skipThisGroupNode) {\n                var inRange = firstRowHit && !lastRowHit;\n                var childOfLastRow = rowNode.isParentOfNode(lastRow);\n                if (inRange || childOfLastRow) {\n                    result.push(rowNode);\n                }\n            }\n            if (lookingForLastRow) {\n                if (rowNode === lastInRange || rowNode === firstInRange) {\n                    lastRowHit = true;\n                    if (rowNode === lastInRange) {\n                        lastRow = lastInRange;\n                    }\n                    else {\n                        lastRow = firstInRange;\n                    }\n                }\n            }\n        });\n        return result;\n    };\n    ClientSideRowModel.prototype.setDatasource = function (datasource) {\n        console.error('ag-Grid: should never call setDatasource on clientSideRowController');\n    };\n    ClientSideRowModel.prototype.getTopLevelNodes = function () {\n        return this.rootNode ? this.rootNode.childrenAfterGroup : null;\n    };\n    ClientSideRowModel.prototype.getRootNode = function () {\n        return this.rootNode;\n    };\n    ClientSideRowModel.prototype.getRow = function (index) {\n        return this.rowsToDisplay[index];\n    };\n    ClientSideRowModel.prototype.isRowPresent = function (rowNode) {\n        return this.rowsToDisplay.indexOf(rowNode) >= 0;\n    };\n    ClientSideRowModel.prototype.getRowIndexAtPixel = function (pixelToMatch) {\n        if (this.isEmpty()) {\n            return -1;\n        }\n        // do binary search of tree\n        // http://oli.me.uk/2013/06/08/searching-javascript-arrays-with-a-binary-search/\n        var bottomPointer = 0;\n        var topPointer = this.rowsToDisplay.length - 1;\n        // quick check, if the pixel is out of bounds, then return last row\n        if (pixelToMatch <= 0) {\n            // if pixel is less than or equal zero, it's always the first row\n            return 0;\n        }\n        var lastNode = utils_1._.last(this.rowsToDisplay);\n        if (lastNode.rowTop <= pixelToMatch) {\n            return this.rowsToDisplay.length - 1;\n        }\n        while (true) {\n            var midPointer = Math.floor((bottomPointer + topPointer) / 2);\n            var currentRowNode = this.rowsToDisplay[midPointer];\n            if (this.isRowInPixel(currentRowNode, pixelToMatch)) {\n                return midPointer;\n            }\n            else if (currentRowNode.rowTop < pixelToMatch) {\n                bottomPointer = midPointer + 1;\n            }\n            else if (currentRowNode.rowTop > pixelToMatch) {\n                topPointer = midPointer - 1;\n            }\n        }\n    };\n    ClientSideRowModel.prototype.isRowInPixel = function (rowNode, pixelToMatch) {\n        var topPixel = rowNode.rowTop;\n        var bottomPixel = rowNode.rowTop + rowNode.rowHeight;\n        var pixelInRow = topPixel <= pixelToMatch && bottomPixel > pixelToMatch;\n        return pixelInRow;\n    };\n    ClientSideRowModel.prototype.getCurrentPageHeight = function () {\n        if (this.rowsToDisplay && this.rowsToDisplay.length > 0) {\n            var lastRow = utils_1._.last(this.rowsToDisplay);\n            var lastPixel = lastRow.rowTop + lastRow.rowHeight;\n            return lastPixel;\n        }\n        else {\n            return 0;\n        }\n    };\n    ClientSideRowModel.prototype.forEachLeafNode = function (callback) {\n        if (this.rootNode.allLeafChildren) {\n            this.rootNode.allLeafChildren.forEach(function (rowNode, index) { return callback(rowNode, index); });\n        }\n    };\n    ClientSideRowModel.prototype.forEachNode = function (callback) {\n        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterGroup, callback, RecursionType.Normal, 0);\n    };\n    ClientSideRowModel.prototype.forEachNodeAfterFilter = function (callback) {\n        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterFilter, callback, RecursionType.AfterFilter, 0);\n    };\n    ClientSideRowModel.prototype.forEachNodeAfterFilterAndSort = function (callback) {\n        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterSort, callback, RecursionType.AfterFilterAndSort, 0);\n    };\n    ClientSideRowModel.prototype.forEachPivotNode = function (callback) {\n        this.recursivelyWalkNodesAndCallback([this.rootNode], callback, RecursionType.PivotNodes, 0);\n    };\n    // iterates through each item in memory, and calls the callback function\n    // nodes - the rowNodes to traverse\n    // callback - the user provided callback\n    // recursion type - need this to know what child nodes to recurse, eg if looking at all nodes, or filtered notes etc\n    // index - works similar to the index in forEach in javascript's array function\n    ClientSideRowModel.prototype.recursivelyWalkNodesAndCallback = function (nodes, callback, recursionType, index) {\n        if (nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                var node = nodes[i];\n                callback(node, index++);\n                // go to the next level if it is a group\n                if (node.hasChildren()) {\n                    // depending on the recursion type, we pick a difference set of children\n                    var nodeChildren = null;\n                    switch (recursionType) {\n                        case RecursionType.Normal:\n                            nodeChildren = node.childrenAfterGroup;\n                            break;\n                        case RecursionType.AfterFilter:\n                            nodeChildren = node.childrenAfterFilter;\n                            break;\n                        case RecursionType.AfterFilterAndSort:\n                            nodeChildren = node.childrenAfterSort;\n                            break;\n                        case RecursionType.PivotNodes:\n                            // for pivot, we don't go below leafGroup levels\n                            nodeChildren = !node.leafGroup ? node.childrenAfterSort : null;\n                            break;\n                    }\n                    if (nodeChildren) {\n                        index = this.recursivelyWalkNodesAndCallback(nodeChildren, callback, recursionType, index);\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    // it's possible to recompute the aggregate without doing the other parts\n    // + gridApi.recomputeAggregates()\n    ClientSideRowModel.prototype.doAggregate = function (changedPath) {\n        if (this.aggregationStage) {\n            this.aggregationStage.execute({ rowNode: this.rootNode, changedPath: changedPath });\n        }\n    };\n    // + gridApi.expandAll()\n    // + gridApi.collapseAll()\n    ClientSideRowModel.prototype.expandOrCollapseAll = function (expand) {\n        var usingTreeData = this.gridOptionsWrapper.isTreeData();\n        if (this.rootNode) {\n            recursiveExpandOrCollapse(this.rootNode.childrenAfterGroup);\n        }\n        function recursiveExpandOrCollapse(rowNodes) {\n            if (!rowNodes) {\n                return;\n            }\n            rowNodes.forEach(function (rowNode) {\n                var shouldExpandOrCollapse = usingTreeData ? utils_1._.exists(rowNode.childrenAfterGroup) : rowNode.group;\n                if (shouldExpandOrCollapse) {\n                    rowNode.expanded = expand;\n                    recursiveExpandOrCollapse(rowNode.childrenAfterGroup);\n                }\n            });\n        }\n        this.refreshModel({ step: constants_1.Constants.STEP_MAP });\n        var eventSource = expand ? 'expandAll' : 'collapseAll';\n        var event = {\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            type: events_1.Events.EVENT_EXPAND_COLLAPSE_ALL,\n            source: eventSource\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ClientSideRowModel.prototype.doSort = function (rowNodeTransactions, changedPath) {\n        this.sortStage.execute({\n            rowNode: this.rootNode,\n            rowNodeTransactions: rowNodeTransactions,\n            changedPath: changedPath\n        });\n    };\n    ClientSideRowModel.prototype.doRowGrouping = function (groupState, rowNodeTransactions, rowNodeOrder, changedPath, afterColumnsChanged) {\n        var _this = this;\n        // grouping is enterprise only, so if service missing, skip the step\n        var doingLegacyTreeData = utils_1._.exists(this.gridOptionsWrapper.getNodeChildDetailsFunc());\n        if (doingLegacyTreeData) {\n            return;\n        }\n        if (this.groupStage) {\n            if (rowNodeTransactions && utils_1._.exists(rowNodeTransactions)) {\n                rowNodeTransactions.forEach(function (tran) {\n                    _this.groupStage.execute({\n                        rowNode: _this.rootNode,\n                        rowNodeTransaction: tran,\n                        rowNodeOrder: rowNodeOrder,\n                        changedPath: changedPath\n                    });\n                });\n            }\n            else {\n                // groups are about to get disposed, so need to deselect any that are selected\n                this.selectionController.removeGroupsFromSelection();\n                this.groupStage.execute({\n                    rowNode: this.rootNode,\n                    changedPath: changedPath,\n                    afterColumnsChanged: afterColumnsChanged\n                });\n                // set open/closed state on groups\n                this.restoreGroupState(groupState);\n            }\n            if (this.gridOptionsWrapper.isGroupSelectsChildren()) {\n                this.selectionController.updateGroupsFromChildrenSelections(changedPath);\n            }\n        }\n        else {\n            this.rootNode.childrenAfterGroup = this.rootNode.allLeafChildren;\n        }\n    };\n    ClientSideRowModel.prototype.restoreGroupState = function (groupState) {\n        if (!groupState) {\n            return;\n        }\n        utils_1._.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function (node, key) {\n            // if the group was open last time, then open it this time. however\n            // if was not open last time, then don't touch the group, so the 'groupDefaultExpanded'\n            // setting will take effect.\n            if (typeof groupState[key] === 'boolean') {\n                node.expanded = groupState[key];\n            }\n        });\n    };\n    ClientSideRowModel.prototype.doFilter = function (changedPath) {\n        this.filterStage.execute({ rowNode: this.rootNode, changedPath: changedPath });\n    };\n    ClientSideRowModel.prototype.doPivot = function (changedPath) {\n        if (this.pivotStage) {\n            this.pivotStage.execute({ rowNode: this.rootNode, changedPath: changedPath });\n        }\n    };\n    ClientSideRowModel.prototype.getGroupState = function () {\n        if (!this.rootNode.childrenAfterGroup || !this.gridOptionsWrapper.isRememberGroupStateWhenNewData()) {\n            return null;\n        }\n        var result = {};\n        utils_1._.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function (node, key) { return result[key] = node.expanded; });\n        return result;\n    };\n    ClientSideRowModel.prototype.getCopyOfNodesMap = function () {\n        return this.nodeManager.getCopyOfNodesMap();\n    };\n    ClientSideRowModel.prototype.getRowNode = function (id) {\n        return this.nodeManager.getRowNode(id);\n    };\n    // rows: the rows to put into the model\n    ClientSideRowModel.prototype.setRowData = function (rowData) {\n        // no need to invalidate cache, as the cache is stored on the rowNode,\n        // so new rowNodes means the cache is wiped anyway.\n        // remember group state, so we can expand groups that should be expanded\n        var groupState = this.getGroupState();\n        this.nodeManager.setRowData(rowData);\n        // this event kicks off:\n        // - clears selection\n        // - updates filters\n        // - shows 'no rows' overlay if needed\n        var rowDataChangedEvent = {\n            type: events_1.Events.EVENT_ROW_DATA_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(rowDataChangedEvent);\n        this.refreshModel({\n            step: constants_1.Constants.STEP_EVERYTHING,\n            groupState: groupState,\n            newData: true\n        });\n    };\n    ClientSideRowModel.prototype.batchUpdateRowData = function (rowDataTransaction, callback) {\n        var _this = this;\n        if (!this.rowDataTransactionBatch) {\n            this.rowDataTransactionBatch = [];\n            var waitMillis = this.gridOptionsWrapper.getBatchUpdateWaitMillis();\n            window.setTimeout(function () {\n                _this.executeBatchUpdateRowData();\n                _this.rowDataTransactionBatch = null;\n            }, waitMillis);\n        }\n        this.rowDataTransactionBatch.push({ rowDataTransaction: rowDataTransaction, callback: callback });\n    };\n    ClientSideRowModel.prototype.executeBatchUpdateRowData = function () {\n        var _this = this;\n        this.valueCache.onDataChanged();\n        var callbackFuncsBound = [];\n        var rowNodeTrans = [];\n        if (this.rowDataTransactionBatch) {\n            this.rowDataTransactionBatch.forEach(function (tranItem) {\n                var rowNodeTran = _this.nodeManager.updateRowData(tranItem.rowDataTransaction, null);\n                rowNodeTrans.push(rowNodeTran);\n                if (tranItem.callback) {\n                    callbackFuncsBound.push(tranItem.callback.bind(null, rowNodeTran));\n                }\n            });\n        }\n        this.commonUpdateRowData(rowNodeTrans);\n        // do callbacks in next VM turn so it's async\n        if (callbackFuncsBound.length > 0) {\n            window.setTimeout(function () {\n                callbackFuncsBound.forEach(function (func) { return func(); });\n            }, 0);\n        }\n    };\n    ClientSideRowModel.prototype.updateRowData = function (rowDataTran, rowNodeOrder) {\n        this.valueCache.onDataChanged();\n        var rowNodeTran = this.nodeManager.updateRowData(rowDataTran, rowNodeOrder);\n        this.commonUpdateRowData([rowNodeTran], rowNodeOrder);\n        return rowNodeTran;\n    };\n    // common to updateRowData and batchUpdateRowData\n    ClientSideRowModel.prototype.commonUpdateRowData = function (rowNodeTrans, rowNodeOrder) {\n        this.refreshModel({\n            step: constants_1.Constants.STEP_EVERYTHING,\n            rowNodeTransactions: rowNodeTrans,\n            rowNodeOrder: rowNodeOrder,\n            keepRenderedRows: true,\n            animate: true,\n            keepEditingRows: true\n        });\n        var event = {\n            type: events_1.Events.EVENT_ROW_DATA_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ClientSideRowModel.prototype.doRowsToDisplay = function () {\n        this.rowsToDisplay = this.flattenStage.execute({ rowNode: this.rootNode });\n    };\n    ClientSideRowModel.prototype.onRowHeightChanged = function () {\n        this.refreshModel({ step: constants_1.Constants.STEP_MAP, keepRenderedRows: true, keepEditingRows: true });\n    };\n    ClientSideRowModel.prototype.resetRowHeights = function () {\n        this.forEachNode(function (rowNode) { return rowNode.setRowHeight(null); });\n        this.onRowHeightChanged();\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ClientSideRowModel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], ClientSideRowModel.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], ClientSideRowModel.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], ClientSideRowModel.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], ClientSideRowModel.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], ClientSideRowModel.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], ClientSideRowModel.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('valueCache'),\n        __metadata(\"design:type\", valueCache_1.ValueCache)\n    ], ClientSideRowModel.prototype, \"valueCache\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], ClientSideRowModel.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], ClientSideRowModel.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('filterStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"filterStage\", void 0);\n    __decorate([\n        context_1.Autowired('sortStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"sortStage\", void 0);\n    __decorate([\n        context_1.Autowired('flattenStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"flattenStage\", void 0);\n    __decorate([\n        context_1.Optional('groupStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"groupStage\", void 0);\n    __decorate([\n        context_1.Optional('aggregationStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"aggregationStage\", void 0);\n    __decorate([\n        context_1.Optional('pivotStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"pivotStage\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ClientSideRowModel.prototype, \"init\", null);\n    ClientSideRowModel = __decorate([\n        context_1.Bean('rowModel')\n    ], ClientSideRowModel);\n    return ClientSideRowModel;\n}());\nexports.ClientSideRowModel = ClientSideRowModel;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}}],"sources":{"node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../../constants\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar filterManager_1 = require(\"../../filter/filterManager\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar eventService_1 = require(\"../../eventService\");\nvar events_1 = require(\"../../events\");\nvar context_1 = require(\"../../context/context\");\nvar selectionController_1 = require(\"../../selectionController\");\nvar clientSideNodeManager_1 = require(\"./clientSideNodeManager\");\nvar changedPath_1 = require(\"./changedPath\");\nvar valueService_1 = require(\"../../valueService/valueService\");\nvar valueCache_1 = require(\"../../valueService/valueCache\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar utils_1 = require(\"../../utils\");\nvar RecursionType;\n(function (RecursionType) {\n    RecursionType[RecursionType[\"Normal\"] = 0] = \"Normal\";\n    RecursionType[RecursionType[\"AfterFilter\"] = 1] = \"AfterFilter\";\n    RecursionType[RecursionType[\"AfterFilterAndSort\"] = 2] = \"AfterFilterAndSort\";\n    RecursionType[RecursionType[\"PivotNodes\"] = 3] = \"PivotNodes\";\n})(RecursionType || (RecursionType = {}));\nvar ClientSideRowModel = /** @class */ (function () {\n    function ClientSideRowModel() {\n    }\n    ClientSideRowModel.prototype.init = function () {\n        var refreshEverythingFunc = this.refreshModel.bind(this, { step: constants_1.Constants.STEP_EVERYTHING });\n        var refreshEverythingAfterColsChangedFunc = this.refreshModel.bind(this, { step: constants_1.Constants.STEP_EVERYTHING, afterColumnsChanged: true });\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, refreshEverythingAfterColsChangedFunc);\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, refreshEverythingFunc);\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.onValueChanged.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_PIVOT_CHANGED, this.refreshModel.bind(this, { step: constants_1.Constants.STEP_PIVOT }));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_ROW_GROUP_OPENED, this.onRowGroupOpened.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, refreshEverythingFunc);\n        var refreshMapFunc = this.refreshModel.bind(this, {\n            step: constants_1.Constants.STEP_MAP,\n            keepRenderedRows: true,\n            animate: true\n        });\n        this.gridOptionsWrapper.addEventListener(gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_REMOVE_SINGLE_CHILDREN, refreshMapFunc);\n        this.gridOptionsWrapper.addEventListener(gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN, refreshMapFunc);\n        this.rootNode = new rowNode_1.RowNode();\n        this.nodeManager = new clientSideNodeManager_1.ClientSideNodeManager(this.rootNode, this.gridOptionsWrapper, this.context, this.eventService, this.columnController, this.gridApi, this.columnApi, this.selectionController);\n        this.context.wireBean(this.rootNode);\n    };\n    ClientSideRowModel.prototype.ensureRowHeightsValid = function (startPixel, endPixel, startLimitIndex, endLimitIndex) {\n        var atLeastOneChange;\n        var res = false;\n        // we do this multiple times as changing the row heights can also change the first and last rows,\n        // so the first pass can make lots of rows smaller, which means the second pass we end up changing\n        // more rows.\n        do {\n            atLeastOneChange = false;\n            var rowAtStartPixel = this.getRowIndexAtPixel(startPixel);\n            var rowAtEndPixel = this.getRowIndexAtPixel(endPixel);\n            // keep check to current page if doing pagination\n            var firstRow = Math.max(rowAtStartPixel, startLimitIndex);\n            var lastRow = Math.min(rowAtEndPixel, endLimitIndex);\n            for (var rowIndex = firstRow; rowIndex <= lastRow; rowIndex++) {\n                var rowNode = this.getRow(rowIndex);\n                if (rowNode.rowHeightEstimated) {\n                    var rowHeight = this.gridOptionsWrapper.getRowHeightForNode(rowNode);\n                    rowNode.setRowHeight(rowHeight.height);\n                    atLeastOneChange = true;\n                    res = true;\n                }\n            }\n            if (atLeastOneChange) {\n                this.setRowTops();\n            }\n        } while (atLeastOneChange);\n        return res;\n    };\n    ClientSideRowModel.prototype.setRowTops = function () {\n        var nextRowTop = 0;\n        for (var i = 0; i < this.rowsToDisplay.length; i++) {\n            // we don't estimate if doing fullHeight or autoHeight, as all rows get rendered all the time\n            // with these two layouts.\n            var allowEstimate = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_NORMAL;\n            var rowNode = this.rowsToDisplay[i];\n            if (utils_1._.missing(rowNode.rowHeight)) {\n                var rowHeight = this.gridOptionsWrapper.getRowHeightForNode(rowNode, allowEstimate);\n                rowNode.setRowHeight(rowHeight.height, rowHeight.estimated);\n            }\n            rowNode.setRowTop(nextRowTop);\n            rowNode.setRowIndex(i);\n            nextRowTop += rowNode.rowHeight;\n        }\n    };\n    ClientSideRowModel.prototype.resetRowTops = function (rowNode, changedPath) {\n        rowNode.clearRowTop();\n        if (rowNode.hasChildren()) {\n            if (rowNode.childrenAfterGroup) {\n                // if a changedPath is active, it means we are here because of a transaction update or\n                // a change detection. neither of these impacts the open/closed state of groups. so if\n                // a group is not open this time, it was not open last time. so we know all closed groups\n                // already have their top positions cleared. so there is no need to traverse all the way\n                // when changedPath is active and the rowNode is not expanded.\n                var skipChildren = changedPath.isActive() && !rowNode.expanded;\n                if (!skipChildren) {\n                    for (var i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n                        this.resetRowTops(rowNode.childrenAfterGroup[i], changedPath);\n                    }\n                }\n            }\n            if (rowNode.sibling) {\n                rowNode.sibling.clearRowTop();\n            }\n        }\n        if (rowNode.detailNode) {\n            rowNode.detailNode.clearRowTop();\n        }\n    };\n    // returns false if row was moved, otherwise true\n    ClientSideRowModel.prototype.ensureRowAtPixel = function (rowNode, pixel) {\n        var indexAtPixelNow = this.getRowIndexAtPixel(pixel);\n        var rowNodeAtPixelNow = this.getRow(indexAtPixelNow);\n        if (rowNodeAtPixelNow === rowNode) {\n            return false;\n        }\n        utils_1._.removeFromArray(this.rootNode.allLeafChildren, rowNode);\n        utils_1._.insertIntoArray(this.rootNode.allLeafChildren, rowNode, indexAtPixelNow);\n        this.refreshModel({\n            step: constants_1.Constants.STEP_EVERYTHING,\n            keepRenderedRows: true,\n            animate: true,\n            keepEditingRows: true\n        });\n        return true;\n    };\n    ClientSideRowModel.prototype.isLastRowFound = function () {\n        return true;\n    };\n    ClientSideRowModel.prototype.getRowCount = function () {\n        if (this.rowsToDisplay) {\n            return this.rowsToDisplay.length;\n        }\n        else {\n            return 0;\n        }\n    };\n    ClientSideRowModel.prototype.getTopLevelRowCount = function () {\n        var showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;\n        if (showingRootNode) {\n            return 1;\n        }\n        else {\n            return this.rootNode.childrenAfterFilter ? this.rootNode.childrenAfterFilter.length : 0;\n        }\n    };\n    ClientSideRowModel.prototype.getTopLevelRowDisplayedIndex = function (topLevelIndex) {\n        var showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;\n        if (showingRootNode) {\n            return topLevelIndex;\n        }\n        else {\n            var rowNode = this.rootNode.childrenAfterSort[topLevelIndex];\n            if (this.gridOptionsWrapper.isGroupHideOpenParents()) {\n                // if hideOpenParents, and this row open, then this row is now displayed at this index, first child is\n                while (rowNode.expanded && rowNode.childrenAfterSort && rowNode.childrenAfterSort.length > 0) {\n                    rowNode = rowNode.childrenAfterSort[0];\n                }\n            }\n            return rowNode.rowIndex;\n        }\n    };\n    ClientSideRowModel.prototype.getRowBounds = function (index) {\n        if (utils_1._.missing(this.rowsToDisplay)) {\n            return null;\n        }\n        var rowNode = this.rowsToDisplay[index];\n        if (rowNode) {\n            return {\n                rowTop: rowNode.rowTop,\n                rowHeight: rowNode.rowHeight\n            };\n        }\n        else {\n            return null;\n        }\n    };\n    ClientSideRowModel.prototype.onRowGroupOpened = function () {\n        var animate = this.gridOptionsWrapper.isAnimateRows();\n        this.refreshModel({ step: constants_1.Constants.STEP_MAP, keepRenderedRows: true, animate: animate });\n    };\n    ClientSideRowModel.prototype.onFilterChanged = function () {\n        var animate = this.gridOptionsWrapper.isAnimateRows();\n        this.refreshModel({ step: constants_1.Constants.STEP_FILTER, keepRenderedRows: true, animate: animate });\n    };\n    ClientSideRowModel.prototype.onSortChanged = function () {\n        var animate = this.gridOptionsWrapper.isAnimateRows();\n        this.refreshModel({ step: constants_1.Constants.STEP_SORT, keepRenderedRows: true, animate: animate, keepEditingRows: true });\n    };\n    ClientSideRowModel.prototype.getType = function () {\n        return constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n    };\n    ClientSideRowModel.prototype.onValueChanged = function () {\n        if (this.columnController.isPivotActive()) {\n            this.refreshModel({ step: constants_1.Constants.STEP_PIVOT });\n        }\n        else {\n            this.refreshModel({ step: constants_1.Constants.STEP_AGGREGATE });\n        }\n    };\n    ClientSideRowModel.prototype.createChangePath = function (rowNodeTransactions) {\n        // for updates, if the row is updated at all, then we re-calc all the values\n        // in that row. we could compare each value to each old value, however if we\n        // did this, we would be calling the valueService twice, once on the old value\n        // and once on the new value. so it's less valueGetter calls if we just assume\n        // each column is different. that way the changedPath is used so that only\n        // the impacted parent rows are recalculated, parents who's children have\n        // not changed are not impacted.\n        var noTransactions = utils_1._.missingOrEmpty(rowNodeTransactions);\n        var changedPath = new changedPath_1.ChangedPath(false, this.rootNode);\n        if (noTransactions || this.gridOptionsWrapper.isTreeData()) {\n            changedPath.setInactive();\n        }\n        return changedPath;\n    };\n    ClientSideRowModel.prototype.refreshModel = function (params) {\n        // this goes through the pipeline of stages. what's in my head is similar\n        // to the diagram on this page:\n        // http://commons.apache.org/sandbox/commons-pipeline/pipeline_basics.html\n        // however we want to keep the results of each stage, hence we manually call\n        // each step rather than have them chain each other.\n        var _this = this;\n        // fallthrough in below switch is on purpose,\n        // eg if STEP_FILTER, then all steps below this\n        // step get done\n        // let start: number;\n        // console.log('======= start =======');\n        var changedPath = this.createChangePath(params.rowNodeTransactions);\n        switch (params.step) {\n            case constants_1.Constants.STEP_EVERYTHING:\n                // start = new Date().getTime();\n                this.doRowGrouping(params.groupState, params.rowNodeTransactions, params.rowNodeOrder, changedPath, params.afterColumnsChanged);\n            // console.log('rowGrouping = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_FILTER:\n                // start = new Date().getTime();\n                this.doFilter(changedPath);\n            // console.log('filter = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_PIVOT:\n                this.doPivot(changedPath);\n            case constants_1.Constants.STEP_AGGREGATE: // depends on agg fields\n                // start = new Date().getTime();\n                this.doAggregate(changedPath);\n            // console.log('aggregation = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_SORT:\n                // start = new Date().getTime();\n                this.doSort(params.rowNodeTransactions, changedPath);\n            // console.log('sort = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_MAP:\n                // start = new Date().getTime();\n                this.doRowsToDisplay();\n            // console.log('rowsToDisplay = ' + (new Date().getTime() - start));\n        }\n        // set all row tops to null, then set row tops on all visible rows. if we don't\n        // do this, then the algorithm below only sets row tops, old row tops from old rows\n        // will still lie around\n        this.resetRowTops(this.rootNode, changedPath);\n        this.setRowTops();\n        var event = {\n            type: events_1.Events.EVENT_MODEL_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            animate: params.animate,\n            keepRenderedRows: params.keepRenderedRows,\n            newData: params.newData,\n            newPage: false\n        };\n        this.eventService.dispatchEvent(event);\n        if (this.$scope) {\n            window.setTimeout(function () {\n                _this.$scope.$apply();\n            }, 0);\n        }\n    };\n    ClientSideRowModel.prototype.isEmpty = function () {\n        var rowsMissing;\n        var doingLegacyTreeData = utils_1._.exists(this.gridOptionsWrapper.getNodeChildDetailsFunc());\n        if (doingLegacyTreeData) {\n            rowsMissing = utils_1._.missing(this.rootNode.childrenAfterGroup) || this.rootNode.childrenAfterGroup.length === 0;\n        }\n        else {\n            rowsMissing = utils_1._.missing(this.rootNode.allLeafChildren) || this.rootNode.allLeafChildren.length === 0;\n        }\n        var empty = utils_1._.missing(this.rootNode) || rowsMissing || !this.columnController.isReady();\n        return empty;\n    };\n    ClientSideRowModel.prototype.isRowsToRender = function () {\n        return utils_1._.exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0;\n    };\n    ClientSideRowModel.prototype.getNodesInRangeForSelection = function (firstInRange, lastInRange) {\n        // if lastSelectedNode is missing, we start at the first row\n        var firstRowHit = !lastInRange;\n        var lastRowHit = false;\n        var lastRow;\n        var result = [];\n        var groupsSelectChildren = this.gridOptionsWrapper.isGroupSelectsChildren();\n        this.forEachNodeAfterFilterAndSort(function (rowNode) {\n            var lookingForLastRow = firstRowHit && !lastRowHit;\n            // check if we need to flip the select switch\n            if (!firstRowHit) {\n                if (rowNode === lastInRange || rowNode === firstInRange) {\n                    firstRowHit = true;\n                }\n            }\n            var skipThisGroupNode = rowNode.group && groupsSelectChildren;\n            if (!skipThisGroupNode) {\n                var inRange = firstRowHit && !lastRowHit;\n                var childOfLastRow = rowNode.isParentOfNode(lastRow);\n                if (inRange || childOfLastRow) {\n                    result.push(rowNode);\n                }\n            }\n            if (lookingForLastRow) {\n                if (rowNode === lastInRange || rowNode === firstInRange) {\n                    lastRowHit = true;\n                    if (rowNode === lastInRange) {\n                        lastRow = lastInRange;\n                    }\n                    else {\n                        lastRow = firstInRange;\n                    }\n                }\n            }\n        });\n        return result;\n    };\n    ClientSideRowModel.prototype.setDatasource = function (datasource) {\n        console.error('ag-Grid: should never call setDatasource on clientSideRowController');\n    };\n    ClientSideRowModel.prototype.getTopLevelNodes = function () {\n        return this.rootNode ? this.rootNode.childrenAfterGroup : null;\n    };\n    ClientSideRowModel.prototype.getRootNode = function () {\n        return this.rootNode;\n    };\n    ClientSideRowModel.prototype.getRow = function (index) {\n        return this.rowsToDisplay[index];\n    };\n    ClientSideRowModel.prototype.isRowPresent = function (rowNode) {\n        return this.rowsToDisplay.indexOf(rowNode) >= 0;\n    };\n    ClientSideRowModel.prototype.getRowIndexAtPixel = function (pixelToMatch) {\n        if (this.isEmpty()) {\n            return -1;\n        }\n        // do binary search of tree\n        // http://oli.me.uk/2013/06/08/searching-javascript-arrays-with-a-binary-search/\n        var bottomPointer = 0;\n        var topPointer = this.rowsToDisplay.length - 1;\n        // quick check, if the pixel is out of bounds, then return last row\n        if (pixelToMatch <= 0) {\n            // if pixel is less than or equal zero, it's always the first row\n            return 0;\n        }\n        var lastNode = utils_1._.last(this.rowsToDisplay);\n        if (lastNode.rowTop <= pixelToMatch) {\n            return this.rowsToDisplay.length - 1;\n        }\n        while (true) {\n            var midPointer = Math.floor((bottomPointer + topPointer) / 2);\n            var currentRowNode = this.rowsToDisplay[midPointer];\n            if (this.isRowInPixel(currentRowNode, pixelToMatch)) {\n                return midPointer;\n            }\n            else if (currentRowNode.rowTop < pixelToMatch) {\n                bottomPointer = midPointer + 1;\n            }\n            else if (currentRowNode.rowTop > pixelToMatch) {\n                topPointer = midPointer - 1;\n            }\n        }\n    };\n    ClientSideRowModel.prototype.isRowInPixel = function (rowNode, pixelToMatch) {\n        var topPixel = rowNode.rowTop;\n        var bottomPixel = rowNode.rowTop + rowNode.rowHeight;\n        var pixelInRow = topPixel <= pixelToMatch && bottomPixel > pixelToMatch;\n        return pixelInRow;\n    };\n    ClientSideRowModel.prototype.getCurrentPageHeight = function () {\n        if (this.rowsToDisplay && this.rowsToDisplay.length > 0) {\n            var lastRow = utils_1._.last(this.rowsToDisplay);\n            var lastPixel = lastRow.rowTop + lastRow.rowHeight;\n            return lastPixel;\n        }\n        else {\n            return 0;\n        }\n    };\n    ClientSideRowModel.prototype.forEachLeafNode = function (callback) {\n        if (this.rootNode.allLeafChildren) {\n            this.rootNode.allLeafChildren.forEach(function (rowNode, index) { return callback(rowNode, index); });\n        }\n    };\n    ClientSideRowModel.prototype.forEachNode = function (callback) {\n        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterGroup, callback, RecursionType.Normal, 0);\n    };\n    ClientSideRowModel.prototype.forEachNodeAfterFilter = function (callback) {\n        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterFilter, callback, RecursionType.AfterFilter, 0);\n    };\n    ClientSideRowModel.prototype.forEachNodeAfterFilterAndSort = function (callback) {\n        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterSort, callback, RecursionType.AfterFilterAndSort, 0);\n    };\n    ClientSideRowModel.prototype.forEachPivotNode = function (callback) {\n        this.recursivelyWalkNodesAndCallback([this.rootNode], callback, RecursionType.PivotNodes, 0);\n    };\n    // iterates through each item in memory, and calls the callback function\n    // nodes - the rowNodes to traverse\n    // callback - the user provided callback\n    // recursion type - need this to know what child nodes to recurse, eg if looking at all nodes, or filtered notes etc\n    // index - works similar to the index in forEach in javascript's array function\n    ClientSideRowModel.prototype.recursivelyWalkNodesAndCallback = function (nodes, callback, recursionType, index) {\n        if (nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                var node = nodes[i];\n                callback(node, index++);\n                // go to the next level if it is a group\n                if (node.hasChildren()) {\n                    // depending on the recursion type, we pick a difference set of children\n                    var nodeChildren = null;\n                    switch (recursionType) {\n                        case RecursionType.Normal:\n                            nodeChildren = node.childrenAfterGroup;\n                            break;\n                        case RecursionType.AfterFilter:\n                            nodeChildren = node.childrenAfterFilter;\n                            break;\n                        case RecursionType.AfterFilterAndSort:\n                            nodeChildren = node.childrenAfterSort;\n                            break;\n                        case RecursionType.PivotNodes:\n                            // for pivot, we don't go below leafGroup levels\n                            nodeChildren = !node.leafGroup ? node.childrenAfterSort : null;\n                            break;\n                    }\n                    if (nodeChildren) {\n                        index = this.recursivelyWalkNodesAndCallback(nodeChildren, callback, recursionType, index);\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    // it's possible to recompute the aggregate without doing the other parts\n    // + gridApi.recomputeAggregates()\n    ClientSideRowModel.prototype.doAggregate = function (changedPath) {\n        if (this.aggregationStage) {\n            this.aggregationStage.execute({ rowNode: this.rootNode, changedPath: changedPath });\n        }\n    };\n    // + gridApi.expandAll()\n    // + gridApi.collapseAll()\n    ClientSideRowModel.prototype.expandOrCollapseAll = function (expand) {\n        var usingTreeData = this.gridOptionsWrapper.isTreeData();\n        if (this.rootNode) {\n            recursiveExpandOrCollapse(this.rootNode.childrenAfterGroup);\n        }\n        function recursiveExpandOrCollapse(rowNodes) {\n            if (!rowNodes) {\n                return;\n            }\n            rowNodes.forEach(function (rowNode) {\n                var shouldExpandOrCollapse = usingTreeData ? utils_1._.exists(rowNode.childrenAfterGroup) : rowNode.group;\n                if (shouldExpandOrCollapse) {\n                    rowNode.expanded = expand;\n                    recursiveExpandOrCollapse(rowNode.childrenAfterGroup);\n                }\n            });\n        }\n        this.refreshModel({ step: constants_1.Constants.STEP_MAP });\n        var eventSource = expand ? 'expandAll' : 'collapseAll';\n        var event = {\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            type: events_1.Events.EVENT_EXPAND_COLLAPSE_ALL,\n            source: eventSource\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ClientSideRowModel.prototype.doSort = function (rowNodeTransactions, changedPath) {\n        this.sortStage.execute({\n            rowNode: this.rootNode,\n            rowNodeTransactions: rowNodeTransactions,\n            changedPath: changedPath\n        });\n    };\n    ClientSideRowModel.prototype.doRowGrouping = function (groupState, rowNodeTransactions, rowNodeOrder, changedPath, afterColumnsChanged) {\n        var _this = this;\n        // grouping is enterprise only, so if service missing, skip the step\n        var doingLegacyTreeData = utils_1._.exists(this.gridOptionsWrapper.getNodeChildDetailsFunc());\n        if (doingLegacyTreeData) {\n            return;\n        }\n        if (this.groupStage) {\n            if (rowNodeTransactions && utils_1._.exists(rowNodeTransactions)) {\n                rowNodeTransactions.forEach(function (tran) {\n                    _this.groupStage.execute({\n                        rowNode: _this.rootNode,\n                        rowNodeTransaction: tran,\n                        rowNodeOrder: rowNodeOrder,\n                        changedPath: changedPath\n                    });\n                });\n            }\n            else {\n                // groups are about to get disposed, so need to deselect any that are selected\n                this.selectionController.removeGroupsFromSelection();\n                this.groupStage.execute({\n                    rowNode: this.rootNode,\n                    changedPath: changedPath,\n                    afterColumnsChanged: afterColumnsChanged\n                });\n                // set open/closed state on groups\n                this.restoreGroupState(groupState);\n            }\n            if (this.gridOptionsWrapper.isGroupSelectsChildren()) {\n                this.selectionController.updateGroupsFromChildrenSelections(changedPath);\n            }\n        }\n        else {\n            this.rootNode.childrenAfterGroup = this.rootNode.allLeafChildren;\n        }\n    };\n    ClientSideRowModel.prototype.restoreGroupState = function (groupState) {\n        if (!groupState) {\n            return;\n        }\n        utils_1._.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function (node, key) {\n            // if the group was open last time, then open it this time. however\n            // if was not open last time, then don't touch the group, so the 'groupDefaultExpanded'\n            // setting will take effect.\n            if (typeof groupState[key] === 'boolean') {\n                node.expanded = groupState[key];\n            }\n        });\n    };\n    ClientSideRowModel.prototype.doFilter = function (changedPath) {\n        this.filterStage.execute({ rowNode: this.rootNode, changedPath: changedPath });\n    };\n    ClientSideRowModel.prototype.doPivot = function (changedPath) {\n        if (this.pivotStage) {\n            this.pivotStage.execute({ rowNode: this.rootNode, changedPath: changedPath });\n        }\n    };\n    ClientSideRowModel.prototype.getGroupState = function () {\n        if (!this.rootNode.childrenAfterGroup || !this.gridOptionsWrapper.isRememberGroupStateWhenNewData()) {\n            return null;\n        }\n        var result = {};\n        utils_1._.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function (node, key) { return result[key] = node.expanded; });\n        return result;\n    };\n    ClientSideRowModel.prototype.getCopyOfNodesMap = function () {\n        return this.nodeManager.getCopyOfNodesMap();\n    };\n    ClientSideRowModel.prototype.getRowNode = function (id) {\n        return this.nodeManager.getRowNode(id);\n    };\n    // rows: the rows to put into the model\n    ClientSideRowModel.prototype.setRowData = function (rowData) {\n        // no need to invalidate cache, as the cache is stored on the rowNode,\n        // so new rowNodes means the cache is wiped anyway.\n        // remember group state, so we can expand groups that should be expanded\n        var groupState = this.getGroupState();\n        this.nodeManager.setRowData(rowData);\n        // this event kicks off:\n        // - clears selection\n        // - updates filters\n        // - shows 'no rows' overlay if needed\n        var rowDataChangedEvent = {\n            type: events_1.Events.EVENT_ROW_DATA_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(rowDataChangedEvent);\n        this.refreshModel({\n            step: constants_1.Constants.STEP_EVERYTHING,\n            groupState: groupState,\n            newData: true\n        });\n    };\n    ClientSideRowModel.prototype.batchUpdateRowData = function (rowDataTransaction, callback) {\n        var _this = this;\n        if (!this.rowDataTransactionBatch) {\n            this.rowDataTransactionBatch = [];\n            var waitMillis = this.gridOptionsWrapper.getBatchUpdateWaitMillis();\n            window.setTimeout(function () {\n                _this.executeBatchUpdateRowData();\n                _this.rowDataTransactionBatch = null;\n            }, waitMillis);\n        }\n        this.rowDataTransactionBatch.push({ rowDataTransaction: rowDataTransaction, callback: callback });\n    };\n    ClientSideRowModel.prototype.executeBatchUpdateRowData = function () {\n        var _this = this;\n        this.valueCache.onDataChanged();\n        var callbackFuncsBound = [];\n        var rowNodeTrans = [];\n        if (this.rowDataTransactionBatch) {\n            this.rowDataTransactionBatch.forEach(function (tranItem) {\n                var rowNodeTran = _this.nodeManager.updateRowData(tranItem.rowDataTransaction, null);\n                rowNodeTrans.push(rowNodeTran);\n                if (tranItem.callback) {\n                    callbackFuncsBound.push(tranItem.callback.bind(null, rowNodeTran));\n                }\n            });\n        }\n        this.commonUpdateRowData(rowNodeTrans);\n        // do callbacks in next VM turn so it's async\n        if (callbackFuncsBound.length > 0) {\n            window.setTimeout(function () {\n                callbackFuncsBound.forEach(function (func) { return func(); });\n            }, 0);\n        }\n    };\n    ClientSideRowModel.prototype.updateRowData = function (rowDataTran, rowNodeOrder) {\n        this.valueCache.onDataChanged();\n        var rowNodeTran = this.nodeManager.updateRowData(rowDataTran, rowNodeOrder);\n        this.commonUpdateRowData([rowNodeTran], rowNodeOrder);\n        return rowNodeTran;\n    };\n    // common to updateRowData and batchUpdateRowData\n    ClientSideRowModel.prototype.commonUpdateRowData = function (rowNodeTrans, rowNodeOrder) {\n        this.refreshModel({\n            step: constants_1.Constants.STEP_EVERYTHING,\n            rowNodeTransactions: rowNodeTrans,\n            rowNodeOrder: rowNodeOrder,\n            keepRenderedRows: true,\n            animate: true,\n            keepEditingRows: true\n        });\n        var event = {\n            type: events_1.Events.EVENT_ROW_DATA_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ClientSideRowModel.prototype.doRowsToDisplay = function () {\n        this.rowsToDisplay = this.flattenStage.execute({ rowNode: this.rootNode });\n    };\n    ClientSideRowModel.prototype.onRowHeightChanged = function () {\n        this.refreshModel({ step: constants_1.Constants.STEP_MAP, keepRenderedRows: true, keepEditingRows: true });\n    };\n    ClientSideRowModel.prototype.resetRowHeights = function () {\n        this.forEachNode(function (rowNode) { return rowNode.setRowHeight(null); });\n        this.onRowHeightChanged();\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ClientSideRowModel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], ClientSideRowModel.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], ClientSideRowModel.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], ClientSideRowModel.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], ClientSideRowModel.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], ClientSideRowModel.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], ClientSideRowModel.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('valueCache'),\n        __metadata(\"design:type\", valueCache_1.ValueCache)\n    ], ClientSideRowModel.prototype, \"valueCache\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], ClientSideRowModel.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], ClientSideRowModel.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('filterStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"filterStage\", void 0);\n    __decorate([\n        context_1.Autowired('sortStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"sortStage\", void 0);\n    __decorate([\n        context_1.Autowired('flattenStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"flattenStage\", void 0);\n    __decorate([\n        context_1.Optional('groupStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"groupStage\", void 0);\n    __decorate([\n        context_1.Optional('aggregationStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"aggregationStage\", void 0);\n    __decorate([\n        context_1.Optional('pivotStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"pivotStage\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ClientSideRowModel.prototype, \"init\", null);\n    ClientSideRowModel = __decorate([\n        context_1.Bean('rowModel')\n    ], ClientSideRowModel);\n    return ClientSideRowModel;\n}());\nexports.ClientSideRowModel = ClientSideRowModel;\n"},"lineCount":751}},"error":null,"hash":"2142d47fcd2ce261e4d79446f9ed6009","cacheData":{"env":{}}}