{"id":"node_modules/ag-grid-community/dist/lib/selectionController.js","dependencies":[{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/package.json","includedInParent":true,"mtime":1567280299315},{"name":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/package.json","includedInParent":true,"mtime":1567183294748},{"name":"./context/context","loc":{"line":28,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/context/context.js"},{"name":"./logger","loc":{"line":23,"column":23},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/logger.js"},{"name":"./eventService","loc":{"line":24,"column":29},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/eventService.js"},{"name":"./events","loc":{"line":25,"column":23},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/events.js"},{"name":"./gridOptionsWrapper","loc":{"line":27,"column":35},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridOptionsWrapper.js"},{"name":"./constants","loc":{"line":29,"column":26},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/constants.js"},{"name":"./columnController/columnApi","loc":{"line":30,"column":26},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/columnController/columnApi.js"},{"name":"./gridApi","loc":{"line":31,"column":24},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/gridApi.js"},{"name":"./utils","loc":{"line":32,"column":22},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/utils/index.js"},{"name":"./rowModels/clientSide/changedPath","loc":{"line":33,"column":28},"parent":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/selectionController.js","resolved":"/Users/robkotenko/Documents/docs/chgpa-sites/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/changedPath.js"}],"generated":{"js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"./context/context\");\nvar context_2 = require(\"./context/context\");\nvar logger_1 = require(\"./logger\");\nvar eventService_1 = require(\"./eventService\");\nvar events_1 = require(\"./events\");\nvar context_3 = require(\"./context/context\");\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar context_4 = require(\"./context/context\");\nvar constants_1 = require(\"./constants\");\nvar columnApi_1 = require(\"./columnController/columnApi\");\nvar gridApi_1 = require(\"./gridApi\");\nvar utils_1 = require(\"./utils\");\nvar changedPath_1 = require(\"./rowModels/clientSide/changedPath\");\nvar SelectionController = /** @class */ (function () {\n    function SelectionController() {\n    }\n    SelectionController.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('SelectionController');\n        this.reset();\n        if (this.gridOptionsWrapper.isRowModelDefault()) {\n            this.eventService.addEventListener(events_1.Events.EVENT_ROW_DATA_CHANGED, this.reset.bind(this));\n        }\n        else {\n            this.logger.log('dont know what to do here');\n        }\n    };\n    SelectionController.prototype.init = function () {\n        this.groupSelectsChildren = this.gridOptionsWrapper.isGroupSelectsChildren();\n        this.eventService.addEventListener(events_1.Events.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n    };\n    SelectionController.prototype.setLastSelectedNode = function (rowNode) {\n        this.lastSelectedNode = rowNode;\n    };\n    SelectionController.prototype.getLastSelectedNode = function () {\n        return this.lastSelectedNode;\n    };\n    SelectionController.prototype.getSelectedNodes = function () {\n        var selectedNodes = [];\n        utils_1._.iterateObject(this.selectedNodes, function (key, rowNode) {\n            if (rowNode) {\n                selectedNodes.push(rowNode);\n            }\n        });\n        return selectedNodes;\n    };\n    SelectionController.prototype.getSelectedRows = function () {\n        var selectedRows = [];\n        utils_1._.iterateObject(this.selectedNodes, function (key, rowNode) {\n            if (rowNode && rowNode.data) {\n                selectedRows.push(rowNode.data);\n            }\n        });\n        return selectedRows;\n    };\n    SelectionController.prototype.removeGroupsFromSelection = function () {\n        var _this = this;\n        utils_1._.iterateObject(this.selectedNodes, function (key, rowNode) {\n            if (rowNode && rowNode.group) {\n                _this.selectedNodes[rowNode.id] = undefined;\n            }\n        });\n    };\n    // should only be called if groupSelectsChildren=true\n    SelectionController.prototype.updateGroupsFromChildrenSelections = function (changedPath) {\n        // we only do this when group selection state depends on selected children\n        if (!this.gridOptionsWrapper.isGroupSelectsChildren()) {\n            return;\n        }\n        // also only do it if CSRM (code should never allow this anyway)\n        if (this.rowModel.getType() !== constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            return;\n        }\n        var clientSideRowModel = this.rowModel;\n        var rootNode = clientSideRowModel.getRootNode();\n        if (!changedPath) {\n            changedPath = new changedPath_1.ChangedPath(true, rootNode);\n            changedPath.setInactive();\n        }\n        changedPath.forEachChangedNodeDepthFirst(function (rowNode) {\n            if (rowNode !== rootNode) {\n                rowNode.calculateSelectedFromChildren();\n            }\n        });\n        // clientSideRowModel.getTopLevelNodes()!.forEach((rowNode: RowNode) => {\n        //     rowNode.depthFirstSearch((node) => {\n        //         if (node.group) {\n        //         }\n        //     });\n        // });\n    };\n    SelectionController.prototype.getNodeForIdIfSelected = function (id) {\n        return this.selectedNodes[id];\n    };\n    SelectionController.prototype.clearOtherNodes = function (rowNodeToKeepSelected) {\n        var _this = this;\n        var groupsToRefresh = {};\n        var updatedCount = 0;\n        utils_1._.iterateObject(this.selectedNodes, function (key, otherRowNode) {\n            if (otherRowNode && otherRowNode.id !== rowNodeToKeepSelected.id) {\n                var rowNode = _this.selectedNodes[otherRowNode.id];\n                updatedCount += rowNode.setSelectedParams({\n                    newValue: false,\n                    clearSelection: false,\n                    suppressFinishActions: true\n                });\n                if (_this.groupSelectsChildren && otherRowNode.parent) {\n                    groupsToRefresh[otherRowNode.parent.id] = otherRowNode.parent;\n                }\n            }\n        });\n        utils_1._.iterateObject(groupsToRefresh, function (key, group) {\n            group.calculateSelectedFromChildren();\n        });\n        return updatedCount;\n    };\n    SelectionController.prototype.onRowSelected = function (event) {\n        var rowNode = event.node;\n        // we do not store the group rows when the groups select children\n        if (this.groupSelectsChildren && rowNode.group) {\n            return;\n        }\n        if (rowNode.isSelected()) {\n            this.selectedNodes[rowNode.id] = rowNode;\n        }\n        else {\n            this.selectedNodes[rowNode.id] = undefined;\n        }\n    };\n    SelectionController.prototype.syncInRowNode = function (rowNode, oldNode) {\n        this.syncInOldRowNode(rowNode, oldNode);\n        this.syncInNewRowNode(rowNode);\n    };\n    // if the id has changed for the node, then this means the rowNode\n    // is getting used for a different data item, which breaks\n    // our selectedNodes, as the node now is mapped by the old id\n    // which is inconsistent. so to keep the old node as selected,\n    // we swap in the clone (with the old id and old data). this means\n    // the oldNode is effectively a daemon we keep a reference to,\n    // so if client calls api.getSelectedNodes(), it gets the daemon\n    // in the result. when the client un-selects, the reference to the\n    // daemon is removed. the daemon, because it's an oldNode, is not\n    // used by the grid for rendering, it's a copy of what the node used\n    // to be like before the id was changed.\n    SelectionController.prototype.syncInOldRowNode = function (rowNode, oldNode) {\n        var oldNodeHasDifferentId = utils_1._.exists(oldNode) && (rowNode.id !== oldNode.id);\n        if (oldNodeHasDifferentId) {\n            var oldNodeSelected = utils_1._.exists(this.selectedNodes[oldNode.id]);\n            if (oldNodeSelected) {\n                this.selectedNodes[oldNode.id] = oldNode;\n            }\n        }\n    };\n    SelectionController.prototype.syncInNewRowNode = function (rowNode) {\n        if (utils_1._.exists(this.selectedNodes[rowNode.id])) {\n            rowNode.setSelectedInitialValue(true);\n            this.selectedNodes[rowNode.id] = rowNode;\n        }\n        else {\n            rowNode.setSelectedInitialValue(false);\n        }\n    };\n    SelectionController.prototype.reset = function () {\n        this.logger.log('reset');\n        this.selectedNodes = {};\n        this.lastSelectedNode = null;\n    };\n    // returns a list of all nodes at 'best cost' - a feature to be used\n    // with groups / trees. if a group has all it's children selected,\n    // then the group appears in the result, but not the children.\n    // Designed for use with 'children' as the group selection type,\n    // where groups don't actually appear in the selection normally.\n    SelectionController.prototype.getBestCostNodeSelection = function () {\n        if (this.rowModel.getType() !== constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            console.warn('getBestCostNodeSelection is only available when using normal row model');\n        }\n        var clientSideRowModel = this.rowModel;\n        var topLevelNodes = clientSideRowModel.getTopLevelNodes();\n        if (topLevelNodes === null) {\n            console.warn('selectAll not available doing rowModel=virtual');\n            return;\n        }\n        var result = [];\n        // recursive function, to find the selected nodes\n        function traverse(nodes) {\n            for (var i = 0, l = nodes.length; i < l; i++) {\n                var node = nodes[i];\n                if (node.isSelected()) {\n                    result.push(node);\n                }\n                else {\n                    // if not selected, then if it's a group, and the group\n                    // has children, continue to search for selections\n                    if (node.group && node.children) {\n                        traverse(node.children);\n                    }\n                }\n            }\n        }\n        traverse(topLevelNodes);\n        return result;\n    };\n    SelectionController.prototype.setRowModel = function (rowModel) {\n        this.rowModel = rowModel;\n    };\n    SelectionController.prototype.isEmpty = function () {\n        var count = 0;\n        utils_1._.iterateObject(this.selectedNodes, function (nodeId, rowNode) {\n            if (rowNode) {\n                count++;\n            }\n        });\n        return count === 0;\n    };\n    SelectionController.prototype.deselectAllRowNodes = function (justFiltered) {\n        if (justFiltered === void 0) { justFiltered = false; }\n        var callback = function (rowNode) { return rowNode.selectThisNode(false); };\n        var rowModelClientSide = this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        if (justFiltered) {\n            if (!rowModelClientSide) {\n                console.error('ag-Grid: selecting just filtered only works with In Memory Row Model');\n                return;\n            }\n            var clientSideRowModel = this.rowModel;\n            clientSideRowModel.forEachNodeAfterFilter(callback);\n        }\n        else {\n            utils_1._.iterateObject(this.selectedNodes, function (id, rowNode) {\n                // remember the reference can be to null, as we never 'delete' from the map\n                if (rowNode) {\n                    callback(rowNode);\n                }\n            });\n            // this clears down the map (whereas above only sets the items in map to 'undefined')\n            this.reset();\n        }\n        // the above does not clean up the parent rows if they are selected\n        if (rowModelClientSide && this.groupSelectsChildren) {\n            this.updateGroupsFromChildrenSelections();\n        }\n        var event = {\n            type: events_1.Events.EVENT_SELECTION_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    SelectionController.prototype.selectAllRowNodes = function (justFiltered) {\n        if (justFiltered === void 0) { justFiltered = false; }\n        if (this.rowModel.getType() !== constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            throw new Error(\"selectAll only available with normal row model, ie not \" + this.rowModel.getType());\n        }\n        var clientSideRowModel = this.rowModel;\n        var callback = function (rowNode) { return rowNode.selectThisNode(true); };\n        if (justFiltered) {\n            clientSideRowModel.forEachNodeAfterFilter(callback);\n        }\n        else {\n            clientSideRowModel.forEachNode(callback);\n        }\n        // the above does not clean up the parent rows if they are selected\n        if (this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE && this.groupSelectsChildren) {\n            this.updateGroupsFromChildrenSelections();\n        }\n        var event = {\n            type: events_1.Events.EVENT_SELECTION_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.selectNode = function (rowNode, tryMulti) {\n        if (rowNode) {\n            rowNode.setSelectedParams({ newValue: true, clearSelection: !tryMulti });\n        }\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.deselectIndex = function (rowIndex) {\n        var node = this.rowModel.getRow(rowIndex);\n        this.deselectNode(node);\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.deselectNode = function (rowNode) {\n        if (rowNode) {\n            rowNode.setSelectedParams({ newValue: false, clearSelection: false });\n        }\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.selectIndex = function (index, tryMulti) {\n        var node = this.rowModel.getRow(index);\n        this.selectNode(node, tryMulti);\n    };\n    __decorate([\n        context_3.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], SelectionController.prototype, \"eventService\", void 0);\n    __decorate([\n        context_3.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], SelectionController.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_3.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SelectionController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_3.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], SelectionController.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_3.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], SelectionController.prototype, \"gridApi\", void 0);\n    __decorate([\n        __param(0, context_2.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectionController.prototype, \"setBeans\", null);\n    __decorate([\n        context_4.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectionController.prototype, \"init\", null);\n    SelectionController = __decorate([\n        context_1.Bean('selectionController')\n    ], SelectionController);\n    return SelectionController;\n}());\nexports.SelectionController = SelectionController;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/ag-grid-community/dist/lib/selectionController.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}}],"sources":{"node_modules/ag-grid-community/dist/lib/selectionController.js":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"./context/context\");\nvar context_2 = require(\"./context/context\");\nvar logger_1 = require(\"./logger\");\nvar eventService_1 = require(\"./eventService\");\nvar events_1 = require(\"./events\");\nvar context_3 = require(\"./context/context\");\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar context_4 = require(\"./context/context\");\nvar constants_1 = require(\"./constants\");\nvar columnApi_1 = require(\"./columnController/columnApi\");\nvar gridApi_1 = require(\"./gridApi\");\nvar utils_1 = require(\"./utils\");\nvar changedPath_1 = require(\"./rowModels/clientSide/changedPath\");\nvar SelectionController = /** @class */ (function () {\n    function SelectionController() {\n    }\n    SelectionController.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('SelectionController');\n        this.reset();\n        if (this.gridOptionsWrapper.isRowModelDefault()) {\n            this.eventService.addEventListener(events_1.Events.EVENT_ROW_DATA_CHANGED, this.reset.bind(this));\n        }\n        else {\n            this.logger.log('dont know what to do here');\n        }\n    };\n    SelectionController.prototype.init = function () {\n        this.groupSelectsChildren = this.gridOptionsWrapper.isGroupSelectsChildren();\n        this.eventService.addEventListener(events_1.Events.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n    };\n    SelectionController.prototype.setLastSelectedNode = function (rowNode) {\n        this.lastSelectedNode = rowNode;\n    };\n    SelectionController.prototype.getLastSelectedNode = function () {\n        return this.lastSelectedNode;\n    };\n    SelectionController.prototype.getSelectedNodes = function () {\n        var selectedNodes = [];\n        utils_1._.iterateObject(this.selectedNodes, function (key, rowNode) {\n            if (rowNode) {\n                selectedNodes.push(rowNode);\n            }\n        });\n        return selectedNodes;\n    };\n    SelectionController.prototype.getSelectedRows = function () {\n        var selectedRows = [];\n        utils_1._.iterateObject(this.selectedNodes, function (key, rowNode) {\n            if (rowNode && rowNode.data) {\n                selectedRows.push(rowNode.data);\n            }\n        });\n        return selectedRows;\n    };\n    SelectionController.prototype.removeGroupsFromSelection = function () {\n        var _this = this;\n        utils_1._.iterateObject(this.selectedNodes, function (key, rowNode) {\n            if (rowNode && rowNode.group) {\n                _this.selectedNodes[rowNode.id] = undefined;\n            }\n        });\n    };\n    // should only be called if groupSelectsChildren=true\n    SelectionController.prototype.updateGroupsFromChildrenSelections = function (changedPath) {\n        // we only do this when group selection state depends on selected children\n        if (!this.gridOptionsWrapper.isGroupSelectsChildren()) {\n            return;\n        }\n        // also only do it if CSRM (code should never allow this anyway)\n        if (this.rowModel.getType() !== constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            return;\n        }\n        var clientSideRowModel = this.rowModel;\n        var rootNode = clientSideRowModel.getRootNode();\n        if (!changedPath) {\n            changedPath = new changedPath_1.ChangedPath(true, rootNode);\n            changedPath.setInactive();\n        }\n        changedPath.forEachChangedNodeDepthFirst(function (rowNode) {\n            if (rowNode !== rootNode) {\n                rowNode.calculateSelectedFromChildren();\n            }\n        });\n        // clientSideRowModel.getTopLevelNodes()!.forEach((rowNode: RowNode) => {\n        //     rowNode.depthFirstSearch((node) => {\n        //         if (node.group) {\n        //         }\n        //     });\n        // });\n    };\n    SelectionController.prototype.getNodeForIdIfSelected = function (id) {\n        return this.selectedNodes[id];\n    };\n    SelectionController.prototype.clearOtherNodes = function (rowNodeToKeepSelected) {\n        var _this = this;\n        var groupsToRefresh = {};\n        var updatedCount = 0;\n        utils_1._.iterateObject(this.selectedNodes, function (key, otherRowNode) {\n            if (otherRowNode && otherRowNode.id !== rowNodeToKeepSelected.id) {\n                var rowNode = _this.selectedNodes[otherRowNode.id];\n                updatedCount += rowNode.setSelectedParams({\n                    newValue: false,\n                    clearSelection: false,\n                    suppressFinishActions: true\n                });\n                if (_this.groupSelectsChildren && otherRowNode.parent) {\n                    groupsToRefresh[otherRowNode.parent.id] = otherRowNode.parent;\n                }\n            }\n        });\n        utils_1._.iterateObject(groupsToRefresh, function (key, group) {\n            group.calculateSelectedFromChildren();\n        });\n        return updatedCount;\n    };\n    SelectionController.prototype.onRowSelected = function (event) {\n        var rowNode = event.node;\n        // we do not store the group rows when the groups select children\n        if (this.groupSelectsChildren && rowNode.group) {\n            return;\n        }\n        if (rowNode.isSelected()) {\n            this.selectedNodes[rowNode.id] = rowNode;\n        }\n        else {\n            this.selectedNodes[rowNode.id] = undefined;\n        }\n    };\n    SelectionController.prototype.syncInRowNode = function (rowNode, oldNode) {\n        this.syncInOldRowNode(rowNode, oldNode);\n        this.syncInNewRowNode(rowNode);\n    };\n    // if the id has changed for the node, then this means the rowNode\n    // is getting used for a different data item, which breaks\n    // our selectedNodes, as the node now is mapped by the old id\n    // which is inconsistent. so to keep the old node as selected,\n    // we swap in the clone (with the old id and old data). this means\n    // the oldNode is effectively a daemon we keep a reference to,\n    // so if client calls api.getSelectedNodes(), it gets the daemon\n    // in the result. when the client un-selects, the reference to the\n    // daemon is removed. the daemon, because it's an oldNode, is not\n    // used by the grid for rendering, it's a copy of what the node used\n    // to be like before the id was changed.\n    SelectionController.prototype.syncInOldRowNode = function (rowNode, oldNode) {\n        var oldNodeHasDifferentId = utils_1._.exists(oldNode) && (rowNode.id !== oldNode.id);\n        if (oldNodeHasDifferentId) {\n            var oldNodeSelected = utils_1._.exists(this.selectedNodes[oldNode.id]);\n            if (oldNodeSelected) {\n                this.selectedNodes[oldNode.id] = oldNode;\n            }\n        }\n    };\n    SelectionController.prototype.syncInNewRowNode = function (rowNode) {\n        if (utils_1._.exists(this.selectedNodes[rowNode.id])) {\n            rowNode.setSelectedInitialValue(true);\n            this.selectedNodes[rowNode.id] = rowNode;\n        }\n        else {\n            rowNode.setSelectedInitialValue(false);\n        }\n    };\n    SelectionController.prototype.reset = function () {\n        this.logger.log('reset');\n        this.selectedNodes = {};\n        this.lastSelectedNode = null;\n    };\n    // returns a list of all nodes at 'best cost' - a feature to be used\n    // with groups / trees. if a group has all it's children selected,\n    // then the group appears in the result, but not the children.\n    // Designed for use with 'children' as the group selection type,\n    // where groups don't actually appear in the selection normally.\n    SelectionController.prototype.getBestCostNodeSelection = function () {\n        if (this.rowModel.getType() !== constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            console.warn('getBestCostNodeSelection is only available when using normal row model');\n        }\n        var clientSideRowModel = this.rowModel;\n        var topLevelNodes = clientSideRowModel.getTopLevelNodes();\n        if (topLevelNodes === null) {\n            console.warn('selectAll not available doing rowModel=virtual');\n            return;\n        }\n        var result = [];\n        // recursive function, to find the selected nodes\n        function traverse(nodes) {\n            for (var i = 0, l = nodes.length; i < l; i++) {\n                var node = nodes[i];\n                if (node.isSelected()) {\n                    result.push(node);\n                }\n                else {\n                    // if not selected, then if it's a group, and the group\n                    // has children, continue to search for selections\n                    if (node.group && node.children) {\n                        traverse(node.children);\n                    }\n                }\n            }\n        }\n        traverse(topLevelNodes);\n        return result;\n    };\n    SelectionController.prototype.setRowModel = function (rowModel) {\n        this.rowModel = rowModel;\n    };\n    SelectionController.prototype.isEmpty = function () {\n        var count = 0;\n        utils_1._.iterateObject(this.selectedNodes, function (nodeId, rowNode) {\n            if (rowNode) {\n                count++;\n            }\n        });\n        return count === 0;\n    };\n    SelectionController.prototype.deselectAllRowNodes = function (justFiltered) {\n        if (justFiltered === void 0) { justFiltered = false; }\n        var callback = function (rowNode) { return rowNode.selectThisNode(false); };\n        var rowModelClientSide = this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        if (justFiltered) {\n            if (!rowModelClientSide) {\n                console.error('ag-Grid: selecting just filtered only works with In Memory Row Model');\n                return;\n            }\n            var clientSideRowModel = this.rowModel;\n            clientSideRowModel.forEachNodeAfterFilter(callback);\n        }\n        else {\n            utils_1._.iterateObject(this.selectedNodes, function (id, rowNode) {\n                // remember the reference can be to null, as we never 'delete' from the map\n                if (rowNode) {\n                    callback(rowNode);\n                }\n            });\n            // this clears down the map (whereas above only sets the items in map to 'undefined')\n            this.reset();\n        }\n        // the above does not clean up the parent rows if they are selected\n        if (rowModelClientSide && this.groupSelectsChildren) {\n            this.updateGroupsFromChildrenSelections();\n        }\n        var event = {\n            type: events_1.Events.EVENT_SELECTION_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    SelectionController.prototype.selectAllRowNodes = function (justFiltered) {\n        if (justFiltered === void 0) { justFiltered = false; }\n        if (this.rowModel.getType() !== constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            throw new Error(\"selectAll only available with normal row model, ie not \" + this.rowModel.getType());\n        }\n        var clientSideRowModel = this.rowModel;\n        var callback = function (rowNode) { return rowNode.selectThisNode(true); };\n        if (justFiltered) {\n            clientSideRowModel.forEachNodeAfterFilter(callback);\n        }\n        else {\n            clientSideRowModel.forEachNode(callback);\n        }\n        // the above does not clean up the parent rows if they are selected\n        if (this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE && this.groupSelectsChildren) {\n            this.updateGroupsFromChildrenSelections();\n        }\n        var event = {\n            type: events_1.Events.EVENT_SELECTION_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.selectNode = function (rowNode, tryMulti) {\n        if (rowNode) {\n            rowNode.setSelectedParams({ newValue: true, clearSelection: !tryMulti });\n        }\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.deselectIndex = function (rowIndex) {\n        var node = this.rowModel.getRow(rowIndex);\n        this.deselectNode(node);\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.deselectNode = function (rowNode) {\n        if (rowNode) {\n            rowNode.setSelectedParams({ newValue: false, clearSelection: false });\n        }\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.selectIndex = function (index, tryMulti) {\n        var node = this.rowModel.getRow(index);\n        this.selectNode(node, tryMulti);\n    };\n    __decorate([\n        context_3.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], SelectionController.prototype, \"eventService\", void 0);\n    __decorate([\n        context_3.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], SelectionController.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_3.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SelectionController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_3.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], SelectionController.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_3.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], SelectionController.prototype, \"gridApi\", void 0);\n    __decorate([\n        __param(0, context_2.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectionController.prototype, \"setBeans\", null);\n    __decorate([\n        context_4.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectionController.prototype, \"init\", null);\n    SelectionController = __decorate([\n        context_1.Bean('selectionController')\n    ], SelectionController);\n    return SelectionController;\n}());\nexports.SelectionController = SelectionController;\n"},"lineCount":363}},"error":null,"hash":"03e74262a89b0c3559b6617517b69351","cacheData":{"env":{}}}